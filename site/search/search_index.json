{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"jypyter \u00b6 Project Jupyter \u65e8\u5728\u4e3a\u6570\u5341\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5f00\u653e\u6807\u51c6\u548c\u670d\u52a1\u3002 Lorenz \u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u7b14\u8bb0\u672c Jupyter \u7b14\u8bb0\u672c \u00b6 Jupyter Notebook \u662f\u4e00\u4e2a\u5f00\u6e90 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\uff0c\u65b9\u7a0b\u5f0f\uff0c\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u7528\u9014\u5305\u62ec\uff1a\u6570\u636e\u6e05\u7406\u548c\u8f6c\u6362\uff0c\u6570\u503c\u6a21\u62df\uff0c\u7edf\u8ba1\u5efa\u6a21\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u673a\u5668\u5b66\u4e60\u7b49\u7b49\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bd5\u7528\u5b89\u88c5\u7b14\u8bb0\u672c \u9009\u62e9\u7684\u8bed\u8a00 \u00b6 \u8be5\u7b14\u8bb0\u672c\u652f\u6301 40 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Python\uff0cR\uff0cJulia \u548c Scala\u3002 \u5206\u4eab\u7b14\u8bb0\u672c \u00b6 \u53ef\u4ee5\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\uff0cDropbox\uff0cGitHub \u548c Jupyter Notebook Viewer \u4e0e\u5176\u4ed6\u4eba\u5171\u4eab\u7b14\u8bb0\u672c\u3002 \u4e92\u52a8\u8f93\u51fa \u00b6 \u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u751f\u6210\u4e30\u5bcc\u7684\u4ea4\u4e92\u5f0f\u8f93\u51fa\uff1aHTML\uff0c\u56fe\u50cf\uff0c\u89c6\u9891\uff0cLaTeX \u548c\u81ea\u5b9a\u4e49 MIME \u7c7b\u578b\u3002 \u5927\u6570\u636e\u96c6\u6210 \u00b6 \u5229\u7528 Python\uff0cR \u548c Scala \u7b49\u5927\u6570\u636e\u5de5\u5177\uff0c\u5982 Apache Spark\u3002 \u4f7f\u7528 pandas\uff0cscikit-learn\uff0cggplot2\uff0cTensorFlow \u63a2\u7d22\u76f8\u540c\u7684\u6570\u636e\u3002 jupyterhub \u00b6 \u7b14\u8bb0\u672c\u7535\u8111\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1 \u53ef\u63d2\u62d4\u8eab\u4efd\u9a8c\u8bc1 \u00b6 \u4f7f\u7528 PAM\uff0cOAuth \u7ba1\u7406\u7528\u6237\u548c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u6216\u4e0e\u60a8\u81ea\u5df1\u7684\u76ee\u5f55\u670d\u52a1\u7cfb\u7edf\u96c6\u6210\u3002 \u96c6\u4e2d\u90e8\u7f72 \u00b6 \u5c06 Jupyter Notebook \u90e8\u7f72\u5230\u7ec4\u7ec7\u4e2d\u7684\u6570\u5343\u540d\u7528\u6237\uff0c\u65e0\u8bba\u662f\u5728\u7ad9\u70b9\u5185\u8fd8\u662f\u7ad9\u70b9\u5916\u7684\u96c6\u4e2d\u5f0f\u57fa\u7840\u67b6\u6784\u3002 \u5bb9\u5668\u53cb\u597d \u00b6 \u4f7f\u7528 Docker \u548c Kubernetes \u6269\u5c55\u90e8\u7f72\uff0c\u9694\u79bb\u7528\u6237\u8fdb\u7a0b\u5e76\u7b80\u5316\u8f6f\u4ef6\u5b89\u88c5\u3002 \u4ee3\u7801\u7b26\u5408\u6570\u636e \u00b6 \u5728\u6570\u636e\u65c1\u8fb9\u90e8\u7f72 Notebook\uff0c\u4ee5\u5728\u7ec4\u7ec7\u5185\u63d0\u4f9b\u7edf\u4e00\u7684\u8f6f\u4ef6\u7ba1\u7406\u548c\u6570\u636e\u8bbf\u95ee\u3002 \u4e86\u89e3\u6709\u5173 JupyterHub \u7684\u66f4\u591a\u4fe1\u606f \u76ee\u524d\u6b63\u5728\u4f7f\u7528\u4e2d \u00b6 Google Microsoft IBM Bloomberg OReilly Anaconda Rackspace SoundCloud Quantopian NetApp Carpentry Janelia CodeNeuro NSite CoCalc BrynMawr CalPoly Berkeley Sheffield Washington Clemson Michigan State University Northwestern University NYU NASA Ayasdi The Data Incubator \u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6 \u00b6 Jupyter \u7b14\u8bb0\u672c\u57fa\u4e8e\u4e00\u5957\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6\u3002 \u5c06 HTML \u548c CSS \u89c6\u4e3a Web \u4e0a\u7684\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u3002 \u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5f00\u653e\u6807\u51c6\u6765\u6784\u5efa\u5177\u6709\u5d4c\u5165\u5f0f\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u3002","title":"jypyter"},{"location":"#jypyter","text":"Project Jupyter \u65e8\u5728\u4e3a\u6570\u5341\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5f00\u653e\u6807\u51c6\u548c\u670d\u52a1\u3002 Lorenz \u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u7b14\u8bb0\u672c","title":"jypyter"},{"location":"#jupyter","text":"Jupyter Notebook \u662f\u4e00\u4e2a\u5f00\u6e90 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\uff0c\u65b9\u7a0b\u5f0f\uff0c\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u7528\u9014\u5305\u62ec\uff1a\u6570\u636e\u6e05\u7406\u548c\u8f6c\u6362\uff0c\u6570\u503c\u6a21\u62df\uff0c\u7edf\u8ba1\u5efa\u6a21\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u673a\u5668\u5b66\u4e60\u7b49\u7b49\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bd5\u7528\u5b89\u88c5\u7b14\u8bb0\u672c","title":"Jupyter \u7b14\u8bb0\u672c"},{"location":"#_1","text":"\u8be5\u7b14\u8bb0\u672c\u652f\u6301 40 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Python\uff0cR\uff0cJulia \u548c Scala\u3002","title":"\u9009\u62e9\u7684\u8bed\u8a00"},{"location":"#_2","text":"\u53ef\u4ee5\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\uff0cDropbox\uff0cGitHub \u548c Jupyter Notebook Viewer \u4e0e\u5176\u4ed6\u4eba\u5171\u4eab\u7b14\u8bb0\u672c\u3002","title":"\u5206\u4eab\u7b14\u8bb0\u672c"},{"location":"#_3","text":"\u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u751f\u6210\u4e30\u5bcc\u7684\u4ea4\u4e92\u5f0f\u8f93\u51fa\uff1aHTML\uff0c\u56fe\u50cf\uff0c\u89c6\u9891\uff0cLaTeX \u548c\u81ea\u5b9a\u4e49 MIME \u7c7b\u578b\u3002","title":"\u4e92\u52a8\u8f93\u51fa"},{"location":"#_4","text":"\u5229\u7528 Python\uff0cR \u548c Scala \u7b49\u5927\u6570\u636e\u5de5\u5177\uff0c\u5982 Apache Spark\u3002 \u4f7f\u7528 pandas\uff0cscikit-learn\uff0cggplot2\uff0cTensorFlow \u63a2\u7d22\u76f8\u540c\u7684\u6570\u636e\u3002","title":"\u5927\u6570\u636e\u96c6\u6210"},{"location":"#jupyterhub","text":"\u7b14\u8bb0\u672c\u7535\u8111\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1","title":"jupyterhub"},{"location":"#_5","text":"\u4f7f\u7528 PAM\uff0cOAuth \u7ba1\u7406\u7528\u6237\u548c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u6216\u4e0e\u60a8\u81ea\u5df1\u7684\u76ee\u5f55\u670d\u52a1\u7cfb\u7edf\u96c6\u6210\u3002","title":"\u53ef\u63d2\u62d4\u8eab\u4efd\u9a8c\u8bc1"},{"location":"#_6","text":"\u5c06 Jupyter Notebook \u90e8\u7f72\u5230\u7ec4\u7ec7\u4e2d\u7684\u6570\u5343\u540d\u7528\u6237\uff0c\u65e0\u8bba\u662f\u5728\u7ad9\u70b9\u5185\u8fd8\u662f\u7ad9\u70b9\u5916\u7684\u96c6\u4e2d\u5f0f\u57fa\u7840\u67b6\u6784\u3002","title":"\u96c6\u4e2d\u90e8\u7f72"},{"location":"#_7","text":"\u4f7f\u7528 Docker \u548c Kubernetes \u6269\u5c55\u90e8\u7f72\uff0c\u9694\u79bb\u7528\u6237\u8fdb\u7a0b\u5e76\u7b80\u5316\u8f6f\u4ef6\u5b89\u88c5\u3002","title":"\u5bb9\u5668\u53cb\u597d"},{"location":"#_8","text":"\u5728\u6570\u636e\u65c1\u8fb9\u90e8\u7f72 Notebook\uff0c\u4ee5\u5728\u7ec4\u7ec7\u5185\u63d0\u4f9b\u7edf\u4e00\u7684\u8f6f\u4ef6\u7ba1\u7406\u548c\u6570\u636e\u8bbf\u95ee\u3002 \u4e86\u89e3\u6709\u5173 JupyterHub \u7684\u66f4\u591a\u4fe1\u606f","title":"\u4ee3\u7801\u7b26\u5408\u6570\u636e"},{"location":"#_9","text":"Google Microsoft IBM Bloomberg OReilly Anaconda Rackspace SoundCloud Quantopian NetApp Carpentry Janelia CodeNeuro NSite CoCalc BrynMawr CalPoly Berkeley Sheffield Washington Clemson Michigan State University Northwestern University NYU NASA Ayasdi The Data Incubator","title":"\u76ee\u524d\u6b63\u5728\u4f7f\u7528\u4e2d"},{"location":"#_10","text":"Jupyter \u7b14\u8bb0\u672c\u57fa\u4e8e\u4e00\u5957\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6\u3002 \u5c06 HTML \u548c CSS \u89c6\u4e3a Web \u4e0a\u7684\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u3002 \u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5f00\u653e\u6807\u51c6\u6765\u6784\u5efa\u5177\u6709\u5d4c\u5165\u5f0f\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6"},{"location":"About-Us/","text":"\u5173\u4e8e\u6211\u4eec \u00b6 Some information about the Jupyter Project and Community Project Jupyter is a non-profit, open-source project, born out of the IPython Project in 2014 as it evolved to support interactive data science and scientific computing across all programming languages. Jupyter will always be 100% open-source software, free for all to use and released under the liberal terms of the modified BSD license. Jupyter is developed in the open on GitHub, through the consensus of the Jupyter community. For more information on our governance approach, please see our Governance Document. All online and in-person interactions and communications directly related to the project are covered by the Jupyter Code of Conduct. This Code of Conduct sets expectations to enable a diverse community of users and contributors to participate in the project with respect and safety. steering committee iconSteering Council The role of the Jupyter Steering Council is to ensure, through working with and serving the broader Jupyter community, the long-term well-being of the project, both technically and as a community. The Jupyter Steering Council currently consists of the following members (in alphabetical order). Damian Avila's avatar picture Damian AvilaAnaconda, Inc. @damianavila on GitHubMatthias Bussonnier's avatar picture Matthias BussonnierUC Merced @Carreau on GitHubSylvain Corlay's avatar picture Sylvain CorlayQuantStack @sylvaincorlay on GitHubAfshin Darian's avatar picture Afshin DarianTwo Sigma @afshin on GitHubBrian Granger's avatar picture Brian GrangerCal Poly, San Luis Obispo @ellisonbg on GitHubJason Grout's avatar picture Jason GroutBloomberg @jasongrout on GitHubJessica Hamrick's avatar picture Jessica HamrickDeepMind @jhamrick on GitHubPaul Ivanov's avatar picture Paul IvanovBloomberg @ivanov on GitHubKyle Kelley's avatar picture Kyle KelleyNetflix @rgbkrk on GitHubThomas Kluyver's avatar picture Thomas KluyverUniversity of Southampton @takluyver on GitHubPeter Parente's avatar picture Peter ParenteValassis Digital @parente on GitHubFernando Perez's avatar picture Fernando PerezUC Berkeley @fperez on GitHubMin Ragan-Kelley's avatar picture Min Ragan-KelleySimula Research Lab @minrk on GitHubAna Ruvalcaba's avatar picture Ana RuvalcabaCal Poly, San Luis Obispo @ruv7 on GitHubSteven Silvester's avatar picture Steven SilvesterJPMorgan Chase @blink1073 on GitHubCarol Willing's avatar picture Carol WillingCal Poly @willingc on GitHub Retired Steering Council Member Jonathan Frederic's avatar picture Jonathan FredericMember: 2016-2018 @jdfreder on GitHub sponsors Sponsors Project Jupyter receives direct funding from the following sources: helmsley trust logo sloan logo moore foundation logo google logo rackspace logo fastly logo EU logo microsoft logo institutional partnersInstitutional Partners Institutional Partners are organizations that support the project by employing Jupyter Steering Council members. Current Institutional Partners include: anaconda inc logo bloomberg logo netflix logo cal poly logo UC Berkeley logo QuantStack logo JPMorgan Chase logo Two Sigma logo microsoft logo Donations Jupyter will always be 100% open source software, free for all to use and released under the liberal terms of the modified BSD license. If you have found Project Jupyter to be useful in your work, research or company, please consider making a donation to the project commensurate with your resources. All donations will be used strictly to fund the development of Project Jupyter\u2019s open source software, documentation and community. Our donations are managed by the NumFOCUS Foundation, which is the legal and fiscal umbrella for the project. NumFOCUS is a 501(c)3 non-profit foundation; if you are subject to US Tax law, your contributions will be tax-deductible.","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"About-Us/#_1","text":"Some information about the Jupyter Project and Community Project Jupyter is a non-profit, open-source project, born out of the IPython Project in 2014 as it evolved to support interactive data science and scientific computing across all programming languages. Jupyter will always be 100% open-source software, free for all to use and released under the liberal terms of the modified BSD license. Jupyter is developed in the open on GitHub, through the consensus of the Jupyter community. For more information on our governance approach, please see our Governance Document. All online and in-person interactions and communications directly related to the project are covered by the Jupyter Code of Conduct. This Code of Conduct sets expectations to enable a diverse community of users and contributors to participate in the project with respect and safety. steering committee iconSteering Council The role of the Jupyter Steering Council is to ensure, through working with and serving the broader Jupyter community, the long-term well-being of the project, both technically and as a community. The Jupyter Steering Council currently consists of the following members (in alphabetical order). Damian Avila's avatar picture Damian AvilaAnaconda, Inc. @damianavila on GitHubMatthias Bussonnier's avatar picture Matthias BussonnierUC Merced @Carreau on GitHubSylvain Corlay's avatar picture Sylvain CorlayQuantStack @sylvaincorlay on GitHubAfshin Darian's avatar picture Afshin DarianTwo Sigma @afshin on GitHubBrian Granger's avatar picture Brian GrangerCal Poly, San Luis Obispo @ellisonbg on GitHubJason Grout's avatar picture Jason GroutBloomberg @jasongrout on GitHubJessica Hamrick's avatar picture Jessica HamrickDeepMind @jhamrick on GitHubPaul Ivanov's avatar picture Paul IvanovBloomberg @ivanov on GitHubKyle Kelley's avatar picture Kyle KelleyNetflix @rgbkrk on GitHubThomas Kluyver's avatar picture Thomas KluyverUniversity of Southampton @takluyver on GitHubPeter Parente's avatar picture Peter ParenteValassis Digital @parente on GitHubFernando Perez's avatar picture Fernando PerezUC Berkeley @fperez on GitHubMin Ragan-Kelley's avatar picture Min Ragan-KelleySimula Research Lab @minrk on GitHubAna Ruvalcaba's avatar picture Ana RuvalcabaCal Poly, San Luis Obispo @ruv7 on GitHubSteven Silvester's avatar picture Steven SilvesterJPMorgan Chase @blink1073 on GitHubCarol Willing's avatar picture Carol WillingCal Poly @willingc on GitHub Retired Steering Council Member Jonathan Frederic's avatar picture Jonathan FredericMember: 2016-2018 @jdfreder on GitHub sponsors Sponsors Project Jupyter receives direct funding from the following sources: helmsley trust logo sloan logo moore foundation logo google logo rackspace logo fastly logo EU logo microsoft logo institutional partnersInstitutional Partners Institutional Partners are organizations that support the project by employing Jupyter Steering Council members. Current Institutional Partners include: anaconda inc logo bloomberg logo netflix logo cal poly logo UC Berkeley logo QuantStack logo JPMorgan Chase logo Two Sigma logo microsoft logo Donations Jupyter will always be 100% open source software, free for all to use and released under the liberal terms of the modified BSD license. If you have found Project Jupyter to be useful in your work, research or company, please consider making a donation to the project commensurate with your resources. All donations will be used strictly to fund the development of Project Jupyter\u2019s open source software, documentation and community. Our donations are managed by the NumFOCUS Foundation, which is the legal and fiscal umbrella for the project. NumFOCUS is a 501(c)3 non-profit foundation; if you are subject to US Tax law, your contributions will be tax-deductible.","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"Community/","text":"\u793e\u533a \u00b6 Stay Connected Project Jupyter offers a number of communication channels available to individuals interested in using and contributing to the project. Jupyter is a community of data enthusiasts who believe in the power of open tools and standards for education, research, and data analytics. We welcome contributions and contributors of all kinds - whether they come as contributions to code, participation in the community, opening issues and pointing out bugs, or simply sharing your work with your colleagues and friends. Join the Jupyter community If you\u2019re interested in joining the Jupyter community (yay!) we recommend checking out the Jupyter Contributing guide. This contains information about the different projects in the Jupyter ecosystem, the tools and skills that are useful for each project, and other ways that you can become a part of the Jupyter community. JupyterDays, JupyterCon, and other events Many members of the Jupyter community host events to connect others that use Jupyter and other tools in the open data analytics stack. For example, JupyterCon is an annual conference that brings together many different groups represented in the Jupyter Community. Jupyter Days are smaller, locally-organized events for learning and connecting with one another. For example, here\u2019s a post announcing Jupyter Days in Atlanta. If you\u2019d like to organize a Jupyter Days event in your community, please reach out! Participate online Jupyter also has a number of online communication channels to help keep in touch. As you interact with others in the Jupyter ecosystem, remember that we have a strong commitment to being an open, inclusive, and positive community. Please read the Jupyter Code of Conduct for guidance on how to interact with others in a way that makes the community thrive. Below is a short list of gitter channels, email listservs, and github repositories where you can get involved. We always welcome participation in the Jupyter community. github icon Jupyter on GitHub A GitHub repository to ask general questions about Jupyter software. View mailing list icon Jupyter Discourse A Discourse Forum for a multitude of Jupyter topics View mailing list icon Jupyter General Mailing List A Google Group for general discussions of Jupyter's use. View education mailing list icon Jupyter in Education Mailing List A Google Group for general discussions of Jupyter's use in education. View mailing list icon Jupyter for Research Facilities A Google Group for discussions of Jupyter's use at scientific research facilities (such as X-ray light sources, observatories, supercomputers, etc.). View gitter icon Jupyter Gitter Chatroom A real-time chatroom, for general development related discussions. View stack overflow icon Jupyter on Stack Overflow A popular third party site for programmers to ask and answer questions about Jupyter. View documentation icon Jupyter Community Guides Information about community, communications and governance. View documentation icon Jupyter Contributor Guides Contribution guidelines View Home Install About Us Community Documentation NBViewer JupyterHub Widgets Blog Copyright \u00a9 2019 Project Jupyter \u2013 Last updated Wed, Mar 20, 2019 The Jupyter Trademark is registered with the U.S. Patent & Trademark Office.","title":"\u793e\u533a"},{"location":"Community/#_1","text":"Stay Connected Project Jupyter offers a number of communication channels available to individuals interested in using and contributing to the project. Jupyter is a community of data enthusiasts who believe in the power of open tools and standards for education, research, and data analytics. We welcome contributions and contributors of all kinds - whether they come as contributions to code, participation in the community, opening issues and pointing out bugs, or simply sharing your work with your colleagues and friends. Join the Jupyter community If you\u2019re interested in joining the Jupyter community (yay!) we recommend checking out the Jupyter Contributing guide. This contains information about the different projects in the Jupyter ecosystem, the tools and skills that are useful for each project, and other ways that you can become a part of the Jupyter community. JupyterDays, JupyterCon, and other events Many members of the Jupyter community host events to connect others that use Jupyter and other tools in the open data analytics stack. For example, JupyterCon is an annual conference that brings together many different groups represented in the Jupyter Community. Jupyter Days are smaller, locally-organized events for learning and connecting with one another. For example, here\u2019s a post announcing Jupyter Days in Atlanta. If you\u2019d like to organize a Jupyter Days event in your community, please reach out! Participate online Jupyter also has a number of online communication channels to help keep in touch. As you interact with others in the Jupyter ecosystem, remember that we have a strong commitment to being an open, inclusive, and positive community. Please read the Jupyter Code of Conduct for guidance on how to interact with others in a way that makes the community thrive. Below is a short list of gitter channels, email listservs, and github repositories where you can get involved. We always welcome participation in the Jupyter community. github icon Jupyter on GitHub A GitHub repository to ask general questions about Jupyter software. View mailing list icon Jupyter Discourse A Discourse Forum for a multitude of Jupyter topics View mailing list icon Jupyter General Mailing List A Google Group for general discussions of Jupyter's use. View education mailing list icon Jupyter in Education Mailing List A Google Group for general discussions of Jupyter's use in education. View mailing list icon Jupyter for Research Facilities A Google Group for discussions of Jupyter's use at scientific research facilities (such as X-ray light sources, observatories, supercomputers, etc.). View gitter icon Jupyter Gitter Chatroom A real-time chatroom, for general development related discussions. View stack overflow icon Jupyter on Stack Overflow A popular third party site for programmers to ask and answer questions about Jupyter. View documentation icon Jupyter Community Guides Information about community, communications and governance. View documentation icon Jupyter Contributor Guides Contribution guidelines View Home Install About Us Community Documentation NBViewer JupyterHub Widgets Blog Copyright \u00a9 2019 Project Jupyter \u2013 Last updated Wed, Mar 20, 2019 The Jupyter Trademark is registered with the U.S. Patent & Trademark Office.","title":"\u793e\u533a"},{"location":"Documentation/","text":"\u6587\u6863 \u00b6 Jupyter \u9879\u76ee\u7684\u6bcf\u4e2a\u5b58\u50a8\u5e93\u7684\u5b8c\u6574\u94fe\u63a5\u5217\u8868\u3002 \u901a\u7528\u6587\u6863 \u00b6 Project-wide \u6587\u6863 \u4e3a Jupyter \u505a\u8d21\u732e \u7528\u6237\u754c\u9762 \u00b6 JupyterLab Jupyter Notebook Jupyter Console Qt Console IPython \u00b6 IPython IPyParallel Traitlets \u5185\u6838 \u00b6 IPython IRkernel IJulia \u793e\u533a\u7ef4\u62a4\u5185\u6838 \u5c0f\u5de5\u5177 \u00b6 IPyWidgets/Jupyter Widgets widget-cookiecutter \u6240\u6709\u5c0f\u90e8\u4ef6\u9879\u76ee... \u7b14\u8bb0\u672c\u6587\u6863 \u00b6 nbconvert nbformat nbviewer JupyterHub \u00b6 JupyterHub Zero to JupyterHub nbgrader \u6240\u6709 JupyterHub \u9879\u76ee......... \u90e8\u7f72 \u00b6 Docker Stacks \u5185\u6838\u7f51\u5173 \u4f01\u4e1a\u7f51\u5173 \u57fa\u91d1\u4f1a \u00b6 Jupyter Client Jupyter Core Jupyter Alabaster Theme","title":"\u6587\u6863"},{"location":"Documentation/#_1","text":"Jupyter \u9879\u76ee\u7684\u6bcf\u4e2a\u5b58\u50a8\u5e93\u7684\u5b8c\u6574\u94fe\u63a5\u5217\u8868\u3002","title":"\u6587\u6863"},{"location":"Documentation/#_2","text":"Project-wide \u6587\u6863 \u4e3a Jupyter \u505a\u8d21\u732e","title":"\u901a\u7528\u6587\u6863"},{"location":"Documentation/#_3","text":"JupyterLab Jupyter Notebook Jupyter Console Qt Console","title":"\u7528\u6237\u754c\u9762"},{"location":"Documentation/#ipython","text":"IPython IPyParallel Traitlets","title":"IPython"},{"location":"Documentation/#_4","text":"IPython IRkernel IJulia \u793e\u533a\u7ef4\u62a4\u5185\u6838","title":"\u5185\u6838"},{"location":"Documentation/#_5","text":"IPyWidgets/Jupyter Widgets widget-cookiecutter \u6240\u6709\u5c0f\u90e8\u4ef6\u9879\u76ee...","title":"\u5c0f\u5de5\u5177"},{"location":"Documentation/#_6","text":"nbconvert nbformat nbviewer","title":"\u7b14\u8bb0\u672c\u6587\u6863"},{"location":"Documentation/#jupyterhub","text":"JupyterHub Zero to JupyterHub nbgrader \u6240\u6709 JupyterHub \u9879\u76ee.........","title":"JupyterHub"},{"location":"Documentation/#_7","text":"Docker Stacks \u5185\u6838\u7f51\u5173 \u4f01\u4e1a\u7f51\u5173","title":"\u90e8\u7f72"},{"location":"Documentation/#_8","text":"Jupyter Client Jupyter Core Jupyter Alabaster Theme","title":"\u57fa\u91d1\u4f1a"},{"location":"Documentation/Community/","text":"\u793e\u533a\u6307\u5357 \u00b6 Welcome to the Community Guides for Jupyter. These guides are intended to provide information about the Jupyter community such as background, events, and communication channels. As our community is highly dynamic, information may change, and we will do our best to keep it up to date. Weekly Dev meeting \u00b6 The core developers have weekly meetings to discuss and demo what they have been working on, discuss future plans, and bootstrap conversation. These meetings are public. The direct link to attend the meeting will be posted to the Hackpad before the meeting. Afterwards, the recording of the meeting will be posted to the IPython channel on YouTube. Jupyter/IPython meetings: Tuesdays at 9am PST JupyterLab meetings: Fridays at 9am PST Collaborative notes are taken before/during the meeting on Hackpad. Hackpads are organized by month. We will ping the dev-meeting-attendance Gitter channel 1-2 days before each meeting to know who is likely going to attend. Jupyter communications Blog https://blog.jupyter.org/ Newsletter https://newsletter.jupyter.org/ Website https://jupyter.org Twitter https://twitter.com/ProjectJupyter Mailing lists (Jupyter, Jupyter in Education) https://jupyter.org/community.html Governance Steering council: Information about the steering council and its members can be found on the Jupyter website. Jupyter Enhancement Proposal (JEP) process: Details about the process can be found in the jupyter/enhancement-proposals GitHub repo. Code of conduct Information can be found in the Jupyter Governance repo on GitHub.","title":"\u793e\u533a\u6307\u5357"},{"location":"Documentation/Community/#_1","text":"Welcome to the Community Guides for Jupyter. These guides are intended to provide information about the Jupyter community such as background, events, and communication channels. As our community is highly dynamic, information may change, and we will do our best to keep it up to date.","title":"\u793e\u533a\u6307\u5357"},{"location":"Documentation/Community/#weekly-dev-meeting","text":"The core developers have weekly meetings to discuss and demo what they have been working on, discuss future plans, and bootstrap conversation. These meetings are public. The direct link to attend the meeting will be posted to the Hackpad before the meeting. Afterwards, the recording of the meeting will be posted to the IPython channel on YouTube. Jupyter/IPython meetings: Tuesdays at 9am PST JupyterLab meetings: Fridays at 9am PST Collaborative notes are taken before/during the meeting on Hackpad. Hackpads are organized by month. We will ping the dev-meeting-attendance Gitter channel 1-2 days before each meeting to know who is likely going to attend. Jupyter communications Blog https://blog.jupyter.org/ Newsletter https://newsletter.jupyter.org/ Website https://jupyter.org Twitter https://twitter.com/ProjectJupyter Mailing lists (Jupyter, Jupyter in Education) https://jupyter.org/community.html Governance Steering council: Information about the steering council and its members can be found on the Jupyter website. Jupyter Enhancement Proposal (JEP) process: Details about the process can be found in the jupyter/enhancement-proposals GitHub repo. Code of conduct Information can be found in the Jupyter Governance repo on GitHub.","title":"Weekly Dev meeting"},{"location":"Documentation/Contributor/","text":"\u8d21\u732e\u8005\u6307\u5357 \u00b6 Developer Guide \u00b6 IPython Development Guide (source: old IPython wiki) Documentation Guide \u00b6 Communications Guide \u00b6 Whether you are a new, returning, or current contributor to Project Jupyter\u2019s subprojects or IPython, we welcome you. Project Jupyter has seen steady growth over the past several years, and it is wonderful to see the many ways people are using these projects. As a result of this rapid expansion, our project maintainers are balancing many requirements, needs, and resources. We ask contributors to take some time to become familiar with our contribution guides and spend some time learning about our project communication and workflow. The Contributor Guides and individual project documentation offer guidance. If you have a question, please ask us. Community Resources provides information on our commonly used communication methods. We are very pleased to have you as a contributor, and we hope you will find valuable your impact on the projects. Thank you for sharing your interests, ideas, and skills with us.","title":"\u8d21\u732e\u8005\u6307\u5357"},{"location":"Documentation/Contributor/#_1","text":"","title":"\u8d21\u732e\u8005\u6307\u5357"},{"location":"Documentation/Contributor/#developer-guide","text":"IPython Development Guide (source: old IPython wiki)","title":"Developer Guide"},{"location":"Documentation/Contributor/#documentation-guide","text":"","title":"Documentation Guide"},{"location":"Documentation/Contributor/#communications-guide","text":"Whether you are a new, returning, or current contributor to Project Jupyter\u2019s subprojects or IPython, we welcome you. Project Jupyter has seen steady growth over the past several years, and it is wonderful to see the many ways people are using these projects. As a result of this rapid expansion, our project maintainers are balancing many requirements, needs, and resources. We ask contributors to take some time to become familiar with our contribution guides and spend some time learning about our project communication and workflow. The Contributor Guides and individual project documentation offer guidance. If you have a question, please ask us. Community Resources provides information on our commonly used communication methods. We are very pleased to have you as a contributor, and we hope you will find valuable your impact on the projects. Thank you for sharing your interests, ideas, and skills with us.","title":"Communications Guide"},{"location":"Documentation/IPython/","text":"IPython \u00b6 Contents Description Background Resources ../_images/ipy_logo.png Description IPython provides a rich architecture for interactive computing with: A powerful interactive shell. A kernel for Jupyter. Support for interactive data visualization and use of GUI toolkits. Flexible, embeddable interpreters to load into your own projects. Easy to use, high performance tools for parallel computing. Background IPython is a growing project, with increasingly language-agnostic components. IPython 3.x was the last monolithic release of IPython, containing the notebook server, qtconsole, etc. As of IPython 4.0, the language-agnostic parts of the project: the notebook format, message protocol, qtconsole, notebook web application, etc. have moved to new projects under the name Jupyter. IPython itself is focused on interactive Python, part of which is providing a Python kernel for Jupyter. Resources IPython website Gallery of interesting notebooks IPython documentation","title":"IPython"},{"location":"Documentation/IPython/#ipython","text":"Contents Description Background Resources ../_images/ipy_logo.png Description IPython provides a rich architecture for interactive computing with: A powerful interactive shell. A kernel for Jupyter. Support for interactive data visualization and use of GUI toolkits. Flexible, embeddable interpreters to load into your own projects. Easy to use, high performance tools for parallel computing. Background IPython is a growing project, with increasingly language-agnostic components. IPython 3.x was the last monolithic release of IPython, containing the notebook server, qtconsole, etc. As of IPython 4.0, the language-agnostic parts of the project: the notebook format, message protocol, qtconsole, notebook web application, etc. have moved to new projects under the name Jupyter. IPython itself is focused on interactive Python, part of which is providing a Python kernel for Jupyter. Resources IPython website Gallery of interesting notebooks IPython documentation","title":"IPython"},{"location":"Documentation/Release/","text":"\u53d1\u884c\u8bf4\u660e \u00b6 Each project\u2019s documentation and GitHub repository has information about releases and changes from the prior release. Note Coming Soon We\u2019re actively working on a graphic that displays each project, their current release, and a link to the changelog. Thanks for your patience.","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"Documentation/Release/#_1","text":"Each project\u2019s documentation and GitHub repository has information about releases and changes from the prior release. Note Coming Soon We\u2019re actively working on a graphic that displays each project, their current release, and a link to the changelog. Thanks for your patience.","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/","text":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c \u00b6 \u5185\u5bb9 \u00b6 Abstract Terminal IPython The IPython Kernel Notebooks Exporting notebooks to other formats IPython.parallel \u62bd\u8c61 \u00b6 This section focuses on IPython and Jupyter notebook and how they interact. When we discuss IPython, we talk about two fundamental roles: Terminal IPython as the familiar REPL The IPython kernel that provides computation and communication with the frontend interfaces, like the notebook Jupyter Notebook and its flexible interface extends the notebook beyond code to visualization, multimedia, collaboration, and more. \u7ec8\u7aef IPython \u00b6 When you type ipython, you get the original IPython interface, running in the terminal. It does something like this: while True: code = input(\">>> \") exec(code) Of course, it\u2019s much more complex, because it has to deal with multi-line code, tab completion using readline, magic commands, and so on. But the model is like code example: prompt the user for some code, and when they\u2019ve entered it, execute it in the same process. This model is often called a REPL, or Read-Eval-Print-Loop. IPython \u5185\u6838 \u00b6 All the other interfaces \u2014- the Notebook, the Qt console, ipython console in the terminal, and third party interfaces \u2014- use the IPython Kernel. The IPython Kernel is a separate process which is responsible for running user code, and things like computing possible completions. Frontends, like the notebook or the Qt console, communicate with the IPython Kernel using JSON messages sent over ZeroMQ sockets; the protocol used between the frontends and the IPython Kernel is described in Messaging in Jupyter. The core execution machinery for the kernel is shared with terminal IPython: A kernel process can be connected to more than one frontend simultaneously. In this case, the different frontends will have access to the same variables. This design was intended to allow easy development of different frontends based on the same kernel, but it also made it possible to support new languages in the same frontends, by developing kernels in those languages, and we are refining IPython to make that more practical. Today, there are two ways to develop a kernel for another language. Wrapper kernels reuse the communications machinery from IPython, and implement only the core execution part. Native kernels implement execution and communications in the target language: Wrapper kernels are easier to write quickly for languages that have good Python wrappers, like octave_kernel, or languages where it\u2019s impractical to implement the communications machinery, like bash_kernel. Native kernels are likely to be better maintained by the community using them, like IJulia or IHaskell. See also Making kernels for Jupyter Kernels \u7b14\u8bb0\u672c \u00b6 The Notebook frontend does something extra. In addition to running your code, it stores code and output, together with markdown notes, in an editable document called a notebook. When you save it, this is sent from your browser to the notebook server, which saves it on disk as a JSON file with a .ipynb extension. The notebook server, not the kernel, is responsible for saving and loading notebooks, so you can edit notebooks even if you don\u2019t have the kernel for that language\u2014you just won\u2019t be able to run code. The kernel doesn\u2019t know anything about the notebook document: it just gets sent cells of code to execute when the user runs them. \u5c06\u7b14\u8bb0\u672c\u5bfc\u51fa\u4e3a\u5176\u4ed6\u683c\u5f0f \u00b6 The Nbconvert tool in Jupyter converts notebook files to other formats, such as HTML, LaTeX, or reStructuredText. This conversion goes through a series of steps: Preprocessors modify the notebook in memory. E.g. ExecutePreprocessor runs the code in the notebook and updates the output. An exporter converts the notebook to another file format. Most of the exporters use templates for this. Postprocessors work on the file produced by exporting. The nbviewer website uses nbconvert with the HTML exporter. When you give it a URL, it fetches the notebook from that URL, converts it to HTML, and serves that HTML to you. IPython.parallel \u00b6 IPython \u8fd8\u5305\u62ec\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\uff0cIPython.parallel\u3002 \u8fd9\u5141\u8bb8\u60a8\u63a7\u5236\u8bb8\u591a\u5355\u72ec\u7684\u5f15\u64ce\uff0c\u8fd9\u4e9b\u5f15\u64ce\u662f\u4e0a\u8ff0 IPython \u5185\u6838\u7684\u6269\u5c55\u7248\u672c\u3002","title":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#ipython-jupyter-notebook","text":"","title":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#_1","text":"Abstract Terminal IPython The IPython Kernel Notebooks Exporting notebooks to other formats IPython.parallel","title":"\u5185\u5bb9"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#_2","text":"This section focuses on IPython and Jupyter notebook and how they interact. When we discuss IPython, we talk about two fundamental roles: Terminal IPython as the familiar REPL The IPython kernel that provides computation and communication with the frontend interfaces, like the notebook Jupyter Notebook and its flexible interface extends the notebook beyond code to visualization, multimedia, collaboration, and more.","title":"\u62bd\u8c61"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#ipython","text":"When you type ipython, you get the original IPython interface, running in the terminal. It does something like this: while True: code = input(\">>> \") exec(code) Of course, it\u2019s much more complex, because it has to deal with multi-line code, tab completion using readline, magic commands, and so on. But the model is like code example: prompt the user for some code, and when they\u2019ve entered it, execute it in the same process. This model is often called a REPL, or Read-Eval-Print-Loop.","title":"\u7ec8\u7aef IPython"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#ipython_1","text":"All the other interfaces \u2014- the Notebook, the Qt console, ipython console in the terminal, and third party interfaces \u2014- use the IPython Kernel. The IPython Kernel is a separate process which is responsible for running user code, and things like computing possible completions. Frontends, like the notebook or the Qt console, communicate with the IPython Kernel using JSON messages sent over ZeroMQ sockets; the protocol used between the frontends and the IPython Kernel is described in Messaging in Jupyter. The core execution machinery for the kernel is shared with terminal IPython: A kernel process can be connected to more than one frontend simultaneously. In this case, the different frontends will have access to the same variables. This design was intended to allow easy development of different frontends based on the same kernel, but it also made it possible to support new languages in the same frontends, by developing kernels in those languages, and we are refining IPython to make that more practical. Today, there are two ways to develop a kernel for another language. Wrapper kernels reuse the communications machinery from IPython, and implement only the core execution part. Native kernels implement execution and communications in the target language: Wrapper kernels are easier to write quickly for languages that have good Python wrappers, like octave_kernel, or languages where it\u2019s impractical to implement the communications machinery, like bash_kernel. Native kernels are likely to be better maintained by the community using them, like IJulia or IHaskell. See also Making kernels for Jupyter Kernels","title":"IPython \u5185\u6838"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#_3","text":"The Notebook frontend does something extra. In addition to running your code, it stores code and output, together with markdown notes, in an editable document called a notebook. When you save it, this is sent from your browser to the notebook server, which saves it on disk as a JSON file with a .ipynb extension. The notebook server, not the kernel, is responsible for saving and loading notebooks, so you can edit notebooks even if you don\u2019t have the kernel for that language\u2014you just won\u2019t be able to run code. The kernel doesn\u2019t know anything about the notebook document: it just gets sent cells of code to execute when the user runs them.","title":"\u7b14\u8bb0\u672c"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#_4","text":"The Nbconvert tool in Jupyter converts notebook files to other formats, such as HTML, LaTeX, or reStructuredText. This conversion goes through a series of steps: Preprocessors modify the notebook in memory. E.g. ExecutePreprocessor runs the code in the notebook and updates the output. An exporter converts the notebook to another file format. Most of the exporters use templates for this. Postprocessors work on the file produced by exporting. The nbviewer website uses nbconvert with the HTML exporter. When you give it a URL, it fetches the notebook from that URL, converts it to HTML, and serves that HTML to you.","title":"\u5c06\u7b14\u8bb0\u672c\u5bfc\u51fa\u4e3a\u5176\u4ed6\u683c\u5f0f"},{"location":"Documentation/Architecture/how_jupyter_ipython_work/#ipythonparallel","text":"IPython \u8fd8\u5305\u62ec\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\uff0cIPython.parallel\u3002 \u8fd9\u5141\u8bb8\u60a8\u63a7\u5236\u8bb8\u591a\u5355\u72ec\u7684\u5f15\u64ce\uff0c\u8fd9\u4e9b\u5f15\u64ce\u662f\u4e0a\u8ff0 IPython \u5185\u6838\u7684\u6269\u5c55\u7248\u672c\u3002","title":"IPython.parallel"},{"location":"Documentation/Architecture/visual_overview/","text":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0 \u00b6 \u9879\u76ee\u5173\u7cfb\u7684\u9ad8\u7ea7\u89c6\u89c9\u6982\u8ff0","title":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0"},{"location":"Documentation/Architecture/visual_overview/#_1","text":"\u9879\u76ee\u5173\u7cfb\u7684\u9ad8\u7ea7\u89c6\u89c9\u6982\u8ff0","title":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0"},{"location":"Documentation/Installation-Configuration-Usage/config/","text":"Jupyter \u7684\u901a\u7528\u914d\u7f6e\u65b9\u6cd5 \u00b6 \u5185\u5bb9 \u00b6 Summary The Python config file Command line options for configuration \u6458\u8981 \u00b6 Common Jupyter configuration system The Jupyter applications have a common config system, and a common config directory. By default, this directory is ~/.jupyter. Kernel configuration directories If kernels use config files, these will normally be organised in separate directories for each kernel. For instance, the IPython kernel looks for files in the IPython directory instead of the default Jupyter directory ~/.jupyter. Python \u914d\u7f6e\u6587\u4ef6 \u00b6 To create a default config file, run: jupyter {application} --generate-config The generated file will be named jupyter_application_config.py. By editing the jupyter_application_config.py file, you can configure class attributes like this: c.NotebookApp.port = 8754 Be careful with spelling. Incorrect names will simply be ignored, with no error message. To add to a collection which may have already been defined elsewhere, you can use methods like those found on lists, dicts and sets: append, extend, prepend() (like extend, but at the front), add, and update (which works both for dicts and sets): c.TemplateExporter.template_path.append('./templates') \u7528\u4e8e\u914d\u7f6e\u7684\u547d\u4ee4\u884c\u9009\u9879 \u00b6 Every configurable value can also be set from the command line and passed as an argument, using this syntax: jupyter notebook --NotebookApp.port=8754 Frequently used options will also have short aliases and flags, such as --port 8754 or --no-browser. To see the abbreviated options, pass --help or --help-all as follows: jupyter {application} --help # Just the short options jupyter {application} --help-all # Includes options without short names Command line options will override options set within a configuration file. See also traitlets.config The low-level architecture of this config system.","title":"Jupyter \u7684\u901a\u7528\u914d\u7f6e\u65b9\u6cd5"},{"location":"Documentation/Installation-Configuration-Usage/config/#jupyter","text":"","title":"Jupyter \u7684\u901a\u7528\u914d\u7f6e\u65b9\u6cd5"},{"location":"Documentation/Installation-Configuration-Usage/config/#_1","text":"Summary The Python config file Command line options for configuration","title":"\u5185\u5bb9"},{"location":"Documentation/Installation-Configuration-Usage/config/#_2","text":"Common Jupyter configuration system The Jupyter applications have a common config system, and a common config directory. By default, this directory is ~/.jupyter. Kernel configuration directories If kernels use config files, these will normally be organised in separate directories for each kernel. For instance, the IPython kernel looks for files in the IPython directory instead of the default Jupyter directory ~/.jupyter.","title":"\u6458\u8981"},{"location":"Documentation/Installation-Configuration-Usage/config/#python","text":"To create a default config file, run: jupyter {application} --generate-config The generated file will be named jupyter_application_config.py. By editing the jupyter_application_config.py file, you can configure class attributes like this: c.NotebookApp.port = 8754 Be careful with spelling. Incorrect names will simply be ignored, with no error message. To add to a collection which may have already been defined elsewhere, you can use methods like those found on lists, dicts and sets: append, extend, prepend() (like extend, but at the front), add, and update (which works both for dicts and sets): c.TemplateExporter.template_path.append('./templates')","title":"Python \u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/Installation-Configuration-Usage/config/#_3","text":"Every configurable value can also be set from the command line and passed as an argument, using this syntax: jupyter notebook --NotebookApp.port=8754 Frequently used options will also have short aliases and flags, such as --port 8754 or --no-browser. To see the abbreviated options, pass --help or --help-all as follows: jupyter {application} --help # Just the short options jupyter {application} --help-all # Includes options without short names Command line options will override options set within a configuration file. See also traitlets.config The low-level architecture of this config system.","title":"\u7528\u4e8e\u914d\u7f6e\u7684\u547d\u4ee4\u884c\u9009\u9879"},{"location":"Documentation/Installation-Configuration-Usage/content-projects/","text":"\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528 \u00b6 \u5b89\u88c5 \u00b6 Installing Jupyter Notebook Upgrading Jupyter Notebook Optional: Installing Kernels How do I decide which packages I need? \u914d\u7f6e \u00b6 The jupyter Command Common Directories and File Locations Jupyter\u2019s Common Configuration Approach Usage and Projects Jupyter Projects IPython Projects Incubator Projects Kernels (Programming Languages) Project Documentation","title":"\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528"},{"location":"Documentation/Installation-Configuration-Usage/content-projects/#_1","text":"","title":"\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528"},{"location":"Documentation/Installation-Configuration-Usage/content-projects/#_2","text":"Installing Jupyter Notebook Upgrading Jupyter Notebook Optional: Installing Kernels How do I decide which packages I need?","title":"\u5b89\u88c5"},{"location":"Documentation/Installation-Configuration-Usage/content-projects/#_3","text":"The jupyter Command Common Directories and File Locations Jupyter\u2019s Common Configuration Approach Usage and Projects Jupyter Projects IPython Projects Incubator Projects Kernels (Programming Languages) Project Documentation","title":"\u914d\u7f6e"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/","text":"\u53ef\u9009\uff1a\u5b89\u88c5\u5185\u6838 \u00b6 \u5185\u5bb9 \u00b6 Are any languages pre-installed? How do I install Python 2 and Python 3? How do I install other languages like R or Julia? This information gives a high-level view of using Jupyter Notebook with different programming languages (kernels). \u662f\u5426\u5df2\u9884\u5148\u5b89\u88c5\u4efb\u4f55\u8bed\u8a00\uff1f \u00b6 Yes, installing the Jupyter Notebook will also install the IPython kernel. This allows working on notebooks using the Python programming language. \u5982\u4f55\u5b89\u88c5 Python 2 \u548c Python 3\uff1f \u00b6 To install an additional version of Python, i.e. to have both Python 2 and 3 available, see the IPython docs on installing kernels. \u5982\u4f55\u5b89\u88c5 R \u6216 Julia \u7b49\u5176\u4ed6\u8bed\u8a00\uff1f \u00b6 To run notebooks in languages other than Python, such as R or Julia, you will need to install additional kernels. For more information, see the full list of available kernels. See also Jupyter Projects Detailed installation instructions for individual Jupyter or IPython projects. Kernels Information about additional programming language kernels. Kernels documentation for Jupyter client Technical information about kernels.","title":"\u53ef\u9009\uff1a\u5b89\u88c5\u5185\u6838"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/#_1","text":"","title":"\u53ef\u9009\uff1a\u5b89\u88c5\u5185\u6838"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/#_2","text":"Are any languages pre-installed? How do I install Python 2 and Python 3? How do I install other languages like R or Julia? This information gives a high-level view of using Jupyter Notebook with different programming languages (kernels).","title":"\u5185\u5bb9"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/#_3","text":"Yes, installing the Jupyter Notebook will also install the IPython kernel. This allows working on notebooks using the Python programming language.","title":"\u662f\u5426\u5df2\u9884\u5148\u5b89\u88c5\u4efb\u4f55\u8bed\u8a00\uff1f"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/#python-2-python-3","text":"To install an additional version of Python, i.e. to have both Python 2 and 3 available, see the IPython docs on installing kernels.","title":"\u5982\u4f55\u5b89\u88c5 Python 2 \u548c Python 3\uff1f"},{"location":"Documentation/Installation-Configuration-Usage/install-kernel/#r-julia","text":"To run notebooks in languages other than Python, such as R or Julia, you will need to install additional kernels. For more information, see the full list of available kernels. See also Jupyter Projects Detailed installation instructions for individual Jupyter or IPython projects. Kernels Information about additional programming language kernels. Kernels documentation for Jupyter client Technical information about kernels.","title":"\u5982\u4f55\u5b89\u88c5 R \u6216 Julia \u7b49\u5176\u4ed6\u8bed\u8a00\uff1f"},{"location":"Documentation/Installation-Configuration-Usage/install/","text":"\u5b89\u88c5 Jupyter \u7b14\u8bb0\u672c \u00b6 \u5185\u5bb9 \u00b6 Prerequisite: Python Installing Jupyter using Anaconda and conda Alternative for experienced Python users: Installing Jupyter with pip This information explains how to install the Jupyter Notebook and the IPython kernel. \u5148\u51b3\u6761\u4ef6\uff1aPython \u00b6 While Jupyter runs code in many programming languages, Python is a requirement (Python 3.3 or greater, or Python 2.7) for installing the Jupyter Notebook. We recommend using the Anaconda distribution to install Python and Jupyter. We\u2019ll go through its installation in the next section. \u4f7f\u7528 Anaconda \u548c conda \u5b89\u88c5 Jupyter \u00b6 For new users, we highly recommend installing Anaconda. Anaconda conveniently installs Python, the Jupyter Notebook, and other commonly used packages for scientific computing and data science. Use the following installation steps: Download Anaconda. We recommend downloading Anaconda\u2019s latest Python 3 version (currently Python 3.5). Install the version of Anaconda which you downloaded, following the instructions on the download page. Congratulations, you have installed Jupyter Notebook. To run the notebook: jupyter notebook See Running the Notebook for more details. \u6709\u7ecf\u9a8c\u7684 Python \u7528\u6237\u7684\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528 pip \u5b89\u88c5 Jupyter \u00b6 Important Jupyter installation requires Python 3.3 or greater, or Python 2.7. IPython 1.x, which included the parts that later became Jupyter, was the last version to support Python 3.2 and 2.6. As an existing Python user, you may wish to install Jupyter using Python\u2019s package manager, pip, instead of Anaconda. First, ensure that you have the latest pip; older versions may have trouble with some dependencies: pip3 install --upgrade pip Then install the Jupyter Notebook using: pip3 install jupyter (Use pip if using legacy Python 2.) Congratulations. You have installed Jupyter Notebook. See Running the Notebook for more details.","title":"\u5b89\u88c5 Jupyter \u7b14\u8bb0\u672c"},{"location":"Documentation/Installation-Configuration-Usage/install/#jupyter","text":"","title":"\u5b89\u88c5 Jupyter \u7b14\u8bb0\u672c"},{"location":"Documentation/Installation-Configuration-Usage/install/#_1","text":"Prerequisite: Python Installing Jupyter using Anaconda and conda Alternative for experienced Python users: Installing Jupyter with pip This information explains how to install the Jupyter Notebook and the IPython kernel.","title":"\u5185\u5bb9"},{"location":"Documentation/Installation-Configuration-Usage/install/#python","text":"While Jupyter runs code in many programming languages, Python is a requirement (Python 3.3 or greater, or Python 2.7) for installing the Jupyter Notebook. We recommend using the Anaconda distribution to install Python and Jupyter. We\u2019ll go through its installation in the next section.","title":"\u5148\u51b3\u6761\u4ef6\uff1aPython"},{"location":"Documentation/Installation-Configuration-Usage/install/#anaconda-conda-jupyter","text":"For new users, we highly recommend installing Anaconda. Anaconda conveniently installs Python, the Jupyter Notebook, and other commonly used packages for scientific computing and data science. Use the following installation steps: Download Anaconda. We recommend downloading Anaconda\u2019s latest Python 3 version (currently Python 3.5). Install the version of Anaconda which you downloaded, following the instructions on the download page. Congratulations, you have installed Jupyter Notebook. To run the notebook: jupyter notebook See Running the Notebook for more details.","title":"\u4f7f\u7528 Anaconda \u548c conda \u5b89\u88c5 Jupyter"},{"location":"Documentation/Installation-Configuration-Usage/install/#python-pip-jupyter","text":"Important Jupyter installation requires Python 3.3 or greater, or Python 2.7. IPython 1.x, which included the parts that later became Jupyter, was the last version to support Python 3.2 and 2.6. As an existing Python user, you may wish to install Jupyter using Python\u2019s package manager, pip, instead of Anaconda. First, ensure that you have the latest pip; older versions may have trouble with some dependencies: pip3 install --upgrade pip Then install the Jupyter Notebook using: pip3 install jupyter (Use pip if using legacy Python 2.) Congratulations. You have installed Jupyter Notebook. See Running the Notebook for more details.","title":"\u6709\u7ecf\u9a8c\u7684 Python \u7528\u6237\u7684\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528 pip \u5b89\u88c5 Jupyter"},{"location":"Documentation/Installation-Configuration-Usage/ipython_projects/","text":"","title":"Ipython projects"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-command/","text":"jupyter \u547d\u4ee4 \u00b6 \u6982\u8981 \u00b6 jupyter [options] \u63cf\u8ff0 \u00b6 Commands like jupyter notebook start Jupyter applications. The jupyter command is primarily a namespace for subcommands. A command like jupyter-foo found on your PATH will be available as a subcommand jupyter foo. The jupyter command can also be used to do actions other than starting a Jupyter application. \u547d\u4ee4\u9009\u9879 \u00b6 -h, --help Show help information, including available subcommands. --config-dir Show the location of the config directory. --data-dir Show the location of the data directory. --runtime-dir Show the location of the data directory. --paths Show all Jupyter directories and search paths. --json Print directories and search paths in machine-readable JSON format.","title":"jupyter \u547d\u4ee4"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-command/#jupyter","text":"","title":"jupyter \u547d\u4ee4"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-command/#_1","text":"jupyter [options]","title":"\u6982\u8981"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-command/#_2","text":"Commands like jupyter notebook start Jupyter applications. The jupyter command is primarily a namespace for subcommands. A command like jupyter-foo found on your PATH will be available as a subcommand jupyter foo. The jupyter command can also be used to do actions other than starting a Jupyter application.","title":"\u63cf\u8ff0"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-command/#_3","text":"-h, --help Show help information, including available subcommands. --config-dir Show the location of the config directory. --data-dir Show the location of the data directory. --runtime-dir Show the location of the data directory. --paths Show all Jupyter directories and search paths. --json Print directories and search paths in machine-readable JSON format.","title":"\u547d\u4ee4\u9009\u9879"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/","text":"\u5e38\u89c1\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e \u00b6 \u5185\u5bb9 \u00b6 Configuration files Data files Runtime files Summary Jupyter stores different files (i.e. configuration, data, runtime) in a number of different locations. Environment variables may be set to customize for the location of each file type. \u914d\u7f6e\u6587\u4ef6 \u00b6 Config files are stored by default in the ~/.jupyter directory. JUPYTER_CONFIG_DIR Set this environment variable to use a particular directory, other than the default, for Jupyter config files. Besides the user config directory mentioned above, Jupyter has a search path of additional locations from which a config file will be loaded. Here\u2019s a table of the locations to be searched, in order of preference: Unix Windows JUPYTER_CONFIG_DIR {sys.prefix}/etc/jupyter/ /usr/local/etc/jupyter/ /etc/jupyter/ %PROGRAMDATA%\\jupyter\\ To list the config directories currrently being used you can run the below command from the command line: jupyter --paths \u6570\u636e\u6587\u4ef6 \u00b6 Jupyter uses a search path to find installable data files, such as kernelspecs and notebook extensions. When searching for a resource, the code will search the search path starting at the first directory until it finds where the resource is contained. Each category of file is in a subdirectory of each directory of the search path. For example, kernel specs are in kernels subdirectories. JUPYTER_PATH Set this environment variable to provide extra directories for the data search path. JUPYTER_PATH should contain a series of directories, separated by os.pathsep (; on Windows, : on Unix). Directories given in JUPYTER_PATH are searched before other locations. Linux (& other free desktops) Mac Windows JUPYTER_PATH ~/.local/share/jupyter/ (respects \\$XDG_DATA_HOME) ~/Library/Jupyter %APPDATA%\\jupyter {sys.prefix}/share/jupyter/ /usr/local/share/jupyter /usr/share/jupyter %PROGRAMDATA\\jupyter \u8fd0\u884c\u65f6\u6587\u4ef6 \u00b6 Things like connection files, which are only useful for the lifetime of a particular process, have a runtime directory. On Linux and other free desktop platforms, these runtime files are stored in \\$XDG_RUNTIME_DIR/jupyter by default. On other platforms, it\u2019s a runtime/ subdirectory of the user\u2019s data directory (second row of the table above). An environment variable may also be used to set the runtime directory. JUPYTER_RUNTIME_DIR Set this to override where Jupyter stores runtime files. \u6458\u8981 \u00b6 JUPYTER_CONFIG_DIR for config file location JUPYTER_PATH for datafile directory locations JUPYTER_RUNTIME_DIR for runtime file location See also jupyter_core.paths The Python API to locate these directories. The jupyter Command Locate these directories from the command line.","title":"\u5e38\u89c1\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_1","text":"","title":"\u5e38\u89c1\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_2","text":"Configuration files Data files Runtime files Summary Jupyter stores different files (i.e. configuration, data, runtime) in a number of different locations. Environment variables may be set to customize for the location of each file type.","title":"\u5185\u5bb9"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_3","text":"Config files are stored by default in the ~/.jupyter directory. JUPYTER_CONFIG_DIR Set this environment variable to use a particular directory, other than the default, for Jupyter config files. Besides the user config directory mentioned above, Jupyter has a search path of additional locations from which a config file will be loaded. Here\u2019s a table of the locations to be searched, in order of preference: Unix Windows JUPYTER_CONFIG_DIR {sys.prefix}/etc/jupyter/ /usr/local/etc/jupyter/ /etc/jupyter/ %PROGRAMDATA%\\jupyter\\ To list the config directories currrently being used you can run the below command from the command line: jupyter --paths","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_4","text":"Jupyter uses a search path to find installable data files, such as kernelspecs and notebook extensions. When searching for a resource, the code will search the search path starting at the first directory until it finds where the resource is contained. Each category of file is in a subdirectory of each directory of the search path. For example, kernel specs are in kernels subdirectories. JUPYTER_PATH Set this environment variable to provide extra directories for the data search path. JUPYTER_PATH should contain a series of directories, separated by os.pathsep (; on Windows, : on Unix). Directories given in JUPYTER_PATH are searched before other locations. Linux (& other free desktops) Mac Windows JUPYTER_PATH ~/.local/share/jupyter/ (respects \\$XDG_DATA_HOME) ~/Library/Jupyter %APPDATA%\\jupyter {sys.prefix}/share/jupyter/ /usr/local/share/jupyter /usr/share/jupyter %PROGRAMDATA\\jupyter","title":"\u6570\u636e\u6587\u4ef6"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_5","text":"Things like connection files, which are only useful for the lifetime of a particular process, have a runtime directory. On Linux and other free desktop platforms, these runtime files are stored in \\$XDG_RUNTIME_DIR/jupyter by default. On other platforms, it\u2019s a runtime/ subdirectory of the user\u2019s data directory (second row of the table above). An environment variable may also be used to set the runtime directory. JUPYTER_RUNTIME_DIR Set this to override where Jupyter stores runtime files.","title":"\u8fd0\u884c\u65f6\u6587\u4ef6"},{"location":"Documentation/Installation-Configuration-Usage/jupyter-directories/#_6","text":"JUPYTER_CONFIG_DIR for config file location JUPYTER_PATH for datafile directory locations JUPYTER_RUNTIME_DIR for runtime file location See also jupyter_core.paths The Python API to locate these directories. The jupyter Command Locate these directories from the command line.","title":"\u6458\u8981"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/","text":"Jupyter \u9879\u76ee \u00b6 \u5185\u5bb9 \u00b6 Jupyter User Interfaces Kernels Formatting and Conversion Education Deployment Architecture Project Jupyter is developed as a set of subprojects. This section describes the subprojects with links to their documentation or GitHub repositories. Jupyter \u7528\u6237\u754c\u9762 \u00b6 The Jupyter user interfaces offer a foundation of interactive computing environments where scientific computing, data science, and analytics can be performed using a wide range of programming languages. Jupyter Notebook Web-based application for authoring documents that combine live-code with narrative text, equations and visualizations. Documentation | Repo Jupyter Console Terminal based console for interactive computing. Documentation | Repo Jupyter QtConsole Qt application for interactive computing with rich output. Documentation | Repo \u5185\u6838 \u00b6 Kernels are programming language specific processes that run independently and interact with the Jupyter Applications and their user interfaces. IPython is the reference Jupyter kernel, providing a powerful environment for interactive computing in Python. IPython interactive computing in Python. Documentation | Repo ipywidgets interactive widgets for Python in the Jupyter Notebook. Documentation | Repo ipyparallel lightweight parallel computing in Python offering seamless notebook integration. Documentation | Repo See also Jupyter kernels A full list of kernels available for other languages. Many of these kernels are developed by third parties and may or may not be stable. \u683c\u5f0f\u5316\u548c\u8f6c\u6362 \u00b6 Notebooks are rich interactive documents that combine live code, narrative text (using markdown), visualizations, and other rich media. The following utility subprojects allow programmatic format conversion and manipulation of notebook documents. nbconvert Convert dynamic notebooks to static formats such as HTML, Markdown, LaTeX/PDF, and reStrucuredText. Documentation | Repo nbformat Work with notebook documents programmatically. Documentation | Repo \u6559\u80b2 \u00b6 Jupyter Notebooks offer exciting and creative possibilities in education. The following subprojects are focused on supporting the use of Jupyter Notebook in a variety of educational settings. nbgrader tools for managing, grading, and reporting of notebook based assignments. Documentation | Repo Deployment To serve a variety of users and use cases, these subprojects are being developed to support notebook deployment in various contexts, including multiuser capabilities and secure, scalable cloud deployments. jupyterhub Multi-user notebook for organizations with pluggable authentication and scalability. Documentation | Repo jupyter-drive Store notebooks on Google Drive. Documentation | Repo nbviewer Share notebooks as static HTML on the web. Documentation | Repo tmpnb Create temporary, transient notebooks in the cloud. Documentation | Repo tmpnb-deploy tmpnb \u7684\u90e8\u7f72\u5de5\u5177\u3002\u6587\u6863|\u56de\u8d2d \u00b6 dockerspawner Deploy notebooks for \u2018jupyterhub\u2019 inside Docker containers. Documentation | Repo docker-stacks Stacks of Jupyter applications and kernels as Docker containers. Documentation | Repo \u7ed3\u6784 \u00b6 The Jupyter architecture relies on these projects\u2019 specifications and implementation. jupyter_client The specification of the Jupyter message protocol and a client library in Python. Documentation | Repo jupyter_core Core functionality and miscellaneous utilities. Documentation | Repo","title":"Jupyter \u9879\u76ee"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#jupyter","text":"","title":"Jupyter \u9879\u76ee"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#_1","text":"Jupyter User Interfaces Kernels Formatting and Conversion Education Deployment Architecture Project Jupyter is developed as a set of subprojects. This section describes the subprojects with links to their documentation or GitHub repositories.","title":"\u5185\u5bb9"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#jupyter_1","text":"The Jupyter user interfaces offer a foundation of interactive computing environments where scientific computing, data science, and analytics can be performed using a wide range of programming languages. Jupyter Notebook Web-based application for authoring documents that combine live-code with narrative text, equations and visualizations. Documentation | Repo Jupyter Console Terminal based console for interactive computing. Documentation | Repo Jupyter QtConsole Qt application for interactive computing with rich output. Documentation | Repo","title":"Jupyter \u7528\u6237\u754c\u9762"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#_2","text":"Kernels are programming language specific processes that run independently and interact with the Jupyter Applications and their user interfaces. IPython is the reference Jupyter kernel, providing a powerful environment for interactive computing in Python. IPython interactive computing in Python. Documentation | Repo ipywidgets interactive widgets for Python in the Jupyter Notebook. Documentation | Repo ipyparallel lightweight parallel computing in Python offering seamless notebook integration. Documentation | Repo See also Jupyter kernels A full list of kernels available for other languages. Many of these kernels are developed by third parties and may or may not be stable.","title":"\u5185\u6838"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#_3","text":"Notebooks are rich interactive documents that combine live code, narrative text (using markdown), visualizations, and other rich media. The following utility subprojects allow programmatic format conversion and manipulation of notebook documents. nbconvert Convert dynamic notebooks to static formats such as HTML, Markdown, LaTeX/PDF, and reStrucuredText. Documentation | Repo nbformat Work with notebook documents programmatically. Documentation | Repo","title":"\u683c\u5f0f\u5316\u548c\u8f6c\u6362"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#_4","text":"Jupyter Notebooks offer exciting and creative possibilities in education. The following subprojects are focused on supporting the use of Jupyter Notebook in a variety of educational settings. nbgrader tools for managing, grading, and reporting of notebook based assignments. Documentation | Repo Deployment To serve a variety of users and use cases, these subprojects are being developed to support notebook deployment in various contexts, including multiuser capabilities and secure, scalable cloud deployments. jupyterhub Multi-user notebook for organizations with pluggable authentication and scalability. Documentation | Repo jupyter-drive Store notebooks on Google Drive. Documentation | Repo nbviewer Share notebooks as static HTML on the web. Documentation | Repo tmpnb Create temporary, transient notebooks in the cloud. Documentation | Repo tmpnb-deploy","title":"\u6559\u80b2"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#tmpnb","text":"dockerspawner Deploy notebooks for \u2018jupyterhub\u2019 inside Docker containers. Documentation | Repo docker-stacks Stacks of Jupyter applications and kernels as Docker containers. Documentation | Repo","title":"tmpnb \u7684\u90e8\u7f72\u5de5\u5177\u3002\u6587\u6863|\u56de\u8d2d"},{"location":"Documentation/Installation-Configuration-Usage/subprojects/#_5","text":"The Jupyter architecture relies on these projects\u2019 specifications and implementation. jupyter_client The specification of the Jupyter message protocol and a client library in Python. Documentation | Repo jupyter_core Core functionality and miscellaneous utilities. Documentation | Repo","title":"\u7ed3\u6784"},{"location":"Documentation/Installation-Configuration-Usage/upgrade-notebook/","text":"\u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c \u00b6 Contents \u00b6 Upgrading Jupyter Notebook using Anaconda Upgrading IPython Notebook to Jupyter Notebook \u4f7f\u7528 Anaconda \u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c \u00b6 If using Anaconda, update Jupyter using conda: conda update jupyter See Run the Notebook for running the Jupyter Notebook. \u5c06 IPython Notebook \u5347\u7ea7\u5230 Jupyter Notebook \u00b6 The Jupyter Notebook used to be called the IPython Notebook. If you are running an older version of the IPython Notebook (version 3 or earlier) you can use the following to upgrade to the latest version of the Jupyter Notebook. If using Anaconda, update Jupyter using conda: conda update jupyter or If using pip: pip install -U jupyter See Run the Notebook for running the Jupyter Notebook. See also The migrating document has additional information about migrating from IPython 3 to Jupyter.","title":"\u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c"},{"location":"Documentation/Installation-Configuration-Usage/upgrade-notebook/#jupyter","text":"","title":"\u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c"},{"location":"Documentation/Installation-Configuration-Usage/upgrade-notebook/#contents","text":"Upgrading Jupyter Notebook using Anaconda Upgrading IPython Notebook to Jupyter Notebook","title":"Contents"},{"location":"Documentation/Installation-Configuration-Usage/upgrade-notebook/#anaconda-jupyter","text":"If using Anaconda, update Jupyter using conda: conda update jupyter See Run the Notebook for running the Jupyter Notebook.","title":"\u4f7f\u7528 Anaconda \u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c"},{"location":"Documentation/Installation-Configuration-Usage/upgrade-notebook/#ipython-notebook-jupyter-notebook","text":"The Jupyter Notebook used to be called the IPython Notebook. If you are running an older version of the IPython Notebook (version 3 or earlier) you can use the following to upgrade to the latest version of the Jupyter Notebook. If using Anaconda, update Jupyter using conda: conda update jupyter or If using pip: pip install -U jupyter See Run the Notebook for running the Jupyter Notebook. See also The migrating document has additional information about migrating from IPython 3 to Jupyter.","title":"\u5c06 IPython Notebook \u5347\u7ea7\u5230 Jupyter Notebook"},{"location":"Documentation/Narratives-Use-Cases/","text":"\u53d9\u4e8b\u548c\u7528\u4f8b \u00b6 What are Narratives? Narratives are collaborative, shareable, publishable, and reproducible. We believe that Narratives help both yourself and other researchers by sharing your use of Jupyter projects, technical specifics of your deployment, and installation and configuration tips so that others can learn from your experiences. Notebook Narratives Description Narrative examples JupyterHub Narratives Description Narrative examples Narratives - Building blocks Description Narrative examples Jupyter for Data Science Jupyter and Scientific Computing Jupyter in Education","title":"\u53d9\u4e8b\u548c\u7528\u4f8b"},{"location":"Documentation/Narratives-Use-Cases/#_1","text":"What are Narratives? Narratives are collaborative, shareable, publishable, and reproducible. We believe that Narratives help both yourself and other researchers by sharing your use of Jupyter projects, technical specifics of your deployment, and installation and configuration tips so that others can learn from your experiences. Notebook Narratives Description Narrative examples JupyterHub Narratives Description Narrative examples Narratives - Building blocks Description Narrative examples Jupyter for Data Science Jupyter and Scientific Computing Jupyter in Education","title":"\u53d9\u4e8b\u548c\u7528\u4f8b"},{"location":"Documentation/Narratives-Use-Cases/data_science/","text":"jupyter \u5728\u6570\u636e\u79d1\u5b66\u65b9\u9762 \u00b6 The purpose of this page is to highlight kernels and other projects that are central to the usage of Jupyter in data science. This page is not meant to be comprehensive or unbiased, but rather to provide an opinionated view of the usage of Jupyter in data science based on our interactions with users. The following Jupyter kernels are widely used in data science: python IPython (GitHub Repo) R IRkernel (Documentation, GitHub Repo) IRdisplay (GitHub Repo) repr (GitHub Repo) Julia IJulia Kernel (GitHub Repo) Interactive Widgets (GitHub Repo) Bash (GitHub Repo)","title":"jupyter \u5728\u6570\u636e\u79d1\u5b66\u65b9\u9762"},{"location":"Documentation/Narratives-Use-Cases/data_science/#jupyter","text":"The purpose of this page is to highlight kernels and other projects that are central to the usage of Jupyter in data science. This page is not meant to be comprehensive or unbiased, but rather to provide an opinionated view of the usage of Jupyter in data science based on our interactions with users. The following Jupyter kernels are widely used in data science: python IPython (GitHub Repo) R IRkernel (Documentation, GitHub Repo) IRdisplay (GitHub Repo) repr (GitHub Repo) Julia IJulia Kernel (GitHub Repo) Interactive Widgets (GitHub Repo) Bash (GitHub Repo)","title":"jupyter \u5728\u6570\u636e\u79d1\u5b66\u65b9\u9762"},{"location":"Documentation/Narratives-Use-Cases/education/","text":"Jupyter \u5728\u6559\u80b2\u65b9\u9762 \u00b6 Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"Jupyter \u5728\u6559\u80b2\u65b9\u9762"},{"location":"Documentation/Narratives-Use-Cases/education/#jupyter","text":"Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"Jupyter \u5728\u6559\u80b2\u65b9\u9762"},{"location":"Documentation/Narratives-Use-Cases/narrative-hub/","text":"JupyterHub \u53d9\u4e8b \u00b6 \u5185\u5bb9 \u00b6 Description Narrative examples \u63cf\u8ff0 \u00b6 JupyterHub Narratives explore deployment and scaling of the Jupyter Notebook for a group of users. JupyterHub allows flexibility in configuration and deployment which makes JupyterHub a valuable to education, industry research teams, and service providers. In these Narratives, we will look at differences in deployment, deployment advantages, and best practices. \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 A basic JupyterHub deployment A reference deployment of JupyterHub using Docker Teaching a Course with JupyterHub and nbgrader using a reference deployment on a single server and Ansible scripts to automate set up Teaching a Course with JupyterHub, nbgrader, and containers JupyterHub deployments using Containers including Docker Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"JupyterHub \u53d9\u4e8b"},{"location":"Documentation/Narratives-Use-Cases/narrative-hub/#jupyterhub","text":"","title":"JupyterHub \u53d9\u4e8b"},{"location":"Documentation/Narratives-Use-Cases/narrative-hub/#_1","text":"Description Narrative examples","title":"\u5185\u5bb9"},{"location":"Documentation/Narratives-Use-Cases/narrative-hub/#_2","text":"JupyterHub Narratives explore deployment and scaling of the Jupyter Notebook for a group of users. JupyterHub allows flexibility in configuration and deployment which makes JupyterHub a valuable to education, industry research teams, and service providers. In these Narratives, we will look at differences in deployment, deployment advantages, and best practices.","title":"\u63cf\u8ff0"},{"location":"Documentation/Narratives-Use-Cases/narrative-hub/#_3","text":"A basic JupyterHub deployment A reference deployment of JupyterHub using Docker Teaching a Course with JupyterHub and nbgrader using a reference deployment on a single server and Ansible scripts to automate set up Teaching a Course with JupyterHub, nbgrader, and containers JupyterHub deployments using Containers including Docker Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"Documentation/Narratives-Use-Cases/narrative-notebook/","text":"Notebook Narratives \u00b6 Contents \u00b6 Description Narrative examples \u63cf\u8ff0 \u00b6 The Notebook Narratives explore uses of the Jupyter Notebook in a variety of applications. \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 Using the Notebook for data exploration Using extensions and widgets Using nbconvert for code execution and workflow simplification Using nbconvert for publishing Using multiple language kernels Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"Notebook Narratives"},{"location":"Documentation/Narratives-Use-Cases/narrative-notebook/#notebook-narratives","text":"","title":"Notebook Narratives"},{"location":"Documentation/Narratives-Use-Cases/narrative-notebook/#contents","text":"Description Narrative examples","title":"Contents"},{"location":"Documentation/Narratives-Use-Cases/narrative-notebook/#_1","text":"The Notebook Narratives explore uses of the Jupyter Notebook in a variety of applications.","title":"\u63cf\u8ff0"},{"location":"Documentation/Narratives-Use-Cases/narrative-notebook/#_2","text":"Using the Notebook for data exploration Using extensions and widgets Using nbconvert for code execution and workflow simplification Using nbconvert for publishing Using multiple language kernels Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"Documentation/Narratives-Use-Cases/narrative-other/","text":"\u53d9\u4e8b - \u6784\u5efa\u5757 \u00b6 \u5185\u5bb9 \u00b6 Description Narrative examples \u63cf\u8ff0 \u00b6 This section presents some examples of integrating different projects together. These projects form the foundation of innovative services and provide building blocks for future applications. \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 A Narrative about Creating Dashboards A Narrative about Thebe A Narrative about Hydrogen Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"\u53d9\u4e8b - \u6784\u5efa\u5757"},{"location":"Documentation/Narratives-Use-Cases/narrative-other/#-","text":"","title":"\u53d9\u4e8b - \u6784\u5efa\u5757"},{"location":"Documentation/Narratives-Use-Cases/narrative-other/#_1","text":"Description Narrative examples","title":"\u5185\u5bb9"},{"location":"Documentation/Narratives-Use-Cases/narrative-other/#_2","text":"This section presents some examples of integrating different projects together. These projects form the foundation of innovative services and provide building blocks for future applications.","title":"\u63cf\u8ff0"},{"location":"Documentation/Narratives-Use-Cases/narrative-other/#_3","text":"A Narrative about Creating Dashboards A Narrative about Thebe A Narrative about Hydrogen Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"Documentation/Narratives-Use-Cases/science/","text":"Jupyter \u548c\u79d1\u5b66\u8ba1\u7b97 \u00b6 Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"Jupyter \u548c\u79d1\u5b66\u8ba1\u7b97"},{"location":"Documentation/Narratives-Use-Cases/science/#jupyter","text":"Note We\u2019re actively working on this section of the documentation to improve it for you. Thanks for your patience.","title":"Jupyter \u548c\u79d1\u5b66\u8ba1\u7b97"},{"location":"Documentation/Quickstart/Try-Jupyter/","text":"\u8bd5\u7528 Jupyter \u00b6 \u8bd5\u8bd5\u4f60\u7684\u6d4f\u89c8\u5668\u3002\u65e0\u9700\u5b89\u88c5\u3002 \u00b6 \u8f6c\u5230 https://try.jupyter.org \u3002\u65e0\u9700\u5b89\u88c5\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f \u00b6 \u7f16\u8f91\u672c\u7f16\u8f91\u5668 \u00b6 \u4f60\u51c6\u5907\u5b89\u88c5 Jupyter \u4e86\u5417\uff1f \u00b6 \u5982\u679c\u60a8\u5c1d\u8bd5\u8fc7 Jupyter \u5e76\u559c\u6b22\u5b83\uff0c\u8bf7\u4f7f\u7528\u6211\u4eec\u7684\u8be6\u7ec6\u5b89\u88c5\u6307\u5357\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter\u3002","title":"\u8bd5\u7528 Jupyter"},{"location":"Documentation/Quickstart/Try-Jupyter/#jupyter","text":"","title":"\u8bd5\u7528 Jupyter"},{"location":"Documentation/Quickstart/Try-Jupyter/#_1","text":"\u8f6c\u5230 https://try.jupyter.org \u3002\u65e0\u9700\u5b89\u88c5\u3002","title":"\u8bd5\u8bd5\u4f60\u7684\u6d4f\u89c8\u5668\u3002\u65e0\u9700\u5b89\u88c5\u3002"},{"location":"Documentation/Quickstart/Try-Jupyter/#_2","text":"","title":"\u7b14\u8bb0\u672c\u4eea\u8868\u677f"},{"location":"Documentation/Quickstart/Try-Jupyter/#_3","text":"","title":"\u7f16\u8f91\u672c\u7f16\u8f91\u5668"},{"location":"Documentation/Quickstart/Try-Jupyter/#jupyter_1","text":"\u5982\u679c\u60a8\u5c1d\u8bd5\u8fc7 Jupyter \u5e76\u559c\u6b22\u5b83\uff0c\u8bf7\u4f7f\u7528\u6211\u4eec\u7684\u8be6\u7ec6\u5b89\u88c5\u6307\u5357\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter\u3002","title":"\u4f60\u51c6\u5907\u5b89\u88c5 Jupyter \u4e86\u5417\uff1f"},{"location":"Documentation/Quickstart/migrating/","text":"\u4ece IPython Notebook \u8fc1\u79fb \u00b6 \u83dc\u5355 \u00b6 Abstract Understanding the Migration Process Automatic migration of files Where have my configuration files gone? Finding the Location of Important Files Configuration files Data files: kernelspecs and notebook extensions Since Jupyter does not have profiles, how do I customize it? Changing the Jupyter notebook configuration directory Changing the Jupyter notebook configuration file Changing IPython\u2019s profile using custom kernelspecs Understanding Installation Changes Notebook extensions Kernels Understanding Changes in imports \u62bd\u8c61 \u00b6 The Big Split moved IPython\u2019s various language-agnostic components under the Jupyter umbrella. Going forward, Jupyter will contain the language-agnostic projects that serve many languages. IPython will continue to focus on Python and its use with Jupyter. This document describes what has changed, and how you may need to modify your code or configuration when migrating from IPython version 3 to Jupyter. \u4e86\u89e3\u8fc1\u79fb\u8fc7\u7a0b \u00b6 \u81ea\u52a8\u8fc1\u79fb\u6587\u4ef6 \u00b6 The first time you run any jupyter command, it will perform an automatic migration of files. The automatic migration process copies files, instead of moving files, leaving the originals in place and the copies in the Jupyter file locations. You can re-run the migration, if needed, by calling jupyter migrate. Your custom configuration will be migrated automatically and should work with Jupyter without further editing. When you update or modify your configuration in the future, please keep in mind that the file locations may have changed. \u6211\u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u4e86\u54ea\u91cc\uff1f \u00b6 Also known as: \u201cWhy isn\u2019t my configuration having any effect anymore?\u201d Jupyter splitting out from IPython means that the locations of some files have moved, and Jupyter projects have not inherited everything from how IPython did it. When you start your first Jupyter application, the relevant configuration files are automatically copied to their new Jupyter locations. The original configuration files in the IPython locations have no effect on Jupyter\u2019s execution. If you accidentally edit your original IPython config file, you may not see the desired effect with Jupyter now. You should check that you are editing Jupyter\u2019s configuration file, and you should see the expected effect after restarting the Jupyter server. \u67e5\u627e\u91cd\u8981\u6587\u4ef6\u7684\u4f4d\u7f6e \u00b6 This section provides quick reference for common locations of IPython 3 files and the migrated Jupyter files. \u914d\u7f6e\u6587\u4ef6 \u00b6 Configuration files customize Jupyter to the user\u2019s preferences. The migrated files should all be automatically copied to their new Jupyter locations. Here are the location changes: IPython location Jupyter location ~/.ipython/profile_default/static/custom \u2192 ~/.jupyter/custom ~/.ipython/profile_default/ipython_notebook_config.py \u2192 ~/.jupyter/jupyter_notebook_config.py ~/.ipython/profile_default/ipython_nbconvert_config.py \u2192 ~/.jupyter/jupyter_nbconvert_config.py ~/.ipython/profile_default/ipython_qtconsole_config.py \u2192 ~/.jupyter/jupyter_qtconsole_config.py ~/.ipython/profile_default/ipython_console_config.py \u2192 ~/.jupyter/jupyter_console_config.py To choose a directory location other than the default ~/.jupyter, set the JUPYTER_CONFIG_DIR environment variable. You may need to run jupyter migrate after setting the environment variable for files to be copied to the desired directory. \u6570\u636e\u6587\u4ef6\uff1akernelspecs \u548c notebook \u6269\u5c55 \u00b6 Data files include files, other than configuration files, which are user installed. Examples include kernelspecs and notebook extensions. Like the configuration files, data files are also automatically migrated to their new Jupyter locations. In IPython 3, data files lived in ~/.ipython. In Jupyter, data files use platform-appropriate locations: OS X: ~/Library/Jupyter Windows: the location specified in %APPDATA% environment variable Elsewhere, \\$XDG_DATA_HOME is respected, with the default of ~/.local/share/jupyter In all cases, the JUPYTER_DATA_DIR environment variable can be used to set a location explicitly. Data files installed system-wide (e.g. in /usr/local/share/jupyter) have not changed. Per-user installation of data files has changed location from .ipython to the platform-appropriate Jupyter location. \u7531\u4e8e Jupyter \u6ca1\u6709\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u8be5\u5982\u4f55\u81ea\u5b9a\u4e49\u5b83\uff1f \u00b6 While IPython has the concept of profiles, Jupyter does not have profiles. In IPython, profiles are collections of configuration and runtime files. Inside the IPython directory (~/.ipython), there are directories with names like profile_default or profile_demo. In each of these are configuration files (ipython_config.py, ipython_notebook_config.py) and runtime files (history.sqlite, security/kernel-*.json). Profiles could be used to switch between configurations of IPython. Previously, people could use commands like ipython notebook --profile demo to set the profile for both the notebook server and the IPython kernel. This is no longer possible in one go with Jupyter, just like it wasn\u2019t possible in IPython 3 for any other kernels. \u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u76ee\u5f55 \u00b6 If you want to change the notebook configuration, you can set the JUPYTER_CONFIG_DIR: JUPYTER_CONFIG_DIR=./jupyter_config jupyter notebook \u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u6587\u4ef6 \u00b6 If you just want to change the config file, you can do: jupyter notebook --config=/path/to/myconfig.py \u4f7f\u7528\u81ea\u5b9a\u4e49 kernelspecs \u66f4\u6539 IPython \u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 If you do want to change the IPython kernel\u2019s profile, you can\u2019t do this at the server command-line anymore. Kernel arguments must be changed by modifying the kernelspec. You can do this without relaunching the server. Kernelspec changes take effect every time you start a new kernel. However, there isn\u2019t a great way to modify the kernelspecs. One approach uses jupyter kernelspec list to find the kernel.json file and then modifies it, e.g. kernels/python3/kernel.json, by hand. Alternatively, a2km is an experimental project that tries to make these things easier. For example, add the --profile option to a custom kernelspec under kernels/mycustom/kernel.json (see the Jupyter kernelspec directions here): { \"argv\" : [ \"python\" , \"-m\" , \"ipykernel\" , \"--profile=my-ipython-profile\" , \"-f\" , \"{connection_file}\" ], \"display_name\" : \"Custom Profile Python\" , \"language\" : \"python\" } You can then run Jupyter with the --kernel=mycustom command-line option and IPython will find the appropriate profile. \u4e86\u89e3\u5b89\u88c5\u66f4\u6539 \u00b6 See the Installing Jupyter Notebook page for more information about installing Jupyter. Jupyter automatically migrates some things, like Notebook extensions and kernels. \u7b14\u8bb0\u672c\u6269\u5c55 \u00b6 Any IPython notebook extensions should be automatically migrated as part of the data files migration. Notebook extensions were installed with: ipython install-nbextension [ --user ] EXTENSION Now, extensions are installed with: jupyter nbextension install [ --user ] EXTENSION The notebook extensions will be installed in a system-wide location (e.g. /usr/local/share/jupyter/nbextensions). If doing a --user install, the notebook extensions will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go. \u5185\u6838 \u00b6 Kernels are installed in much the same way as notebook extensions. They will also be automatically migrated. Kernel specs used to be installed with: ipython kernelspec install [ --user ] KERNEL They are now installed with: jupyter kernelspec install [ --user ] KERNEL By default, kernel specs will go in a system-wide location (e.g. /usr/local/share/jupyter/kernels). If doing a --user install, the kernel specs will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go. \u4e86\u89e3\u5165\u53e3\u7684\u53d8\u5316 \u00b6 IPython 4.0 includes shims to manage dependencies; so, all imports that work on IPython 3 should continue to work on IPython 4. If you find any differences, please let us know. Some changes include: IPython 3 Jupyter and IPython 4.0 IPython.html \u2192 notebook IPython.html.widgets \u2192 ipywidgets IPython.kernel \u2192 jupyter_client, ipykernel IPython.parallel \u2192 ipyparallel IPython.qt.console \u2192 qtconsole IPython.utils.traitlets \u2192 traitlets IPython.config \u2192 traitlets.config Important The IPython.kernel Split IPython.kernel became two packages: jupyter_client for the Jupyter client-side APIs. ipykernel for Jupyter\u2019s IPython kernel","title":"\u4ece IPython Notebook \u8fc1\u79fb"},{"location":"Documentation/Quickstart/migrating/#ipython-notebook","text":"","title":"\u4ece IPython Notebook \u8fc1\u79fb"},{"location":"Documentation/Quickstart/migrating/#_1","text":"Abstract Understanding the Migration Process Automatic migration of files Where have my configuration files gone? Finding the Location of Important Files Configuration files Data files: kernelspecs and notebook extensions Since Jupyter does not have profiles, how do I customize it? Changing the Jupyter notebook configuration directory Changing the Jupyter notebook configuration file Changing IPython\u2019s profile using custom kernelspecs Understanding Installation Changes Notebook extensions Kernels Understanding Changes in imports","title":"\u83dc\u5355"},{"location":"Documentation/Quickstart/migrating/#_2","text":"The Big Split moved IPython\u2019s various language-agnostic components under the Jupyter umbrella. Going forward, Jupyter will contain the language-agnostic projects that serve many languages. IPython will continue to focus on Python and its use with Jupyter. This document describes what has changed, and how you may need to modify your code or configuration when migrating from IPython version 3 to Jupyter.","title":"\u62bd\u8c61"},{"location":"Documentation/Quickstart/migrating/#_3","text":"","title":"\u4e86\u89e3\u8fc1\u79fb\u8fc7\u7a0b"},{"location":"Documentation/Quickstart/migrating/#_4","text":"The first time you run any jupyter command, it will perform an automatic migration of files. The automatic migration process copies files, instead of moving files, leaving the originals in place and the copies in the Jupyter file locations. You can re-run the migration, if needed, by calling jupyter migrate. Your custom configuration will be migrated automatically and should work with Jupyter without further editing. When you update or modify your configuration in the future, please keep in mind that the file locations may have changed.","title":"\u81ea\u52a8\u8fc1\u79fb\u6587\u4ef6"},{"location":"Documentation/Quickstart/migrating/#_5","text":"Also known as: \u201cWhy isn\u2019t my configuration having any effect anymore?\u201d Jupyter splitting out from IPython means that the locations of some files have moved, and Jupyter projects have not inherited everything from how IPython did it. When you start your first Jupyter application, the relevant configuration files are automatically copied to their new Jupyter locations. The original configuration files in the IPython locations have no effect on Jupyter\u2019s execution. If you accidentally edit your original IPython config file, you may not see the desired effect with Jupyter now. You should check that you are editing Jupyter\u2019s configuration file, and you should see the expected effect after restarting the Jupyter server.","title":"\u6211\u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u4e86\u54ea\u91cc\uff1f"},{"location":"Documentation/Quickstart/migrating/#_6","text":"This section provides quick reference for common locations of IPython 3 files and the migrated Jupyter files.","title":"\u67e5\u627e\u91cd\u8981\u6587\u4ef6\u7684\u4f4d\u7f6e"},{"location":"Documentation/Quickstart/migrating/#_7","text":"Configuration files customize Jupyter to the user\u2019s preferences. The migrated files should all be automatically copied to their new Jupyter locations. Here are the location changes: IPython location Jupyter location ~/.ipython/profile_default/static/custom \u2192 ~/.jupyter/custom ~/.ipython/profile_default/ipython_notebook_config.py \u2192 ~/.jupyter/jupyter_notebook_config.py ~/.ipython/profile_default/ipython_nbconvert_config.py \u2192 ~/.jupyter/jupyter_nbconvert_config.py ~/.ipython/profile_default/ipython_qtconsole_config.py \u2192 ~/.jupyter/jupyter_qtconsole_config.py ~/.ipython/profile_default/ipython_console_config.py \u2192 ~/.jupyter/jupyter_console_config.py To choose a directory location other than the default ~/.jupyter, set the JUPYTER_CONFIG_DIR environment variable. You may need to run jupyter migrate after setting the environment variable for files to be copied to the desired directory.","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/Quickstart/migrating/#kernelspecs-notebook","text":"Data files include files, other than configuration files, which are user installed. Examples include kernelspecs and notebook extensions. Like the configuration files, data files are also automatically migrated to their new Jupyter locations. In IPython 3, data files lived in ~/.ipython. In Jupyter, data files use platform-appropriate locations: OS X: ~/Library/Jupyter Windows: the location specified in %APPDATA% environment variable Elsewhere, \\$XDG_DATA_HOME is respected, with the default of ~/.local/share/jupyter In all cases, the JUPYTER_DATA_DIR environment variable can be used to set a location explicitly. Data files installed system-wide (e.g. in /usr/local/share/jupyter) have not changed. Per-user installation of data files has changed location from .ipython to the platform-appropriate Jupyter location.","title":"\u6570\u636e\u6587\u4ef6\uff1akernelspecs \u548c notebook \u6269\u5c55"},{"location":"Documentation/Quickstart/migrating/#jupyter","text":"While IPython has the concept of profiles, Jupyter does not have profiles. In IPython, profiles are collections of configuration and runtime files. Inside the IPython directory (~/.ipython), there are directories with names like profile_default or profile_demo. In each of these are configuration files (ipython_config.py, ipython_notebook_config.py) and runtime files (history.sqlite, security/kernel-*.json). Profiles could be used to switch between configurations of IPython. Previously, people could use commands like ipython notebook --profile demo to set the profile for both the notebook server and the IPython kernel. This is no longer possible in one go with Jupyter, just like it wasn\u2019t possible in IPython 3 for any other kernels.","title":"\u7531\u4e8e Jupyter \u6ca1\u6709\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u8be5\u5982\u4f55\u81ea\u5b9a\u4e49\u5b83\uff1f"},{"location":"Documentation/Quickstart/migrating/#jupyter_1","text":"If you want to change the notebook configuration, you can set the JUPYTER_CONFIG_DIR: JUPYTER_CONFIG_DIR=./jupyter_config jupyter notebook","title":"\u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u76ee\u5f55"},{"location":"Documentation/Quickstart/migrating/#jupyter_2","text":"If you just want to change the config file, you can do: jupyter notebook --config=/path/to/myconfig.py","title":"\u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/Quickstart/migrating/#kernelspecs-ipython","text":"If you do want to change the IPython kernel\u2019s profile, you can\u2019t do this at the server command-line anymore. Kernel arguments must be changed by modifying the kernelspec. You can do this without relaunching the server. Kernelspec changes take effect every time you start a new kernel. However, there isn\u2019t a great way to modify the kernelspecs. One approach uses jupyter kernelspec list to find the kernel.json file and then modifies it, e.g. kernels/python3/kernel.json, by hand. Alternatively, a2km is an experimental project that tries to make these things easier. For example, add the --profile option to a custom kernelspec under kernels/mycustom/kernel.json (see the Jupyter kernelspec directions here): { \"argv\" : [ \"python\" , \"-m\" , \"ipykernel\" , \"--profile=my-ipython-profile\" , \"-f\" , \"{connection_file}\" ], \"display_name\" : \"Custom Profile Python\" , \"language\" : \"python\" } You can then run Jupyter with the --kernel=mycustom command-line option and IPython will find the appropriate profile.","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49 kernelspecs \u66f4\u6539 IPython \u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"Documentation/Quickstart/migrating/#_8","text":"See the Installing Jupyter Notebook page for more information about installing Jupyter. Jupyter automatically migrates some things, like Notebook extensions and kernels.","title":"\u4e86\u89e3\u5b89\u88c5\u66f4\u6539"},{"location":"Documentation/Quickstart/migrating/#_9","text":"Any IPython notebook extensions should be automatically migrated as part of the data files migration. Notebook extensions were installed with: ipython install-nbextension [ --user ] EXTENSION Now, extensions are installed with: jupyter nbextension install [ --user ] EXTENSION The notebook extensions will be installed in a system-wide location (e.g. /usr/local/share/jupyter/nbextensions). If doing a --user install, the notebook extensions will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go.","title":"\u7b14\u8bb0\u672c\u6269\u5c55"},{"location":"Documentation/Quickstart/migrating/#_10","text":"Kernels are installed in much the same way as notebook extensions. They will also be automatically migrated. Kernel specs used to be installed with: ipython kernelspec install [ --user ] KERNEL They are now installed with: jupyter kernelspec install [ --user ] KERNEL By default, kernel specs will go in a system-wide location (e.g. /usr/local/share/jupyter/kernels). If doing a --user install, the kernel specs will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go.","title":"\u5185\u6838"},{"location":"Documentation/Quickstart/migrating/#_11","text":"IPython 4.0 includes shims to manage dependencies; so, all imports that work on IPython 3 should continue to work on IPython 4. If you find any differences, please let us know. Some changes include: IPython 3 Jupyter and IPython 4.0 IPython.html \u2192 notebook IPython.html.widgets \u2192 ipywidgets IPython.kernel \u2192 jupyter_client, ipykernel IPython.parallel \u2192 ipyparallel IPython.qt.console \u2192 qtconsole IPython.utils.traitlets \u2192 traitlets IPython.config \u2192 traitlets.config Important The IPython.kernel Split IPython.kernel became two packages: jupyter_client for the Jupyter client-side APIs. ipykernel for Jupyter\u2019s IPython kernel","title":"\u4e86\u89e3\u5165\u53e3\u7684\u53d8\u5316"},{"location":"Documentation/Quickstart/running/","text":"\u8fd0\u884c\u7b14\u8bb0\u672c \u00b6 Contents \u00b6 Basic Steps Starting the Notebook Server Introducing the Notebook Server\u2019s Command Line Options How do I open a specific Notebook? How do I start the Notebook using a custom IP or port? How do I start the Notebook server without opening a browser? How do I get help about Notebook server options? \u57fa\u672c\u6b65\u9aa4 \u00b6 \u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u60a8\u5e94\u8be5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u7b14\u8bb0\u672c\u6253\u5f00. \u542f\u52a8 Notebook \u670d\u52a1\u5668 \u00b6 \u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter Notebook \u540e\uff0c\u5373\u53ef\u8fd0\u884c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u884c(\u4f7f\u7528 Mac/Linux \u4e0a\u7684\u7ec8\u7aef\uff0cWindows \u4e0a\u7684\u547d\u4ee4\u63d0\u793a\u7b26)\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u8fd9\u5c06\u6253\u5370\u7ec8\u7aef\u4e2d\u6709\u5173\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5305\u62ec Web \u5e94\u7528\u7a0b\u5e8f\u7684 URL(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a http://localhost:8888): $ jupyter notebook [ I 08 :58:24.417 NotebookApp ] \u4ece\u672c\u5730\u76ee\u5f55\u63d0\u4f9b\u7b14\u8bb0\u672c: /Users/catherine [ I 08 :58:24.417 NotebookApp ] 0\u4e2a\u6d3b\u52a8\u5185\u6838 [ I 08 :58:24.417 NotebookApp ] Jupyter\u7b14\u8bb0\u672c\u6b63\u5728\u8fd0\u884c: http://localhost:8888/ [ I 08 :58:24.417 NotebookApp ] \u4f7f\u7528Control-C\u505c\u6b62\u6b64\u670d\u52a1\u5668\u5e76\u5173\u95ed\u6240\u6709\u5185\u6838\uff08\u4e24\u6b21\u8df3\u8fc7\u786e\u8ba4\uff09. \u7136\u540e\uff0c\u5b83\u5c06\u6253\u5f00\u60a8\u7684\u9ed8\u8ba4 Web \u6d4f\u89c8\u5668\u5230\u6b64 URL\u3002 \u5f53\u7b14\u8bb0\u672c\u7535\u8111\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u65f6\uff0c\u60a8\u5c06\u770b\u5230 Notebook Dashboard\uff0c\u5b83\u5c06\u663e\u793a\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u542f\u52a8\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u5217\u8868\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5728\u5305\u542b\u7b14\u8bb0\u672c\u7684\u6700\u9ad8\u7ea7\u76ee\u5f55\u4e2d\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u901a\u5e38\u8fd9\u5c06\u662f\u60a8\u7684\u4e3b\u76ee\u5f55\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f \u4ecb\u7ecd\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u547d\u4ee4\u884c\u9009\u9879 \u00b6 \u5982\u4f55\u6253\u5f00\u7279\u5b9a\u7684\u7b14\u8bb0\u672c\uff1f \u00b6 \u4ee5\u4e0b\u4ee3\u7801\u5e94\u5728\u5f53\u524d\u8fd0\u884c\u7684\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4e2d\u6253\u5f00\u7ed9\u5b9a\u7684\u7b14\u8bb0\u672c\uff0c\u5fc5\u8981\u65f6\u542f\u52a8\u4e00\u4e2a\u3002 jupyter notebook notebook.ipynb \u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49 IP \u6216\u7aef\u53e3\u542f\u52a8 Notebook\uff1f \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5728\u7aef\u53e3 8888 \u4e0a\u542f\u52a8\u3002\u5982\u679c\u7aef\u53e3 8888 \u4e0d\u53ef\u7528\u6216\u6b63\u5728\u4f7f\u7528\uff0c\u5219\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u641c\u7d22\u4e0b\u4e00\u4e2a\u53ef\u7528\u7aef\u53e3\u3002 \u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7aef\u53e3\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u670d\u52a1\u5668\u7684\u7aef\u53e3\u8bbe\u7f6e\u4e3a 9999: jupyter notebook --port 9999 \u5982\u4f55\u5728\u4e0d\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\u542f\u52a8 Notebook \u670d\u52a1\u5668\uff1f \u00b6 \u65e0\u9700\u6253\u5f00 Web \u6d4f\u89c8\u5668\u5373\u53ef\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668 jupyter notebook --no-browser \u5982\u4f55\u83b7\u5f97\u6709\u5173 Notebook \u670d\u52a1\u5668\u9009\u9879\u7684\u5e2e\u52a9\uff1f \u00b6 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4f7f\u7528 --help \u6807\u5fd7\u4e3a\u5176\u4ed6\u547d\u4ee4\u884c\u53c2\u6570\u63d0\u4f9b\u5e2e\u52a9\u6d88\u606f: jupyter notebook --help \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528 \u6709\u5173\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u548c\u7528\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u8fd0\u884c\u7b14\u8bb0\u672c"},{"location":"Documentation/Quickstart/running/#_1","text":"","title":"\u8fd0\u884c\u7b14\u8bb0\u672c"},{"location":"Documentation/Quickstart/running/#contents","text":"Basic Steps Starting the Notebook Server Introducing the Notebook Server\u2019s Command Line Options How do I open a specific Notebook? How do I start the Notebook using a custom IP or port? How do I start the Notebook server without opening a browser? How do I get help about Notebook server options?","title":"Contents"},{"location":"Documentation/Quickstart/running/#_2","text":"\u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u60a8\u5e94\u8be5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u7b14\u8bb0\u672c\u6253\u5f00.","title":"\u57fa\u672c\u6b65\u9aa4"},{"location":"Documentation/Quickstart/running/#notebook","text":"\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter Notebook \u540e\uff0c\u5373\u53ef\u8fd0\u884c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u884c(\u4f7f\u7528 Mac/Linux \u4e0a\u7684\u7ec8\u7aef\uff0cWindows \u4e0a\u7684\u547d\u4ee4\u63d0\u793a\u7b26)\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u8fd9\u5c06\u6253\u5370\u7ec8\u7aef\u4e2d\u6709\u5173\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5305\u62ec Web \u5e94\u7528\u7a0b\u5e8f\u7684 URL(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a http://localhost:8888): $ jupyter notebook [ I 08 :58:24.417 NotebookApp ] \u4ece\u672c\u5730\u76ee\u5f55\u63d0\u4f9b\u7b14\u8bb0\u672c: /Users/catherine [ I 08 :58:24.417 NotebookApp ] 0\u4e2a\u6d3b\u52a8\u5185\u6838 [ I 08 :58:24.417 NotebookApp ] Jupyter\u7b14\u8bb0\u672c\u6b63\u5728\u8fd0\u884c: http://localhost:8888/ [ I 08 :58:24.417 NotebookApp ] \u4f7f\u7528Control-C\u505c\u6b62\u6b64\u670d\u52a1\u5668\u5e76\u5173\u95ed\u6240\u6709\u5185\u6838\uff08\u4e24\u6b21\u8df3\u8fc7\u786e\u8ba4\uff09. \u7136\u540e\uff0c\u5b83\u5c06\u6253\u5f00\u60a8\u7684\u9ed8\u8ba4 Web \u6d4f\u89c8\u5668\u5230\u6b64 URL\u3002 \u5f53\u7b14\u8bb0\u672c\u7535\u8111\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u65f6\uff0c\u60a8\u5c06\u770b\u5230 Notebook Dashboard\uff0c\u5b83\u5c06\u663e\u793a\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u542f\u52a8\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u5217\u8868\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5728\u5305\u542b\u7b14\u8bb0\u672c\u7684\u6700\u9ad8\u7ea7\u76ee\u5f55\u4e2d\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u901a\u5e38\u8fd9\u5c06\u662f\u60a8\u7684\u4e3b\u76ee\u5f55\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f","title":"\u542f\u52a8 Notebook \u670d\u52a1\u5668"},{"location":"Documentation/Quickstart/running/#_3","text":"","title":"\u4ecb\u7ecd\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u547d\u4ee4\u884c\u9009\u9879"},{"location":"Documentation/Quickstart/running/#_4","text":"\u4ee5\u4e0b\u4ee3\u7801\u5e94\u5728\u5f53\u524d\u8fd0\u884c\u7684\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4e2d\u6253\u5f00\u7ed9\u5b9a\u7684\u7b14\u8bb0\u672c\uff0c\u5fc5\u8981\u65f6\u542f\u52a8\u4e00\u4e2a\u3002 jupyter notebook notebook.ipynb","title":"\u5982\u4f55\u6253\u5f00\u7279\u5b9a\u7684\u7b14\u8bb0\u672c\uff1f"},{"location":"Documentation/Quickstart/running/#ip-notebook","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5728\u7aef\u53e3 8888 \u4e0a\u542f\u52a8\u3002\u5982\u679c\u7aef\u53e3 8888 \u4e0d\u53ef\u7528\u6216\u6b63\u5728\u4f7f\u7528\uff0c\u5219\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u641c\u7d22\u4e0b\u4e00\u4e2a\u53ef\u7528\u7aef\u53e3\u3002 \u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7aef\u53e3\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u670d\u52a1\u5668\u7684\u7aef\u53e3\u8bbe\u7f6e\u4e3a 9999: jupyter notebook --port 9999","title":"\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49 IP \u6216\u7aef\u53e3\u542f\u52a8 Notebook\uff1f"},{"location":"Documentation/Quickstart/running/#notebook_1","text":"\u65e0\u9700\u6253\u5f00 Web \u6d4f\u89c8\u5668\u5373\u53ef\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668 jupyter notebook --no-browser","title":"\u5982\u4f55\u5728\u4e0d\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\u542f\u52a8 Notebook \u670d\u52a1\u5668\uff1f"},{"location":"Documentation/Quickstart/running/#notebook_2","text":"\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4f7f\u7528 --help \u6807\u5fd7\u4e3a\u5176\u4ed6\u547d\u4ee4\u884c\u53c2\u6570\u63d0\u4f9b\u5e2e\u52a9\u6d88\u606f: jupyter notebook --help \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528 \u6709\u5173\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u548c\u7528\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u5982\u4f55\u83b7\u5f97\u6709\u5173 Notebook \u670d\u52a1\u5668\u9009\u9879\u7684\u5e2e\u52a9\uff1f"},{"location":"Documentation/Reference/Glossary/","text":"\u8bcd\u6c47\u8868 \u00b6 \u672f\u8bed \u8bf4\u660e command line \u952e\u5165\u547d\u4ee4\u7684\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\u7a97\u53e3\u3002 Command Prompt \u5728 Windows \u4e0a\uff0c\u8fd9\u662f\u5c06\u547d\u4ee4\u952e\u5165\u7a97\u53e3\u4ee5\u4f9b\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 conda Anaconda \u7684\u5305\u88f9\u7ecf\u7406\u3002 config \u6307\u914d\u7f6e\u6587\u4ef6\u548c\u8fdb\u7a0b\u3002 kernel \u5185\u6838\u5728 Jupyter \u4e2d\u63d0\u4f9b\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u3002 IPython \u662f\u9ed8\u8ba4\u7684\u5185\u6838\u3002\u5176\u4ed6\u5185\u6838\u5305\u62ec R\uff0cJulia \u7b49\u7b49\u3002 Notebook Dashboard \u7b14\u8bb0\u672c\u7528\u6237\u754c\u9762\uff0c\u663e\u793a\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u7684\u5217\u8868\u3002 pip Python \u5305\u7ba1\u7406\u5668\u3002 profiles \u5728 Jupyter \u4e2d\u4e0d\u53ef\u7528\u3002\u5728 IPython 3 \u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\u662f\u914d\u7f6e\u548c\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u96c6\u5408\u3002 REPL read-eval-print-loop. terminal \u7528\u4e8e\u8f93\u5165\u8981\u6267\u884c\u7684\u547d\u4ee4\u7684\u7a97\u53e3\uff08Linux \u548c OS X\uff09\u3002 widget \u7c7b\u4f3c\u4e8e\u63d2\u4ef6\u7684\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8f93\u5165\uff0c\u4f8b\u5982\u6ed1\u5757\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"Documentation/Reference/Glossary/#_1","text":"\u672f\u8bed \u8bf4\u660e command line \u952e\u5165\u547d\u4ee4\u7684\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\u7a97\u53e3\u3002 Command Prompt \u5728 Windows \u4e0a\uff0c\u8fd9\u662f\u5c06\u547d\u4ee4\u952e\u5165\u7a97\u53e3\u4ee5\u4f9b\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 conda Anaconda \u7684\u5305\u88f9\u7ecf\u7406\u3002 config \u6307\u914d\u7f6e\u6587\u4ef6\u548c\u8fdb\u7a0b\u3002 kernel \u5185\u6838\u5728 Jupyter \u4e2d\u63d0\u4f9b\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u3002 IPython \u662f\u9ed8\u8ba4\u7684\u5185\u6838\u3002\u5176\u4ed6\u5185\u6838\u5305\u62ec R\uff0cJulia \u7b49\u7b49\u3002 Notebook Dashboard \u7b14\u8bb0\u672c\u7528\u6237\u754c\u9762\uff0c\u663e\u793a\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u7684\u5217\u8868\u3002 pip Python \u5305\u7ba1\u7406\u5668\u3002 profiles \u5728 Jupyter \u4e2d\u4e0d\u53ef\u7528\u3002\u5728 IPython 3 \u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\u662f\u914d\u7f6e\u548c\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u96c6\u5408\u3002 REPL read-eval-print-loop. terminal \u7528\u4e8e\u8f93\u5165\u8981\u6267\u884c\u7684\u547d\u4ee4\u7684\u7a97\u53e3\uff08Linux \u548c OS X\uff09\u3002 widget \u7c7b\u4f3c\u4e8e\u63d2\u4ef6\u7684\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8f93\u5165\uff0c\u4f8b\u5982\u6ed1\u5757\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"Documentation/Reference/MIME-types/","text":"\u81ea\u5b9a\u4e49 mimetypes (MIME types) \u00b6 \u4ec0\u4e48\u662f mimetype\uff1f \u00b6 \u53d1\u751f Internet \u8bf7\u6c42\u548c\u54cd\u5e94\u65f6\uff0c\u5c06\u4f20\u9012 Content-Type \u6807\u5934\u3002 mimetype\uff08\u4e5f\u79f0\u4e3a MIME \u7c7b\u578b\uff09\u6807\u8bc6\u5e94\u7531\u5e94\u7528\u7a0b\u5e8f\u548c\u6d4f\u89c8\u5668\u6839\u636e\u7c7b\u578b\u5904\u7406\u6216\u4f7f\u7528\u8fd4\u56de\u7684\u5185\u5bb9\u7684\u65b9\u5f0f\u3002 MIME \u7c7b\u578b\u7531 MIME \u7ec4\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\uff0c\u56fe\u50cf\uff0c\u97f3\u9891\u7b49\uff09\u548c MIME \u5b50\u7c7b\u578b\u7ec4\u6210\u3002 \u4f8b\u5982\uff0cMIME \u7c7b\u578b\u662f image/png\uff0c\u5176\u4e2d MIME \u7ec4\u662f image\uff0c\u5b50\u7c7b\u578b\u662f png\u3002 \u7531\u4e8e\u7c7b\u578b\u53ef\u80fd\u5305\u542b\u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u4f9b\u5e94\u5546\u7279\u5b9a\u7684 MIME \u7c7b\u578b vnd\u3002 \u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546\u7684 MIME \u7c7b\u578b\u5c06\u5305\u542b vnd\uff0c\u4f8b\u5982 application/vnd.jupyter.cells\u3002 Jupyter \u548c IPython \u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49 mimetypes \u00b6 application/vnd.jupyter application/vnd.jupyter.cells application/vnd.jupyter.dragindex \u7531 nbdime \u4f7f\u7528 application/x-ipynb+json \u7528\u4e8e\u7b14\u8bb0\u672c text/html metadata: isolated: boolean \u2013 HTML\u5e94\u8be5\u5728 <iframe> \u4e2d\u5448\u73b0\u3002 \u5217\u51fa\u7528\u4e8e\u663e\u793a\u7684\u81ea\u5b9a\u4e49 mimetypes \u00b6 application/vnd.geo+json - \u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 GeoJSON \u89c4\u8303 application/vnd.geo + json\uff0c\u5e76\u5c06\u5176\u66ff\u6362\u4e3a application/geo + json application/geo+json - \u9996\u9009 GeoJSON \u89c4\u8303 application/vnd.plotly.v1+json - Plotly JSON Schema application/vdom.v1+json - \u865a\u62df DOM \u89c4\u8303","title":"\u81ea\u5b9a\u4e49 mimetypes (MIME types)"},{"location":"Documentation/Reference/MIME-types/#mimetypes-mime-types","text":"","title":"\u81ea\u5b9a\u4e49 mimetypes (MIME types)"},{"location":"Documentation/Reference/MIME-types/#mimetype","text":"\u53d1\u751f Internet \u8bf7\u6c42\u548c\u54cd\u5e94\u65f6\uff0c\u5c06\u4f20\u9012 Content-Type \u6807\u5934\u3002 mimetype\uff08\u4e5f\u79f0\u4e3a MIME \u7c7b\u578b\uff09\u6807\u8bc6\u5e94\u7531\u5e94\u7528\u7a0b\u5e8f\u548c\u6d4f\u89c8\u5668\u6839\u636e\u7c7b\u578b\u5904\u7406\u6216\u4f7f\u7528\u8fd4\u56de\u7684\u5185\u5bb9\u7684\u65b9\u5f0f\u3002 MIME \u7c7b\u578b\u7531 MIME \u7ec4\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\uff0c\u56fe\u50cf\uff0c\u97f3\u9891\u7b49\uff09\u548c MIME \u5b50\u7c7b\u578b\u7ec4\u6210\u3002 \u4f8b\u5982\uff0cMIME \u7c7b\u578b\u662f image/png\uff0c\u5176\u4e2d MIME \u7ec4\u662f image\uff0c\u5b50\u7c7b\u578b\u662f png\u3002 \u7531\u4e8e\u7c7b\u578b\u53ef\u80fd\u5305\u542b\u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u4f9b\u5e94\u5546\u7279\u5b9a\u7684 MIME \u7c7b\u578b vnd\u3002 \u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546\u7684 MIME \u7c7b\u578b\u5c06\u5305\u542b vnd\uff0c\u4f8b\u5982 application/vnd.jupyter.cells\u3002","title":"\u4ec0\u4e48\u662f mimetype\uff1f"},{"location":"Documentation/Reference/MIME-types/#jupyter-ipython-mimetypes","text":"application/vnd.jupyter application/vnd.jupyter.cells application/vnd.jupyter.dragindex \u7531 nbdime \u4f7f\u7528 application/x-ipynb+json \u7528\u4e8e\u7b14\u8bb0\u672c text/html metadata: isolated: boolean \u2013 HTML\u5e94\u8be5\u5728 <iframe> \u4e2d\u5448\u73b0\u3002","title":"Jupyter \u548c IPython \u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49 mimetypes"},{"location":"Documentation/Reference/MIME-types/#mimetypes","text":"application/vnd.geo+json - \u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 GeoJSON \u89c4\u8303 application/vnd.geo + json\uff0c\u5e76\u5c06\u5176\u66ff\u6362\u4e3a application/geo + json application/geo+json - \u9996\u9009 GeoJSON \u89c4\u8303 application/vnd.plotly.v1+json - Plotly JSON Schema application/vdom.v1+json - \u865a\u62df DOM \u89c4\u8303","title":"\u5217\u51fa\u7528\u4e8e\u663e\u793a\u7684\u81ea\u5b9a\u4e49 mimetypes"},{"location":"Install/","text":"\u5b89\u88c5 \u00b6","title":"\u5b89\u88c5"},{"location":"Install/#_1","text":"","title":"\u5b89\u88c5"},{"location":"JupyterHub/","text":"JupyterHub \u00b6 A multi-user version of the notebook designed for companies, classrooms and research labs What is JupyterHub? JupyterHub brings the power of notebooks to groups of users. It gives users access to computational environments and resources without burdening the users with installation and maintenance tasks. Users - including students, researchers, and data scientists - can get their work done in their own workspaces on shared resources which can be managed efficiently by system administrators. JupyterHub runs in the cloud or on your own hardware, and makes it possible to serve a pre-configured data science environment to any user in the world. It is customizable and scalable, and is suitable for small and large teams, academic courses, and large-scale infrastructure. Key features of JupyterHub Customizable - JupyterHub can be used to serve a variety of environments. It supports dozens of kernels with the Jupyter server, and can be used to serve a variety of user interfaces including the Jupyter Notebook, Jupyter Lab, RStudio, nteract, and more. Flexible - JupyterHub can be configured with authentication in order to provide access to a subset of users. Authentication is pluggable, supporting a number of authentication protocols (such as OAuth and GitHub). Scalable - JupyterHub is container-friendly, and can be deployed with modern-day container technology. It also runs on Kubernetes, and can run with up to tens of thousands of users. Portable - JupyterHub is entirely open-source and designed to be run on a variety of infrastructure. This includes commercial cloud providers, virtual machines, or even your own laptop hardware. The foundational JupyterHub code and technology can be found in the JupyterHub repository. This repository and the JupyterHub documentation contain more information about the internals of JupyterHub, its customization, and its configuration. Deploy a JupyterHub The Jupyter Community curates two JupyterHub \u201cdistributions\u201d for deploying in the cloud. Follow the links below for more information. Zero to JupyterHub for Kubernetes deploys JupyterHub on Kubernetes using Docker, allowing it to be scaled and maintained efficiently for large numbers of users. Zero to JupyterHub is a Helm Chart for deploying JupyterHub quickly, as well as a guide to deploying and configuring your JupyterHub on Kubernetes. The Littlest JupyterHub, a recent and evolving distribution designed for smaller deployments, is a lightweight method to install JupyterHub on a single virtual machine. The Littlest JupyterHub (also known as TLJH), provides a guide with information on creating a VM on several cloud providers, as well as installing and customizing JupyterHub so that users may access it at a public URL. Join the community Like all Project Jupyter efforts, JupyterHub is an open-source and community-driven project. We\u2019d love for you to join our community and contribute code, time, comments, or appreciation. The JupyterHub Gitter Channel is a place where the JupyterHub community discuses developments in the JupyterHub technology, as well as best-practices in deploying and debugging.","title":"JupyterHub"},{"location":"JupyterHub/#jupyterhub","text":"A multi-user version of the notebook designed for companies, classrooms and research labs What is JupyterHub? JupyterHub brings the power of notebooks to groups of users. It gives users access to computational environments and resources without burdening the users with installation and maintenance tasks. Users - including students, researchers, and data scientists - can get their work done in their own workspaces on shared resources which can be managed efficiently by system administrators. JupyterHub runs in the cloud or on your own hardware, and makes it possible to serve a pre-configured data science environment to any user in the world. It is customizable and scalable, and is suitable for small and large teams, academic courses, and large-scale infrastructure. Key features of JupyterHub Customizable - JupyterHub can be used to serve a variety of environments. It supports dozens of kernels with the Jupyter server, and can be used to serve a variety of user interfaces including the Jupyter Notebook, Jupyter Lab, RStudio, nteract, and more. Flexible - JupyterHub can be configured with authentication in order to provide access to a subset of users. Authentication is pluggable, supporting a number of authentication protocols (such as OAuth and GitHub). Scalable - JupyterHub is container-friendly, and can be deployed with modern-day container technology. It also runs on Kubernetes, and can run with up to tens of thousands of users. Portable - JupyterHub is entirely open-source and designed to be run on a variety of infrastructure. This includes commercial cloud providers, virtual machines, or even your own laptop hardware. The foundational JupyterHub code and technology can be found in the JupyterHub repository. This repository and the JupyterHub documentation contain more information about the internals of JupyterHub, its customization, and its configuration. Deploy a JupyterHub The Jupyter Community curates two JupyterHub \u201cdistributions\u201d for deploying in the cloud. Follow the links below for more information. Zero to JupyterHub for Kubernetes deploys JupyterHub on Kubernetes using Docker, allowing it to be scaled and maintained efficiently for large numbers of users. Zero to JupyterHub is a Helm Chart for deploying JupyterHub quickly, as well as a guide to deploying and configuring your JupyterHub on Kubernetes. The Littlest JupyterHub, a recent and evolving distribution designed for smaller deployments, is a lightweight method to install JupyterHub on a single virtual machine. The Littlest JupyterHub (also known as TLJH), provides a guide with information on creating a VM on several cloud providers, as well as installing and customizing JupyterHub so that users may access it at a public URL. Join the community Like all Project Jupyter efforts, JupyterHub is an open-source and community-driven project. We\u2019d love for you to join our community and contribute code, time, comments, or appreciation. The JupyterHub Gitter Channel is a place where the JupyterHub community discuses developments in the JupyterHub technology, as well as best-practices in deploying and debugging.","title":"JupyterHub"},{"location":"Widgets/","text":"Interactive Widgets \u00b6 Jupyter widgets enable interactive data visualization in the Jupyter notebooks. icon to represent multiple notebooksNotebook Widgets Notebooks come alive when interactive widgets are used. Users can visualize and control changes in the data. Learning becomes an immersive, plus fun, experience. Researchers can easily see how changing inputs to a model impacts the results. ipyleaflet Geo-spatial analytics bqplot 2-D interactive data visualization pythreejs 3-D data visualization ipyvolume 3-D plotting nglview 3-D interactive molecular visualization BeakerX tables, plotting, forms jupyter-gmaps Data visualization on Google Maps cookiecutter Template widget project ipyleaflet Binder GitHub A library for creating simple interactive maps with panning and zooming, ipyleaflet supports annotations such as polygons, markers, and more generally any geojson-encoded geographical data structure. Example from ipyleaflet import Map Map(center=[34.6252978589571, -77.34580993652344], zoom=10) + \u2212 Leaflet | Map data (c) OpenStreetMap contributors Installation With conda: conda install -c conda-forge ipyleaflet With pip: pip install ipyleaflet jupyter nbextension enable --py --sys-prefix ipyleaflet","title":"Interactive Widgets"},{"location":"Widgets/#interactive-widgets","text":"Jupyter widgets enable interactive data visualization in the Jupyter notebooks. icon to represent multiple notebooksNotebook Widgets Notebooks come alive when interactive widgets are used. Users can visualize and control changes in the data. Learning becomes an immersive, plus fun, experience. Researchers can easily see how changing inputs to a model impacts the results. ipyleaflet Geo-spatial analytics bqplot 2-D interactive data visualization pythreejs 3-D data visualization ipyvolume 3-D plotting nglview 3-D interactive molecular visualization BeakerX tables, plotting, forms jupyter-gmaps Data visualization on Google Maps cookiecutter Template widget project ipyleaflet Binder GitHub A library for creating simple interactive maps with panning and zooming, ipyleaflet supports annotations such as polygons, markers, and more generally any geojson-encoded geographical data structure. Example from ipyleaflet import Map Map(center=[34.6252978589571, -77.34580993652344], zoom=10) + \u2212 Leaflet | Map data (c) OpenStreetMap contributors Installation With conda: conda install -c conda-forge ipyleaflet With pip: pip install ipyleaflet jupyter nbextension enable --py --sys-prefix ipyleaflet","title":"Interactive Widgets"},{"location":"nbviewer/","text":"nbviewer \u00b6 nbviewer A simple way to share Jupyter Notebooks Enter the location of a Jupyter Notebook to have it rendered here: URL | GitHub username | GitHub username/repo | Gist ID Programming Languages IPython IRuby IJulia Books Python for Signal Processing O'Reilly Book Probabilistic Programming Misc Data Visualization with Lightning Interactive data visualization with Bokeh Interactive plots with Plotly XKCD Plot With Matplotlib Python for Vision Research Non Parametric Regression Partial Differential Equations Solver Analysis of current events Jaynes-Cummings model","title":"nbviewer"},{"location":"nbviewer/#nbviewer","text":"nbviewer A simple way to share Jupyter Notebooks Enter the location of a Jupyter Notebook to have it rendered here: URL | GitHub username | GitHub username/repo | Gist ID Programming Languages IPython IRuby IJulia Books Python for Signal Processing O'Reilly Book Probabilistic Programming Misc Data Visualization with Lightning Interactive data visualization with Bokeh Interactive plots with Plotly XKCD Plot With Matplotlib Python for Vision Research Non Parametric Regression Partial Differential Equations Solver Analysis of current events Jaynes-Cummings model","title":"nbviewer"}]}