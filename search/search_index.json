{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"jypyter \u00b6 Project Jupyter \u65e8\u5728\u4e3a\u6570\u5341\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5f00\u653e\u6807\u51c6\u548c\u670d\u52a1\u3002 Lorenz \u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u7b14\u8bb0\u672c Jupyter \u7b14\u8bb0\u672c \u00b6 Jupyter Notebook \u662f\u4e00\u4e2a\u5f00\u6e90 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\uff0c\u65b9\u7a0b\u5f0f\uff0c\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u7528\u9014\u5305\u62ec\uff1a\u6570\u636e\u6e05\u7406\u548c\u8f6c\u6362\uff0c\u6570\u503c\u6a21\u62df\uff0c\u7edf\u8ba1\u5efa\u6a21\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u673a\u5668\u5b66\u4e60\u7b49\u7b49\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bd5\u7528\u5b89\u88c5\u7b14\u8bb0\u672c \u9009\u62e9\u7684\u8bed\u8a00 \u00b6 \u8be5\u7b14\u8bb0\u672c\u652f\u6301 40 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Python\uff0cR\uff0cJulia \u548c Scala\u3002 \u5206\u4eab\u7b14\u8bb0\u672c \u00b6 \u53ef\u4ee5\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\uff0cDropbox\uff0cGitHub \u548c Jupyter Notebook Viewer \u4e0e\u5176\u4ed6\u4eba\u5171\u4eab\u7b14\u8bb0\u672c\u3002 \u4e92\u52a8\u8f93\u51fa \u00b6 \u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u751f\u6210\u4e30\u5bcc\u7684\u4ea4\u4e92\u5f0f\u8f93\u51fa\uff1aHTML\uff0c\u56fe\u50cf\uff0c\u89c6\u9891\uff0cLaTeX \u548c\u81ea\u5b9a\u4e49 MIME \u7c7b\u578b\u3002 \u5927\u6570\u636e\u96c6\u6210 \u00b6 \u5229\u7528 Python\uff0cR \u548c Scala \u7b49\u5927\u6570\u636e\u5de5\u5177\uff0c\u5982 Apache Spark\u3002 \u4f7f\u7528 pandas\uff0cscikit-learn\uff0cggplot2\uff0cTensorFlow \u63a2\u7d22\u76f8\u540c\u7684\u6570\u636e\u3002 jupyterhub \u00b6 \u7b14\u8bb0\u672c\u7535\u8111\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1 \u53ef\u63d2\u62d4\u8eab\u4efd\u9a8c\u8bc1 \u00b6 \u4f7f\u7528 PAM\uff0cOAuth \u7ba1\u7406\u7528\u6237\u548c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u6216\u4e0e\u60a8\u81ea\u5df1\u7684\u76ee\u5f55\u670d\u52a1\u7cfb\u7edf\u96c6\u6210\u3002 \u96c6\u4e2d\u90e8\u7f72 \u00b6 \u5c06 Jupyter Notebook \u90e8\u7f72\u5230\u7ec4\u7ec7\u4e2d\u7684\u6570\u5343\u540d\u7528\u6237\uff0c\u65e0\u8bba\u662f\u5728\u7ad9\u70b9\u5185\u8fd8\u662f\u7ad9\u70b9\u5916\u7684\u96c6\u4e2d\u5f0f\u57fa\u7840\u67b6\u6784\u3002 \u5bb9\u5668\u53cb\u597d \u00b6 \u4f7f\u7528 Docker \u548c Kubernetes \u6269\u5c55\u90e8\u7f72\uff0c\u9694\u79bb\u7528\u6237\u8fdb\u7a0b\u5e76\u7b80\u5316\u8f6f\u4ef6\u5b89\u88c5\u3002 \u4ee3\u7801\u7b26\u5408\u6570\u636e \u00b6 \u5728\u6570\u636e\u65c1\u8fb9\u90e8\u7f72 Notebook\uff0c\u4ee5\u5728\u7ec4\u7ec7\u5185\u63d0\u4f9b\u7edf\u4e00\u7684\u8f6f\u4ef6\u7ba1\u7406\u548c\u6570\u636e\u8bbf\u95ee\u3002 \u4e86\u89e3\u6709\u5173 JupyterHub \u7684\u66f4\u591a\u4fe1\u606f \u76ee\u524d\u6b63\u5728\u4f7f\u7528\u4e2d \u00b6 Google Microsoft IBM Bloomberg OReilly Anaconda Rackspace SoundCloud Quantopian NetApp Carpentry Janelia CodeNeuro NSite CoCalc BrynMawr CalPoly Berkeley Sheffield Washington Clemson Michigan State University Northwestern University NYU NASA Ayasdi The Data Incubator \u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6 \u00b6 Jupyter \u7b14\u8bb0\u672c\u57fa\u4e8e\u4e00\u5957\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6\u3002 \u5c06 HTML \u548c CSS \u89c6\u4e3a Web \u4e0a\u7684\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u3002 \u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5f00\u653e\u6807\u51c6\u6765\u6784\u5efa\u5177\u6709\u5d4c\u5165\u5f0f\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u3002","title":"jypyter"},{"location":"#jypyter","text":"Project Jupyter \u65e8\u5728\u4e3a\u6570\u5341\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5f00\u653e\u6807\u51c6\u548c\u670d\u52a1\u3002 Lorenz \u5fae\u5206\u65b9\u7a0b\u7684\u793a\u4f8b\u7b14\u8bb0\u672c","title":"jypyter"},{"location":"#jupyter","text":"Jupyter Notebook \u662f\u4e00\u4e2a\u5f00\u6e90 Web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\uff0c\u65b9\u7a0b\u5f0f\uff0c\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u7528\u9014\u5305\u62ec\uff1a\u6570\u636e\u6e05\u7406\u548c\u8f6c\u6362\uff0c\u6570\u503c\u6a21\u62df\uff0c\u7edf\u8ba1\u5efa\u6a21\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u673a\u5668\u5b66\u4e60\u7b49\u7b49\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bd5\u7528\u5b89\u88c5\u7b14\u8bb0\u672c","title":"Jupyter \u7b14\u8bb0\u672c"},{"location":"#_1","text":"\u8be5\u7b14\u8bb0\u672c\u652f\u6301 40 \u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec Python\uff0cR\uff0cJulia \u548c Scala\u3002","title":"\u9009\u62e9\u7684\u8bed\u8a00"},{"location":"#_2","text":"\u53ef\u4ee5\u4f7f\u7528\u7535\u5b50\u90ae\u4ef6\uff0cDropbox\uff0cGitHub \u548c Jupyter Notebook Viewer \u4e0e\u5176\u4ed6\u4eba\u5171\u4eab\u7b14\u8bb0\u672c\u3002","title":"\u5206\u4eab\u7b14\u8bb0\u672c"},{"location":"#_3","text":"\u60a8\u7684\u4ee3\u7801\u53ef\u4ee5\u751f\u6210\u4e30\u5bcc\u7684\u4ea4\u4e92\u5f0f\u8f93\u51fa\uff1aHTML\uff0c\u56fe\u50cf\uff0c\u89c6\u9891\uff0cLaTeX \u548c\u81ea\u5b9a\u4e49 MIME \u7c7b\u578b\u3002","title":"\u4e92\u52a8\u8f93\u51fa"},{"location":"#_4","text":"\u5229\u7528 Python\uff0cR \u548c Scala \u7b49\u5927\u6570\u636e\u5de5\u5177\uff0c\u5982 Apache Spark\u3002 \u4f7f\u7528 pandas\uff0cscikit-learn\uff0cggplot2\uff0cTensorFlow \u63a2\u7d22\u76f8\u540c\u7684\u6570\u636e\u3002","title":"\u5927\u6570\u636e\u96c6\u6210"},{"location":"#jupyterhub","text":"\u7b14\u8bb0\u672c\u7535\u8111\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1","title":"jupyterhub"},{"location":"#_5","text":"\u4f7f\u7528 PAM\uff0cOAuth \u7ba1\u7406\u7528\u6237\u548c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u6216\u4e0e\u60a8\u81ea\u5df1\u7684\u76ee\u5f55\u670d\u52a1\u7cfb\u7edf\u96c6\u6210\u3002","title":"\u53ef\u63d2\u62d4\u8eab\u4efd\u9a8c\u8bc1"},{"location":"#_6","text":"\u5c06 Jupyter Notebook \u90e8\u7f72\u5230\u7ec4\u7ec7\u4e2d\u7684\u6570\u5343\u540d\u7528\u6237\uff0c\u65e0\u8bba\u662f\u5728\u7ad9\u70b9\u5185\u8fd8\u662f\u7ad9\u70b9\u5916\u7684\u96c6\u4e2d\u5f0f\u57fa\u7840\u67b6\u6784\u3002","title":"\u96c6\u4e2d\u90e8\u7f72"},{"location":"#_7","text":"\u4f7f\u7528 Docker \u548c Kubernetes \u6269\u5c55\u90e8\u7f72\uff0c\u9694\u79bb\u7528\u6237\u8fdb\u7a0b\u5e76\u7b80\u5316\u8f6f\u4ef6\u5b89\u88c5\u3002","title":"\u5bb9\u5668\u53cb\u597d"},{"location":"#_8","text":"\u5728\u6570\u636e\u65c1\u8fb9\u90e8\u7f72 Notebook\uff0c\u4ee5\u5728\u7ec4\u7ec7\u5185\u63d0\u4f9b\u7edf\u4e00\u7684\u8f6f\u4ef6\u7ba1\u7406\u548c\u6570\u636e\u8bbf\u95ee\u3002 \u4e86\u89e3\u6709\u5173 JupyterHub \u7684\u66f4\u591a\u4fe1\u606f","title":"\u4ee3\u7801\u7b26\u5408\u6570\u636e"},{"location":"#_9","text":"Google Microsoft IBM Bloomberg OReilly Anaconda Rackspace SoundCloud Quantopian NetApp Carpentry Janelia CodeNeuro NSite CoCalc BrynMawr CalPoly Berkeley Sheffield Washington Clemson Michigan State University Northwestern University NYU NASA Ayasdi The Data Incubator","title":"\u76ee\u524d\u6b63\u5728\u4f7f\u7528\u4e2d"},{"location":"#_10","text":"Jupyter \u7b14\u8bb0\u672c\u57fa\u4e8e\u4e00\u5957\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6\u3002 \u5c06 HTML \u548c CSS \u89c6\u4e3a Web \u4e0a\u7684\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u3002 \u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5f00\u653e\u6807\u51c6\u6765\u6784\u5efa\u5177\u6709\u5d4c\u5165\u5f0f\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u7684\u5f00\u653e\u6807\u51c6"},{"location":"About-Us/","text":"\u5173\u4e8e\u6211\u4eec \u00b6 Some information about the Jupyter Project and Community Project Jupyter is a non-profit, open-source project, born out of the IPython Project in 2014 as it evolved to support interactive data science and scientific computing across all programming languages. Jupyter will always be 100% open-source software, free for all to use and released under the liberal terms of the modified BSD license. Jupyter is developed in the open on GitHub, through the consensus of the Jupyter community. For more information on our governance approach, please see our Governance Document. All online and in-person interactions and communications directly related to the project are covered by the Jupyter Code of Conduct. This Code of Conduct sets expectations to enable a diverse community of users and contributors to participate in the project with respect and safety. steering committee iconSteering Council The role of the Jupyter Steering Council is to ensure, through working with and serving the broader Jupyter community, the long-term well-being of the project, both technically and as a community. The Jupyter Steering Council currently consists of the following members (in alphabetical order). Damian Avila's avatar picture Damian AvilaAnaconda, Inc. @damianavila on GitHubMatthias Bussonnier's avatar picture Matthias BussonnierUC Merced @Carreau on GitHubSylvain Corlay's avatar picture Sylvain CorlayQuantStack @sylvaincorlay on GitHubAfshin Darian's avatar picture Afshin DarianTwo Sigma @afshin on GitHubBrian Granger's avatar picture Brian GrangerCal Poly, San Luis Obispo @ellisonbg on GitHubJason Grout's avatar picture Jason GroutBloomberg @jasongrout on GitHubJessica Hamrick's avatar picture Jessica HamrickDeepMind @jhamrick on GitHubPaul Ivanov's avatar picture Paul IvanovBloomberg @ivanov on GitHubKyle Kelley's avatar picture Kyle KelleyNetflix @rgbkrk on GitHubThomas Kluyver's avatar picture Thomas KluyverUniversity of Southampton @takluyver on GitHubPeter Parente's avatar picture Peter ParenteValassis Digital @parente on GitHubFernando Perez's avatar picture Fernando PerezUC Berkeley @fperez on GitHubMin Ragan-Kelley's avatar picture Min Ragan-KelleySimula Research Lab @minrk on GitHubAna Ruvalcaba's avatar picture Ana RuvalcabaCal Poly, San Luis Obispo @ruv7 on GitHubSteven Silvester's avatar picture Steven SilvesterJPMorgan Chase @blink1073 on GitHubCarol Willing's avatar picture Carol WillingCal Poly @willingc on GitHub Retired Steering Council Member Jonathan Frederic's avatar picture Jonathan FredericMember: 2016-2018 @jdfreder on GitHub sponsors Sponsors Project Jupyter receives direct funding from the following sources: helmsley trust logo sloan logo moore foundation logo google logo rackspace logo fastly logo EU logo microsoft logo institutional partnersInstitutional Partners Institutional Partners are organizations that support the project by employing Jupyter Steering Council members. Current Institutional Partners include: anaconda inc logo bloomberg logo netflix logo cal poly logo UC Berkeley logo QuantStack logo JPMorgan Chase logo Two Sigma logo microsoft logo Donations Jupyter will always be 100% open source software, free for all to use and released under the liberal terms of the modified BSD license. If you have found Project Jupyter to be useful in your work, research or company, please consider making a donation to the project commensurate with your resources. All donations will be used strictly to fund the development of Project Jupyter\u2019s open source software, documentation and community. Our donations are managed by the NumFOCUS Foundation, which is the legal and fiscal umbrella for the project. NumFOCUS is a 501(c)3 non-profit foundation; if you are subject to US Tax law, your contributions will be tax-deductible.","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"About-Us/#_1","text":"Some information about the Jupyter Project and Community Project Jupyter is a non-profit, open-source project, born out of the IPython Project in 2014 as it evolved to support interactive data science and scientific computing across all programming languages. Jupyter will always be 100% open-source software, free for all to use and released under the liberal terms of the modified BSD license. Jupyter is developed in the open on GitHub, through the consensus of the Jupyter community. For more information on our governance approach, please see our Governance Document. All online and in-person interactions and communications directly related to the project are covered by the Jupyter Code of Conduct. This Code of Conduct sets expectations to enable a diverse community of users and contributors to participate in the project with respect and safety. steering committee iconSteering Council The role of the Jupyter Steering Council is to ensure, through working with and serving the broader Jupyter community, the long-term well-being of the project, both technically and as a community. The Jupyter Steering Council currently consists of the following members (in alphabetical order). Damian Avila's avatar picture Damian AvilaAnaconda, Inc. @damianavila on GitHubMatthias Bussonnier's avatar picture Matthias BussonnierUC Merced @Carreau on GitHubSylvain Corlay's avatar picture Sylvain CorlayQuantStack @sylvaincorlay on GitHubAfshin Darian's avatar picture Afshin DarianTwo Sigma @afshin on GitHubBrian Granger's avatar picture Brian GrangerCal Poly, San Luis Obispo @ellisonbg on GitHubJason Grout's avatar picture Jason GroutBloomberg @jasongrout on GitHubJessica Hamrick's avatar picture Jessica HamrickDeepMind @jhamrick on GitHubPaul Ivanov's avatar picture Paul IvanovBloomberg @ivanov on GitHubKyle Kelley's avatar picture Kyle KelleyNetflix @rgbkrk on GitHubThomas Kluyver's avatar picture Thomas KluyverUniversity of Southampton @takluyver on GitHubPeter Parente's avatar picture Peter ParenteValassis Digital @parente on GitHubFernando Perez's avatar picture Fernando PerezUC Berkeley @fperez on GitHubMin Ragan-Kelley's avatar picture Min Ragan-KelleySimula Research Lab @minrk on GitHubAna Ruvalcaba's avatar picture Ana RuvalcabaCal Poly, San Luis Obispo @ruv7 on GitHubSteven Silvester's avatar picture Steven SilvesterJPMorgan Chase @blink1073 on GitHubCarol Willing's avatar picture Carol WillingCal Poly @willingc on GitHub Retired Steering Council Member Jonathan Frederic's avatar picture Jonathan FredericMember: 2016-2018 @jdfreder on GitHub sponsors Sponsors Project Jupyter receives direct funding from the following sources: helmsley trust logo sloan logo moore foundation logo google logo rackspace logo fastly logo EU logo microsoft logo institutional partnersInstitutional Partners Institutional Partners are organizations that support the project by employing Jupyter Steering Council members. Current Institutional Partners include: anaconda inc logo bloomberg logo netflix logo cal poly logo UC Berkeley logo QuantStack logo JPMorgan Chase logo Two Sigma logo microsoft logo Donations Jupyter will always be 100% open source software, free for all to use and released under the liberal terms of the modified BSD license. If you have found Project Jupyter to be useful in your work, research or company, please consider making a donation to the project commensurate with your resources. All donations will be used strictly to fund the development of Project Jupyter\u2019s open source software, documentation and community. Our donations are managed by the NumFOCUS Foundation, which is the legal and fiscal umbrella for the project. NumFOCUS is a 501(c)3 non-profit foundation; if you are subject to US Tax law, your contributions will be tax-deductible.","title":"\u5173\u4e8e\u6211\u4eec"},{"location":"Community/","text":"\u793e\u533a \u00b6 Stay Connected Project Jupyter offers a number of communication channels available to individuals interested in using and contributing to the project. Jupyter is a community of data enthusiasts who believe in the power of open tools and standards for education, research, and data analytics. We welcome contributions and contributors of all kinds - whether they come as contributions to code, participation in the community, opening issues and pointing out bugs, or simply sharing your work with your colleagues and friends. Join the Jupyter community If you\u2019re interested in joining the Jupyter community (yay!) we recommend checking out the Jupyter Contributing guide. This contains information about the different projects in the Jupyter ecosystem, the tools and skills that are useful for each project, and other ways that you can become a part of the Jupyter community. JupyterDays, JupyterCon, and other events Many members of the Jupyter community host events to connect others that use Jupyter and other tools in the open data analytics stack. For example, JupyterCon is an annual conference that brings together many different groups represented in the Jupyter Community. Jupyter Days are smaller, locally-organized events for learning and connecting with one another. For example, here\u2019s a post announcing Jupyter Days in Atlanta. If you\u2019d like to organize a Jupyter Days event in your community, please reach out! Participate online Jupyter also has a number of online communication channels to help keep in touch. As you interact with others in the Jupyter ecosystem, remember that we have a strong commitment to being an open, inclusive, and positive community. Please read the Jupyter Code of Conduct for guidance on how to interact with others in a way that makes the community thrive. Below is a short list of gitter channels, email listservs, and github repositories where you can get involved. We always welcome participation in the Jupyter community. github icon Jupyter on GitHub A GitHub repository to ask general questions about Jupyter software. View mailing list icon Jupyter Discourse A Discourse Forum for a multitude of Jupyter topics View mailing list icon Jupyter General Mailing List A Google Group for general discussions of Jupyter's use. View education mailing list icon Jupyter in Education Mailing List A Google Group for general discussions of Jupyter's use in education. View mailing list icon Jupyter for Research Facilities A Google Group for discussions of Jupyter's use at scientific research facilities (such as X-ray light sources, observatories, supercomputers, etc.). View gitter icon Jupyter Gitter Chatroom A real-time chatroom, for general development related discussions. View stack overflow icon Jupyter on Stack Overflow A popular third party site for programmers to ask and answer questions about Jupyter. View documentation icon Jupyter Community Guides Information about community, communications and governance. View documentation icon Jupyter Contributor Guides Contribution guidelines View Home Install About Us Community Documentation NBViewer JupyterHub Widgets Blog Copyright \u00a9 2019 Project Jupyter \u2013 Last updated Wed, Mar 20, 2019 The Jupyter Trademark is registered with the U.S. Patent & Trademark Office.","title":"\u793e\u533a"},{"location":"Community/#_1","text":"Stay Connected Project Jupyter offers a number of communication channels available to individuals interested in using and contributing to the project. Jupyter is a community of data enthusiasts who believe in the power of open tools and standards for education, research, and data analytics. We welcome contributions and contributors of all kinds - whether they come as contributions to code, participation in the community, opening issues and pointing out bugs, or simply sharing your work with your colleagues and friends. Join the Jupyter community If you\u2019re interested in joining the Jupyter community (yay!) we recommend checking out the Jupyter Contributing guide. This contains information about the different projects in the Jupyter ecosystem, the tools and skills that are useful for each project, and other ways that you can become a part of the Jupyter community. JupyterDays, JupyterCon, and other events Many members of the Jupyter community host events to connect others that use Jupyter and other tools in the open data analytics stack. For example, JupyterCon is an annual conference that brings together many different groups represented in the Jupyter Community. Jupyter Days are smaller, locally-organized events for learning and connecting with one another. For example, here\u2019s a post announcing Jupyter Days in Atlanta. If you\u2019d like to organize a Jupyter Days event in your community, please reach out! Participate online Jupyter also has a number of online communication channels to help keep in touch. As you interact with others in the Jupyter ecosystem, remember that we have a strong commitment to being an open, inclusive, and positive community. Please read the Jupyter Code of Conduct for guidance on how to interact with others in a way that makes the community thrive. Below is a short list of gitter channels, email listservs, and github repositories where you can get involved. We always welcome participation in the Jupyter community. github icon Jupyter on GitHub A GitHub repository to ask general questions about Jupyter software. View mailing list icon Jupyter Discourse A Discourse Forum for a multitude of Jupyter topics View mailing list icon Jupyter General Mailing List A Google Group for general discussions of Jupyter's use. View education mailing list icon Jupyter in Education Mailing List A Google Group for general discussions of Jupyter's use in education. View mailing list icon Jupyter for Research Facilities A Google Group for discussions of Jupyter's use at scientific research facilities (such as X-ray light sources, observatories, supercomputers, etc.). View gitter icon Jupyter Gitter Chatroom A real-time chatroom, for general development related discussions. View stack overflow icon Jupyter on Stack Overflow A popular third party site for programmers to ask and answer questions about Jupyter. View documentation icon Jupyter Community Guides Information about community, communications and governance. View documentation icon Jupyter Contributor Guides Contribution guidelines View Home Install About Us Community Documentation NBViewer JupyterHub Widgets Blog Copyright \u00a9 2019 Project Jupyter \u2013 Last updated Wed, Mar 20, 2019 The Jupyter Trademark is registered with the U.S. Patent & Trademark Office.","title":"\u793e\u533a"},{"location":"1.Quickstart/Try-Jupyter/","text":"\u8bd5\u7528 \u00b6 \u8bd5\u8bd5\u4f60\u7684\u6d4f\u89c8\u5668\u3002\u65e0\u9700\u5b89\u88c5\u3002 \u00b6 \u8f6c\u5230 https://try.jupyter.org \u3002\u65e0\u9700\u5b89\u88c5\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f \u00b6 \u7f16\u8f91\u672c\u7f16\u8f91\u5668 \u00b6 \u4f60\u51c6\u5907\u5b89\u88c5 Jupyter \u4e86\u5417\uff1f \u00b6 \u5982\u679c\u60a8\u5c1d\u8bd5\u8fc7 Jupyter \u5e76\u559c\u6b22\u5b83\uff0c\u8bf7\u4f7f\u7528\u6211\u4eec\u7684\u8be6\u7ec6\u5b89\u88c5\u6307\u5357\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter\u3002","title":"\u8bd5\u7528"},{"location":"1.Quickstart/Try-Jupyter/#_1","text":"","title":"\u8bd5\u7528"},{"location":"1.Quickstart/Try-Jupyter/#_2","text":"\u8f6c\u5230 https://try.jupyter.org \u3002\u65e0\u9700\u5b89\u88c5\u3002","title":"\u8bd5\u8bd5\u4f60\u7684\u6d4f\u89c8\u5668\u3002\u65e0\u9700\u5b89\u88c5\u3002"},{"location":"1.Quickstart/Try-Jupyter/#_3","text":"","title":"\u7b14\u8bb0\u672c\u4eea\u8868\u677f"},{"location":"1.Quickstart/Try-Jupyter/#_4","text":"","title":"\u7f16\u8f91\u672c\u7f16\u8f91\u5668"},{"location":"1.Quickstart/Try-Jupyter/#jupyter","text":"\u5982\u679c\u60a8\u5c1d\u8bd5\u8fc7 Jupyter \u5e76\u559c\u6b22\u5b83\uff0c\u8bf7\u4f7f\u7528\u6211\u4eec\u7684\u8be6\u7ec6\u5b89\u88c5\u6307\u5357\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter\u3002","title":"\u4f60\u51c6\u5907\u5b89\u88c5 Jupyter \u4e86\u5417\uff1f"},{"location":"1.Quickstart/migrating/","text":"\u4ece IPython \u8fc1\u79fb \u00b6 \u62bd\u8c61 \u00b6 Big Split \u5728 Jupyter \u4fdd\u62a4\u4f1e\u4e0b\u79fb\u52a8\u4e86 IPython \u7684\u5404\u79cd\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u7ec4\u4ef6\u3002\u5c55\u671b\u672a\u6765\uff0cJupyter \u5c06\u5305\u542b\u63d0\u4f9b\u591a\u79cd\u8bed\u8a00\u7684\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u9879\u76ee\u3002 IPython \u5c06\u7ee7\u7eed\u5173\u6ce8 Python \u53ca\u5176\u4e0e Jupyter \u7684\u4f7f\u7528\u3002 \u672c\u6587\u6863\u63cf\u8ff0\u4e86\u4ece IPython \u7248\u672c 3 \u8fc1\u79fb\u5230 Jupyter \u65f6\u9700\u8981\u4fee\u6539\u4ee3\u7801\u6216\u914d\u7f6e\u7684\u5185\u5bb9\u3002 \u4e86\u89e3\u8fc1\u79fb\u8fc7\u7a0b \u00b6 \u81ea\u52a8\u8fc1\u79fb\u6587\u4ef6 \u00b6 \u7b2c\u4e00\u6b21\u8fd0\u884c\u4efb\u4f55 jupyter \u547d\u4ee4\u65f6\uff0c\u5b83\u5c06\u6267\u884c\u6587\u4ef6\u7684\u81ea\u52a8\u8fc1\u79fb\u3002\u81ea\u52a8\u8fc1\u79fb\u8fc7\u7a0b\u590d\u5236\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6587\u4ef6\uff0c\u5c06\u539f\u4ef6\u4fdd\u7559\u5728\u539f\u4f4d\uff0c\u526f\u672c\u4fdd\u5b58\u5728 Jupyter \u6587\u4ef6\u4f4d\u7f6e\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 jupyter migrate \u91cd\u65b0\u8fd0\u884c\u8fc1\u79fb\u3002\u60a8\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u5c06\u81ea\u52a8\u8fc1\u79fb\uff0c\u5e76\u4e14\u65e0\u9700\u8fdb\u4e00\u6b65\u7f16\u8f91\u5373\u53ef\u4e0e Jupyter \u914d\u5408\u4f7f\u7528\u3002\u5f53\u60a8\u5c06\u6765\u66f4\u65b0\u6216\u4fee\u6539\u914d\u7f6e\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u6587\u4ef6\u4f4d\u7f6e\u53ef\u80fd\u5df2\u66f4\u6539\u3002 \u6211\u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u4e86\u54ea\u91cc\uff1f \u00b6 Also known as: \u201cWhy isn\u2019t my configuration having any effect anymore?\u201d Jupyter splitting out from IPython means that the locations of some files have moved, and Jupyter projects have not inherited everything from how IPython did it. When you start your first Jupyter application, the relevant configuration files are automatically copied to their new Jupyter locations. The original configuration files in the IPython locations have no effect on Jupyter\u2019s execution. If you accidentally edit your original IPython config file, you may not see the desired effect with Jupyter now. You should check that you are editing Jupyter\u2019s configuration file, and you should see the expected effect after restarting the Jupyter server. \u67e5\u627e\u91cd\u8981\u6587\u4ef6\u7684\u4f4d\u7f6e \u00b6 This section provides quick reference for common locations of IPython 3 files and the migrated Jupyter files. \u914d\u7f6e\u6587\u4ef6 \u00b6 Configuration files customize Jupyter to the user\u2019s preferences. The migrated files should all be automatically copied to their new Jupyter locations. Here are the location changes: IPython location Jupyter location ~/.ipython/profile_default/static/custom \u2192 ~/.jupyter/custom ~/.ipython/profile_default/ipython_notebook_config.py \u2192 ~/.jupyter/jupyter_notebook_config.py ~/.ipython/profile_default/ipython_nbconvert_config.py \u2192 ~/.jupyter/jupyter_nbconvert_config.py ~/.ipython/profile_default/ipython_qtconsole_config.py \u2192 ~/.jupyter/jupyter_qtconsole_config.py ~/.ipython/profile_default/ipython_console_config.py \u2192 ~/.jupyter/jupyter_console_config.py To choose a directory location other than the default ~/.jupyter, set the JUPYTER_CONFIG_DIR environment variable. You may need to run jupyter migrate after setting the environment variable for files to be copied to the desired directory. \u6570\u636e\u6587\u4ef6\uff1akernelspecs \u548c notebook \u6269\u5c55 \u00b6 Data files include files, other than configuration files, which are user installed. Examples include kernelspecs and notebook extensions. Like the configuration files, data files are also automatically migrated to their new Jupyter locations. In IPython 3, data files lived in ~/.ipython. In Jupyter, data files use platform-appropriate locations: OS X: ~/Library/Jupyter Windows: the location specified in %APPDATA% environment variable Elsewhere, \\$XDG_DATA_HOME is respected, with the default of ~/.local/share/jupyter In all cases, the JUPYTER_DATA_DIR environment variable can be used to set a location explicitly. Data files installed system-wide (e.g. in /usr/local/share/jupyter) have not changed. Per-user installation of data files has changed location from .ipython to the platform-appropriate Jupyter location. \u7531\u4e8e Jupyter \u6ca1\u6709\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u8be5\u5982\u4f55\u81ea\u5b9a\u4e49\u5b83\uff1f \u00b6 While IPython has the concept of profiles, Jupyter does not have profiles. In IPython, profiles are collections of configuration and runtime files. Inside the IPython directory (~/.ipython), there are directories with names like profile_default or profile_demo. In each of these are configuration files (ipython_config.py, ipython_notebook_config.py) and runtime files (history.sqlite, security/kernel-*.json). Profiles could be used to switch between configurations of IPython. Previously, people could use commands like ipython notebook --profile demo to set the profile for both the notebook server and the IPython kernel. This is no longer possible in one go with Jupyter, just like it wasn\u2019t possible in IPython 3 for any other kernels. \u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u76ee\u5f55 \u00b6 If you want to change the notebook configuration, you can set the JUPYTER_CONFIG_DIR: JUPYTER_CONFIG_DIR=./jupyter_config jupyter notebook \u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u6587\u4ef6 \u00b6 If you just want to change the config file, you can do: jupyter notebook --config=/path/to/myconfig.py \u4f7f\u7528\u81ea\u5b9a\u4e49 kernelspecs \u66f4\u6539 IPython \u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 If you do want to change the IPython kernel\u2019s profile, you can\u2019t do this at the server command-line anymore. Kernel arguments must be changed by modifying the kernelspec. You can do this without relaunching the server. Kernelspec changes take effect every time you start a new kernel. However, there isn\u2019t a great way to modify the kernelspecs. One approach uses jupyter kernelspec list to find the kernel.json file and then modifies it, e.g. kernels/python3/kernel.json, by hand. Alternatively, a2km is an experimental project that tries to make these things easier. For example, add the --profile option to a custom kernelspec under kernels/mycustom/kernel.json (see the Jupyter kernelspec directions here): { \"argv\" : [ \"python\" , \"-m\" , \"ipykernel\" , \"--profile=my-ipython-profile\" , \"-f\" , \"{connection_file}\" ], \"display_name\" : \"Custom Profile Python\" , \"language\" : \"python\" } You can then run Jupyter with the --kernel=mycustom command-line option and IPython will find the appropriate profile. \u4e86\u89e3\u5b89\u88c5\u66f4\u6539 \u00b6 See the Installing Jupyter Notebook page for more information about installing Jupyter. Jupyter automatically migrates some things, like Notebook extensions and kernels. \u7b14\u8bb0\u672c\u6269\u5c55 \u00b6 Any IPython notebook extensions should be automatically migrated as part of the data files migration. Notebook extensions were installed with: ipython install-nbextension [ --user ] EXTENSION Now, extensions are installed with: jupyter nbextension install [ --user ] EXTENSION The notebook extensions will be installed in a system-wide location (e.g. /usr/local/share/jupyter/nbextensions). If doing a --user install, the notebook extensions will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go. \u5185\u6838 \u00b6 Kernels are installed in much the same way as notebook extensions. They will also be automatically migrated. Kernel specs used to be installed with: ipython kernelspec install [ --user ] KERNEL They are now installed with: jupyter kernelspec install [ --user ] KERNEL By default, kernel specs will go in a system-wide location (e.g. /usr/local/share/jupyter/kernels). If doing a --user install, the kernel specs will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go. \u4e86\u89e3\u5165\u53e3\u7684\u53d8\u5316 \u00b6 IPython 4.0 includes shims to manage dependencies; so, all imports that work on IPython 3 should continue to work on IPython 4. If you find any differences, please let us know. Some changes include: IPython 3 Jupyter and IPython 4.0 IPython.html \u2192 notebook IPython.html.widgets \u2192 ipywidgets IPython.kernel \u2192 jupyter_client, ipykernel IPython.parallel \u2192 ipyparallel IPython.qt.console \u2192 qtconsole IPython.utils.traitlets \u2192 traitlets IPython.config \u2192 traitlets.config Important The IPython.kernel Split IPython.kernel became two packages: jupyter_client for the Jupyter client-side APIs. ipykernel for Jupyter\u2019s IPython kernel","title":"\u4ece IPython \u8fc1\u79fb"},{"location":"1.Quickstart/migrating/#ipython","text":"","title":"\u4ece IPython \u8fc1\u79fb"},{"location":"1.Quickstart/migrating/#_1","text":"Big Split \u5728 Jupyter \u4fdd\u62a4\u4f1e\u4e0b\u79fb\u52a8\u4e86 IPython \u7684\u5404\u79cd\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u7ec4\u4ef6\u3002\u5c55\u671b\u672a\u6765\uff0cJupyter \u5c06\u5305\u542b\u63d0\u4f9b\u591a\u79cd\u8bed\u8a00\u7684\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u9879\u76ee\u3002 IPython \u5c06\u7ee7\u7eed\u5173\u6ce8 Python \u53ca\u5176\u4e0e Jupyter \u7684\u4f7f\u7528\u3002 \u672c\u6587\u6863\u63cf\u8ff0\u4e86\u4ece IPython \u7248\u672c 3 \u8fc1\u79fb\u5230 Jupyter \u65f6\u9700\u8981\u4fee\u6539\u4ee3\u7801\u6216\u914d\u7f6e\u7684\u5185\u5bb9\u3002","title":"\u62bd\u8c61"},{"location":"1.Quickstart/migrating/#_2","text":"","title":"\u4e86\u89e3\u8fc1\u79fb\u8fc7\u7a0b"},{"location":"1.Quickstart/migrating/#_3","text":"\u7b2c\u4e00\u6b21\u8fd0\u884c\u4efb\u4f55 jupyter \u547d\u4ee4\u65f6\uff0c\u5b83\u5c06\u6267\u884c\u6587\u4ef6\u7684\u81ea\u52a8\u8fc1\u79fb\u3002\u81ea\u52a8\u8fc1\u79fb\u8fc7\u7a0b\u590d\u5236\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u79fb\u52a8\u6587\u4ef6\uff0c\u5c06\u539f\u4ef6\u4fdd\u7559\u5728\u539f\u4f4d\uff0c\u526f\u672c\u4fdd\u5b58\u5728 Jupyter \u6587\u4ef6\u4f4d\u7f6e\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 jupyter migrate \u91cd\u65b0\u8fd0\u884c\u8fc1\u79fb\u3002\u60a8\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\u5c06\u81ea\u52a8\u8fc1\u79fb\uff0c\u5e76\u4e14\u65e0\u9700\u8fdb\u4e00\u6b65\u7f16\u8f91\u5373\u53ef\u4e0e Jupyter \u914d\u5408\u4f7f\u7528\u3002\u5f53\u60a8\u5c06\u6765\u66f4\u65b0\u6216\u4fee\u6539\u914d\u7f6e\u65f6\uff0c\u8bf7\u8bb0\u4f4f\u6587\u4ef6\u4f4d\u7f6e\u53ef\u80fd\u5df2\u66f4\u6539\u3002","title":"\u81ea\u52a8\u8fc1\u79fb\u6587\u4ef6"},{"location":"1.Quickstart/migrating/#_4","text":"Also known as: \u201cWhy isn\u2019t my configuration having any effect anymore?\u201d Jupyter splitting out from IPython means that the locations of some files have moved, and Jupyter projects have not inherited everything from how IPython did it. When you start your first Jupyter application, the relevant configuration files are automatically copied to their new Jupyter locations. The original configuration files in the IPython locations have no effect on Jupyter\u2019s execution. If you accidentally edit your original IPython config file, you may not see the desired effect with Jupyter now. You should check that you are editing Jupyter\u2019s configuration file, and you should see the expected effect after restarting the Jupyter server.","title":"\u6211\u7684\u914d\u7f6e\u6587\u4ef6\u53bb\u4e86\u54ea\u91cc\uff1f"},{"location":"1.Quickstart/migrating/#_5","text":"This section provides quick reference for common locations of IPython 3 files and the migrated Jupyter files.","title":"\u67e5\u627e\u91cd\u8981\u6587\u4ef6\u7684\u4f4d\u7f6e"},{"location":"1.Quickstart/migrating/#_6","text":"Configuration files customize Jupyter to the user\u2019s preferences. The migrated files should all be automatically copied to their new Jupyter locations. Here are the location changes: IPython location Jupyter location ~/.ipython/profile_default/static/custom \u2192 ~/.jupyter/custom ~/.ipython/profile_default/ipython_notebook_config.py \u2192 ~/.jupyter/jupyter_notebook_config.py ~/.ipython/profile_default/ipython_nbconvert_config.py \u2192 ~/.jupyter/jupyter_nbconvert_config.py ~/.ipython/profile_default/ipython_qtconsole_config.py \u2192 ~/.jupyter/jupyter_qtconsole_config.py ~/.ipython/profile_default/ipython_console_config.py \u2192 ~/.jupyter/jupyter_console_config.py To choose a directory location other than the default ~/.jupyter, set the JUPYTER_CONFIG_DIR environment variable. You may need to run jupyter migrate after setting the environment variable for files to be copied to the desired directory.","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"1.Quickstart/migrating/#kernelspecs-notebook","text":"Data files include files, other than configuration files, which are user installed. Examples include kernelspecs and notebook extensions. Like the configuration files, data files are also automatically migrated to their new Jupyter locations. In IPython 3, data files lived in ~/.ipython. In Jupyter, data files use platform-appropriate locations: OS X: ~/Library/Jupyter Windows: the location specified in %APPDATA% environment variable Elsewhere, \\$XDG_DATA_HOME is respected, with the default of ~/.local/share/jupyter In all cases, the JUPYTER_DATA_DIR environment variable can be used to set a location explicitly. Data files installed system-wide (e.g. in /usr/local/share/jupyter) have not changed. Per-user installation of data files has changed location from .ipython to the platform-appropriate Jupyter location.","title":"\u6570\u636e\u6587\u4ef6\uff1akernelspecs \u548c notebook \u6269\u5c55"},{"location":"1.Quickstart/migrating/#jupyter","text":"While IPython has the concept of profiles, Jupyter does not have profiles. In IPython, profiles are collections of configuration and runtime files. Inside the IPython directory (~/.ipython), there are directories with names like profile_default or profile_demo. In each of these are configuration files (ipython_config.py, ipython_notebook_config.py) and runtime files (history.sqlite, security/kernel-*.json). Profiles could be used to switch between configurations of IPython. Previously, people could use commands like ipython notebook --profile demo to set the profile for both the notebook server and the IPython kernel. This is no longer possible in one go with Jupyter, just like it wasn\u2019t possible in IPython 3 for any other kernels.","title":"\u7531\u4e8e Jupyter \u6ca1\u6709\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u8be5\u5982\u4f55\u81ea\u5b9a\u4e49\u5b83\uff1f"},{"location":"1.Quickstart/migrating/#jupyter_1","text":"If you want to change the notebook configuration, you can set the JUPYTER_CONFIG_DIR: JUPYTER_CONFIG_DIR=./jupyter_config jupyter notebook","title":"\u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u76ee\u5f55"},{"location":"1.Quickstart/migrating/#jupyter_2","text":"If you just want to change the config file, you can do: jupyter notebook --config=/path/to/myconfig.py","title":"\u66f4\u6539 Jupyter \u7b14\u8bb0\u672c\u914d\u7f6e\u6587\u4ef6"},{"location":"1.Quickstart/migrating/#kernelspecs-ipython","text":"If you do want to change the IPython kernel\u2019s profile, you can\u2019t do this at the server command-line anymore. Kernel arguments must be changed by modifying the kernelspec. You can do this without relaunching the server. Kernelspec changes take effect every time you start a new kernel. However, there isn\u2019t a great way to modify the kernelspecs. One approach uses jupyter kernelspec list to find the kernel.json file and then modifies it, e.g. kernels/python3/kernel.json, by hand. Alternatively, a2km is an experimental project that tries to make these things easier. For example, add the --profile option to a custom kernelspec under kernels/mycustom/kernel.json (see the Jupyter kernelspec directions here): { \"argv\" : [ \"python\" , \"-m\" , \"ipykernel\" , \"--profile=my-ipython-profile\" , \"-f\" , \"{connection_file}\" ], \"display_name\" : \"Custom Profile Python\" , \"language\" : \"python\" } You can then run Jupyter with the --kernel=mycustom command-line option and IPython will find the appropriate profile.","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49 kernelspecs \u66f4\u6539 IPython \u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"1.Quickstart/migrating/#_7","text":"See the Installing Jupyter Notebook page for more information about installing Jupyter. Jupyter automatically migrates some things, like Notebook extensions and kernels.","title":"\u4e86\u89e3\u5b89\u88c5\u66f4\u6539"},{"location":"1.Quickstart/migrating/#_8","text":"Any IPython notebook extensions should be automatically migrated as part of the data files migration. Notebook extensions were installed with: ipython install-nbextension [ --user ] EXTENSION Now, extensions are installed with: jupyter nbextension install [ --user ] EXTENSION The notebook extensions will be installed in a system-wide location (e.g. /usr/local/share/jupyter/nbextensions). If doing a --user install, the notebook extensions will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go.","title":"\u7b14\u8bb0\u672c\u6269\u5c55"},{"location":"1.Quickstart/migrating/#_9","text":"Kernels are installed in much the same way as notebook extensions. They will also be automatically migrated. Kernel specs used to be installed with: ipython kernelspec install [ --user ] KERNEL They are now installed with: jupyter kernelspec install [ --user ] KERNEL By default, kernel specs will go in a system-wide location (e.g. /usr/local/share/jupyter/kernels). If doing a --user install, the kernel specs will go in the JUPYTER_DATA_DIR location. Installation SHOULD NOT be done manually by guessing where the files should go.","title":"\u5185\u6838"},{"location":"1.Quickstart/migrating/#_10","text":"IPython 4.0 includes shims to manage dependencies; so, all imports that work on IPython 3 should continue to work on IPython 4. If you find any differences, please let us know. Some changes include: IPython 3 Jupyter and IPython 4.0 IPython.html \u2192 notebook IPython.html.widgets \u2192 ipywidgets IPython.kernel \u2192 jupyter_client, ipykernel IPython.parallel \u2192 ipyparallel IPython.qt.console \u2192 qtconsole IPython.utils.traitlets \u2192 traitlets IPython.config \u2192 traitlets.config Important The IPython.kernel Split IPython.kernel became two packages: jupyter_client for the Jupyter client-side APIs. ipykernel for Jupyter\u2019s IPython kernel","title":"\u4e86\u89e3\u5165\u53e3\u7684\u53d8\u5316"},{"location":"1.Quickstart/running/","text":"\u8fd0\u884c \u00b6 \u57fa\u672c\u6b65\u9aa4 \u00b6 \u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u60a8\u5e94\u8be5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u7b14\u8bb0\u672c\u6253\u5f00. \u542f\u52a8\u670d\u52a1 \u00b6 \u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter Notebook \u540e\uff0c\u5373\u53ef\u8fd0\u884c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u884c(\u4f7f\u7528 Mac/Linux \u4e0a\u7684\u7ec8\u7aef\uff0cWindows \u4e0a\u7684\u547d\u4ee4\u63d0\u793a\u7b26)\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u8fd9\u5c06\u6253\u5370\u7ec8\u7aef\u4e2d\u6709\u5173\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5305\u62ec Web \u5e94\u7528\u7a0b\u5e8f\u7684 URL(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a http://localhost:8888): $ jupyter notebook [ I 08 :58:24.417 NotebookApp ] \u4ece\u672c\u5730\u76ee\u5f55\u63d0\u4f9b\u7b14\u8bb0\u672c: /Users/catherine [ I 08 :58:24.417 NotebookApp ] 0\u4e2a\u6d3b\u52a8\u5185\u6838 [ I 08 :58:24.417 NotebookApp ] Jupyter\u7b14\u8bb0\u672c\u6b63\u5728\u8fd0\u884c: http://localhost:8888/ [ I 08 :58:24.417 NotebookApp ] \u4f7f\u7528Control-C\u505c\u6b62\u6b64\u670d\u52a1\u5668\u5e76\u5173\u95ed\u6240\u6709\u5185\u6838\uff08\u4e24\u6b21\u8df3\u8fc7\u786e\u8ba4\uff09. \u7136\u540e\uff0c\u5b83\u5c06\u6253\u5f00\u60a8\u7684\u9ed8\u8ba4 Web \u6d4f\u89c8\u5668\u5230\u6b64 URL\u3002 \u5f53\u7b14\u8bb0\u672c\u7535\u8111\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u65f6\uff0c\u60a8\u5c06\u770b\u5230 Notebook Dashboard\uff0c\u5b83\u5c06\u663e\u793a\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u542f\u52a8\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u5217\u8868\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5728\u5305\u542b\u7b14\u8bb0\u672c\u7684\u6700\u9ad8\u7ea7\u76ee\u5f55\u4e2d\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u901a\u5e38\u8fd9\u5c06\u662f\u60a8\u7684\u4e3b\u76ee\u5f55\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f \u4ecb\u7ecd\u670d\u547d\u4ee4\u9009\u9879 \u00b6 \u5982\u4f55\u6253\u5f00\u7279\u5b9a\u7684\u7b14\u8bb0\u672c\uff1f \u00b6 \u4ee5\u4e0b\u4ee3\u7801\u5e94\u5728\u5f53\u524d\u8fd0\u884c\u7684\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4e2d\u6253\u5f00\u7ed9\u5b9a\u7684\u7b14\u8bb0\u672c\uff0c\u5fc5\u8981\u65f6\u542f\u52a8\u4e00\u4e2a\u3002 jupyter notebook notebook.ipynb \u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49 IP \u6216\u7aef\u53e3\u542f\u52a8 Notebook\uff1f \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5728\u7aef\u53e3 8888 \u4e0a\u542f\u52a8\u3002\u5982\u679c\u7aef\u53e3 8888 \u4e0d\u53ef\u7528\u6216\u6b63\u5728\u4f7f\u7528\uff0c\u5219\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u641c\u7d22\u4e0b\u4e00\u4e2a\u53ef\u7528\u7aef\u53e3\u3002 \u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7aef\u53e3\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u670d\u52a1\u5668\u7684\u7aef\u53e3\u8bbe\u7f6e\u4e3a 9999: jupyter notebook --port 9999 \u5982\u4f55\u5728\u4e0d\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\u542f\u52a8 Notebook \u670d\u52a1\u5668\uff1f \u00b6 \u65e0\u9700\u6253\u5f00 Web \u6d4f\u89c8\u5668\u5373\u53ef\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668 jupyter notebook --no-browser \u5982\u4f55\u83b7\u5f97\u6709\u5173 Notebook \u670d\u52a1\u5668\u9009\u9879\u7684\u5e2e\u52a9\uff1f \u00b6 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4f7f\u7528 --help \u6807\u5fd7\u4e3a\u5176\u4ed6\u547d\u4ee4\u884c\u53c2\u6570\u63d0\u4f9b\u5e2e\u52a9\u6d88\u606f: jupyter notebook --help \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528 \u6709\u5173\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u548c\u7528\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u8fd0\u884c"},{"location":"1.Quickstart/running/#_1","text":"","title":"\u8fd0\u884c"},{"location":"1.Quickstart/running/#_2","text":"\u4ece\u547d\u4ee4\u884c\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u60a8\u5e94\u8be5\u5728\u6d4f\u89c8\u5668\u4e2d\u770b\u5230\u7b14\u8bb0\u672c\u6253\u5f00.","title":"\u57fa\u672c\u6b65\u9aa4"},{"location":"1.Quickstart/running/#_3","text":"\u5728\u8ba1\u7b97\u673a\u4e0a\u5b89\u88c5 Jupyter Notebook \u540e\uff0c\u5373\u53ef\u8fd0\u884c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u547d\u4ee4\u884c(\u4f7f\u7528 Mac/Linux \u4e0a\u7684\u7ec8\u7aef\uff0cWindows \u4e0a\u7684\u547d\u4ee4\u63d0\u793a\u7b26)\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668: jupyter notebook \u8fd9\u5c06\u6253\u5370\u7ec8\u7aef\u4e2d\u6709\u5173\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u5305\u62ec Web \u5e94\u7528\u7a0b\u5e8f\u7684 URL(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a http://localhost:8888): $ jupyter notebook [ I 08 :58:24.417 NotebookApp ] \u4ece\u672c\u5730\u76ee\u5f55\u63d0\u4f9b\u7b14\u8bb0\u672c: /Users/catherine [ I 08 :58:24.417 NotebookApp ] 0\u4e2a\u6d3b\u52a8\u5185\u6838 [ I 08 :58:24.417 NotebookApp ] Jupyter\u7b14\u8bb0\u672c\u6b63\u5728\u8fd0\u884c: http://localhost:8888/ [ I 08 :58:24.417 NotebookApp ] \u4f7f\u7528Control-C\u505c\u6b62\u6b64\u670d\u52a1\u5668\u5e76\u5173\u95ed\u6240\u6709\u5185\u6838\uff08\u4e24\u6b21\u8df3\u8fc7\u786e\u8ba4\uff09. \u7136\u540e\uff0c\u5b83\u5c06\u6253\u5f00\u60a8\u7684\u9ed8\u8ba4 Web \u6d4f\u89c8\u5668\u5230\u6b64 URL\u3002 \u5f53\u7b14\u8bb0\u672c\u7535\u8111\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u65f6\uff0c\u60a8\u5c06\u770b\u5230 Notebook Dashboard\uff0c\u5b83\u5c06\u663e\u793a\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u542f\u52a8\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u5217\u8868\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5728\u5305\u542b\u7b14\u8bb0\u672c\u7684\u6700\u9ad8\u7ea7\u76ee\u5f55\u4e2d\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u3002 \u901a\u5e38\u8fd9\u5c06\u662f\u60a8\u7684\u4e3b\u76ee\u5f55\u3002 \u7b14\u8bb0\u672c\u4eea\u8868\u677f","title":"\u542f\u52a8\u670d\u52a1"},{"location":"1.Quickstart/running/#_4","text":"","title":"\u4ecb\u7ecd\u670d\u547d\u4ee4\u9009\u9879"},{"location":"1.Quickstart/running/#_5","text":"\u4ee5\u4e0b\u4ee3\u7801\u5e94\u5728\u5f53\u524d\u8fd0\u884c\u7684\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4e2d\u6253\u5f00\u7ed9\u5b9a\u7684\u7b14\u8bb0\u672c\uff0c\u5fc5\u8981\u65f6\u542f\u52a8\u4e00\u4e2a\u3002 jupyter notebook notebook.ipynb","title":"\u5982\u4f55\u6253\u5f00\u7279\u5b9a\u7684\u7b14\u8bb0\u672c\uff1f"},{"location":"1.Quickstart/running/#ip-notebook","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5728\u7aef\u53e3 8888 \u4e0a\u542f\u52a8\u3002\u5982\u679c\u7aef\u53e3 8888 \u4e0d\u53ef\u7528\u6216\u6b63\u5728\u4f7f\u7528\uff0c\u5219\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u641c\u7d22\u4e0b\u4e00\u4e2a\u53ef\u7528\u7aef\u53e3\u3002 \u60a8\u4e5f\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u7aef\u53e3\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u670d\u52a1\u5668\u7684\u7aef\u53e3\u8bbe\u7f6e\u4e3a 9999: jupyter notebook --port 9999","title":"\u5982\u4f55\u4f7f\u7528\u81ea\u5b9a\u4e49 IP \u6216\u7aef\u53e3\u542f\u52a8 Notebook\uff1f"},{"location":"1.Quickstart/running/#notebook","text":"\u65e0\u9700\u6253\u5f00 Web \u6d4f\u89c8\u5668\u5373\u53ef\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668 jupyter notebook --no-browser","title":"\u5982\u4f55\u5728\u4e0d\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\u542f\u52a8 Notebook \u670d\u52a1\u5668\uff1f"},{"location":"1.Quickstart/running/#notebook_1","text":"\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u4f7f\u7528 --help \u6807\u5fd7\u4e3a\u5176\u4ed6\u547d\u4ee4\u884c\u53c2\u6570\u63d0\u4f9b\u5e2e\u52a9\u6d88\u606f: jupyter notebook --help \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u5b89\u88c5\uff0c\u914d\u7f6e\u548c\u4f7f\u7528 \u6709\u5173\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u914d\u7f6e\u548c\u7528\u6cd5\u7684\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u5982\u4f55\u83b7\u5f97\u6709\u5173 Notebook \u670d\u52a1\u5668\u9009\u9879\u7684\u5e2e\u52a9\uff1f"},{"location":"2.Use/1.install/","text":"\u5b89\u88c5 \u00b6 \u6b64\u4fe1\u606f\u8bf4\u660e\u5982\u4f55\u5b89\u88c5 Jupyter Notebook \u548c IPython \u5185\u6838\u3002 \u5148\u51b3\u6761\u4ef6\uff1aPython \u00b6 \u867d\u7136 Jupyter \u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u8fd0\u884c\u4ee3\u7801\uff0c\u4f46 Python \u662f\u5b89\u88c5 Jupyter Notebook \u7684\u5fc5\u8981\u6761\u4ef6\uff08Python 3.3 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216 Python 2.7\uff09\u3002 \u6211\u4eec\u5efa\u8bae\u4f7f\u7528 Anaconda \u53d1\u884c\u7248\u6765\u5b89\u88c5 Python \u548c Jupyter\u3002 \u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\u5b83\u7684\u5b89\u88c5\u3002 \u4f7f\u7528 Anaconda \u548c conda \u5b89\u88c5 Jupyter \u00b6 \u5bf9\u4e8e\u65b0\u7528\u6237\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5b89\u88c5 Anaconda\u3002 Anaconda \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5 Python\uff0cJupyter \u7b14\u8bb0\u672c\u4ee5\u53ca\u5176\u4ed6\u5e38\u7528\u7684\u79d1\u5b66\u8ba1\u7b97\u548c\u6570\u636e\u79d1\u5b66\u8f6f\u4ef6\u5305\u3002 \u4f7f\u7528\u4ee5\u4e0b\u5b89\u88c5\u6b65\u9aa4: \u4e0b\u8f7d Anaconda\u3002\u6211\u4eec\u5efa\u8bae\u4e0b\u8f7d Anaconda \u6700\u65b0\u7684 Python 3 \u7248\u672c\uff08\u76ee\u524d\u662f Python 3.5\uff09\u3002 \u6309\u7167\u4e0b\u8f7d\u9875\u9762\u4e0a\u7684\u8bf4\u660e\u5b89\u88c5\u60a8\u4e0b\u8f7d\u7684 Anaconda \u7248\u672c\u3002 \u606d\u559c\uff0c\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 Jupyter Notebook\u3002 \u8981\u8fd0\u884c\u7b14\u8bb0\u672c: jupyter notebook \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u3002 \u6709\u7ecf\u9a8c\u7684 Python \u7528\u6237\u7684\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528 pip \u5b89\u88c5 Jupyter \u00b6 \u91cd\u8981 Jupyter \u5b89\u88c5\u9700\u8981 Python 3.3 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216 Python 2.7\u3002 IPython 1.x\uff0c\u5305\u62ec\u540e\u6765\u6210\u4e3a Jupyter \u7684\u90e8\u5206\uff0c\u662f\u652f\u6301 Python 3.2 \u548c 2.6 \u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u3002 \u4f5c\u4e3a\u73b0\u6709\u7684 Python \u7528\u6237\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5668 pip \u800c\u4e0d\u662f Anaconda \u6765\u5b89\u88c5 Jupyter\u3002 \u9996\u5148\uff0c\u786e\u4fdd\u4f60\u6709\u6700\u65b0\u7684\u70b9\u5b50;\u65e7\u7248\u672c\u53ef\u80fd\u5728\u67d0\u4e9b\u4f9d\u8d56\u9879\u4e0a\u9047\u5230\u95ee\u9898: pip3 install --upgrade pip \u7136\u540e\u4f7f\u7528\u5b89\u88c5 Jupyter Notebook: pip3 install jupyter (\u5982\u679c\u4f7f\u7528\u65e7\u7248 Python 2\uff0c\u8bf7\u4f7f\u7528 pip\u3002) \u606d\u559c\u3002\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 Jupyter Notebook\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u3002","title":"\u5b89\u88c5"},{"location":"2.Use/1.install/#_1","text":"\u6b64\u4fe1\u606f\u8bf4\u660e\u5982\u4f55\u5b89\u88c5 Jupyter Notebook \u548c IPython \u5185\u6838\u3002","title":"\u5b89\u88c5"},{"location":"2.Use/1.install/#python","text":"\u867d\u7136 Jupyter \u5728\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u8fd0\u884c\u4ee3\u7801\uff0c\u4f46 Python \u662f\u5b89\u88c5 Jupyter Notebook \u7684\u5fc5\u8981\u6761\u4ef6\uff08Python 3.3 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216 Python 2.7\uff09\u3002 \u6211\u4eec\u5efa\u8bae\u4f7f\u7528 Anaconda \u53d1\u884c\u7248\u6765\u5b89\u88c5 Python \u548c Jupyter\u3002 \u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\u5b83\u7684\u5b89\u88c5\u3002","title":"\u5148\u51b3\u6761\u4ef6\uff1aPython"},{"location":"2.Use/1.install/#anaconda-conda-jupyter","text":"\u5bf9\u4e8e\u65b0\u7528\u6237\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u5b89\u88c5 Anaconda\u3002 Anaconda \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5 Python\uff0cJupyter \u7b14\u8bb0\u672c\u4ee5\u53ca\u5176\u4ed6\u5e38\u7528\u7684\u79d1\u5b66\u8ba1\u7b97\u548c\u6570\u636e\u79d1\u5b66\u8f6f\u4ef6\u5305\u3002 \u4f7f\u7528\u4ee5\u4e0b\u5b89\u88c5\u6b65\u9aa4: \u4e0b\u8f7d Anaconda\u3002\u6211\u4eec\u5efa\u8bae\u4e0b\u8f7d Anaconda \u6700\u65b0\u7684 Python 3 \u7248\u672c\uff08\u76ee\u524d\u662f Python 3.5\uff09\u3002 \u6309\u7167\u4e0b\u8f7d\u9875\u9762\u4e0a\u7684\u8bf4\u660e\u5b89\u88c5\u60a8\u4e0b\u8f7d\u7684 Anaconda \u7248\u672c\u3002 \u606d\u559c\uff0c\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 Jupyter Notebook\u3002 \u8981\u8fd0\u884c\u7b14\u8bb0\u672c: jupyter notebook \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u3002","title":"\u4f7f\u7528 Anaconda \u548c conda \u5b89\u88c5 Jupyter"},{"location":"2.Use/1.install/#python-pip-jupyter","text":"\u91cd\u8981 Jupyter \u5b89\u88c5\u9700\u8981 Python 3.3 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u6216 Python 2.7\u3002 IPython 1.x\uff0c\u5305\u62ec\u540e\u6765\u6210\u4e3a Jupyter \u7684\u90e8\u5206\uff0c\u662f\u652f\u6301 Python 3.2 \u548c 2.6 \u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u3002 \u4f5c\u4e3a\u73b0\u6709\u7684 Python \u7528\u6237\uff0c\u60a8\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528 Python \u7684\u5305\u7ba1\u7406\u5668 pip \u800c\u4e0d\u662f Anaconda \u6765\u5b89\u88c5 Jupyter\u3002 \u9996\u5148\uff0c\u786e\u4fdd\u4f60\u6709\u6700\u65b0\u7684\u70b9\u5b50;\u65e7\u7248\u672c\u53ef\u80fd\u5728\u67d0\u4e9b\u4f9d\u8d56\u9879\u4e0a\u9047\u5230\u95ee\u9898: pip3 install --upgrade pip \u7136\u540e\u4f7f\u7528\u5b89\u88c5 Jupyter Notebook: pip3 install jupyter (\u5982\u679c\u4f7f\u7528\u65e7\u7248 Python 2\uff0c\u8bf7\u4f7f\u7528 pip\u3002) \u606d\u559c\u3002\u60a8\u5df2\u7ecf\u5b89\u88c5\u4e86 Jupyter Notebook\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u3002","title":"\u6709\u7ecf\u9a8c\u7684 Python \u7528\u6237\u7684\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528 pip \u5b89\u88c5 Jupyter"},{"location":"2.Use/2.config/","text":"\u914d\u7f6e \u00b6 \u6458\u8981 \u00b6 \u5e38\u89c1\u7684 Jupyter \u914d\u7f6e\u7cfb\u7edf Jupyter \u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u901a\u7528\u7684\u914d\u7f6e\u7cfb\u7edf\u548c\u4e00\u4e2a\u901a\u7528\u7684\u914d\u7f6e\u76ee\u5f55\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u76ee\u5f55\u4e3a ~/.jupyter \u3002 \u5185\u6838\u914d\u7f6e\u76ee\u5f55\u5982\u679c\u5185\u6838\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u5e38\u4f1a\u5c06\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u7ec4\u7ec7\u5728\u6bcf\u4e2a\u5185\u6838\u7684\u5355\u72ec\u76ee\u5f55\u4e2d\u3002 \u4f8b\u5982\uff0cIPython \u5185\u6838\u5728 IPython \u76ee\u5f55\u4e2d\u67e5\u627e\u6587\u4ef6\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 Jupyter \u76ee\u5f55 \u301c/ .jupyter \u3002 Python \u914d\u7f6e\u6587\u4ef6 \u00b6 \u8981\u521b\u5efa\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u8fd0\u884c: jupyter { application } --generate-config \u751f\u6210\u7684\u6587\u4ef6\u5c06\u547d\u540d\u4e3a jupyter_application_config.py \u3002 \u901a\u8fc7\u7f16\u8f91 jupyter_application_config.py \u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u914d\u7f6e\u7c7b\u5c5e\u6027: c.NotebookApp.port = 8754 \u62fc\u5199\u5c0f\u5fc3\u3002 \u5c06\u5ffd\u7565\u4e0d\u6b63\u786e\u7684\u540d\u79f0\uff0c\u6ca1\u6709\u9519\u8bef\u6d88\u606f\u3002 \u8981\u6dfb\u52a0\u5230\u53ef\u80fd\u5df2\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u7684\u96c6\u5408\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\uff0cdicts \u548c\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5\uff1aappend\uff0cextend\uff0cprepend\uff08\uff09\uff08\u5982 extend\uff0c\u4f46\u5728\u524d\u9762\uff09\uff0c\u6dfb\u52a0\u548c\u66f4\u65b0\uff08\u9002\u7528\u4e8e dicts \u548c sets\uff09: c.TemplateExporter.template_path.append ( './templates' ) \u7528\u4e8e\u914d\u7f6e\u7684\u547d\u4ee4\u884c\u9009\u9879 \u00b6 \u6bcf\u4e2a\u53ef\u914d\u7f6e\u7684\u503c\u4e5f\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528\u6b64\u8bed\u6cd5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012: jupyter notebook --NotebookApp.port = 8754 \u7ecf\u5e38\u4f7f\u7528\u7684\u9009\u9879\u4e5f\u4f1a\u6709\u77ed\u7684\u522b\u540d\u548c\u6807\u5fd7\uff0c\u4f8b\u5982 --port 8754 \u6216 --no-browser \u3002 \u8981\u67e5\u770b\u7f29\u5199\u9009\u9879\uff0c\u8bf7\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4f20\u9012 --help \u6216 --help-all : jupyter { application } --help # Just the short options jupyter { application } --help-all # Includes options without short names \u547d\u4ee4\u884c\u9009\u9879\u5c06\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u3002 See also traitlets.config \u6b64\u914d\u7f6e\u7cfb\u7edf\u7684\u4f4e\u7ea7\u4f53\u7cfb\u7ed3\u6784\u3002","title":"\u914d\u7f6e"},{"location":"2.Use/2.config/#_1","text":"","title":"\u914d\u7f6e"},{"location":"2.Use/2.config/#_2","text":"\u5e38\u89c1\u7684 Jupyter \u914d\u7f6e\u7cfb\u7edf Jupyter \u5e94\u7528\u7a0b\u5e8f\u6709\u4e00\u4e2a\u901a\u7528\u7684\u914d\u7f6e\u7cfb\u7edf\u548c\u4e00\u4e2a\u901a\u7528\u7684\u914d\u7f6e\u76ee\u5f55\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u76ee\u5f55\u4e3a ~/.jupyter \u3002 \u5185\u6838\u914d\u7f6e\u76ee\u5f55\u5982\u679c\u5185\u6838\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u5e38\u4f1a\u5c06\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u7ec4\u7ec7\u5728\u6bcf\u4e2a\u5185\u6838\u7684\u5355\u72ec\u76ee\u5f55\u4e2d\u3002 \u4f8b\u5982\uff0cIPython \u5185\u6838\u5728 IPython \u76ee\u5f55\u4e2d\u67e5\u627e\u6587\u4ef6\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 Jupyter \u76ee\u5f55 \u301c/ .jupyter \u3002","title":"\u6458\u8981"},{"location":"2.Use/2.config/#python","text":"\u8981\u521b\u5efa\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u8fd0\u884c: jupyter { application } --generate-config \u751f\u6210\u7684\u6587\u4ef6\u5c06\u547d\u540d\u4e3a jupyter_application_config.py \u3002 \u901a\u8fc7\u7f16\u8f91 jupyter_application_config.py \u6587\u4ef6\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd9\u6837\u914d\u7f6e\u7c7b\u5c5e\u6027: c.NotebookApp.port = 8754 \u62fc\u5199\u5c0f\u5fc3\u3002 \u5c06\u5ffd\u7565\u4e0d\u6b63\u786e\u7684\u540d\u79f0\uff0c\u6ca1\u6709\u9519\u8bef\u6d88\u606f\u3002 \u8981\u6dfb\u52a0\u5230\u53ef\u80fd\u5df2\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u7684\u96c6\u5408\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\uff0cdicts \u548c\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5\uff1aappend\uff0cextend\uff0cprepend\uff08\uff09\uff08\u5982 extend\uff0c\u4f46\u5728\u524d\u9762\uff09\uff0c\u6dfb\u52a0\u548c\u66f4\u65b0\uff08\u9002\u7528\u4e8e dicts \u548c sets\uff09: c.TemplateExporter.template_path.append ( './templates' )","title":"Python \u914d\u7f6e\u6587\u4ef6"},{"location":"2.Use/2.config/#_3","text":"\u6bcf\u4e2a\u53ef\u914d\u7f6e\u7684\u503c\u4e5f\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8bbe\u7f6e\uff0c\u5e76\u4f7f\u7528\u6b64\u8bed\u6cd5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012: jupyter notebook --NotebookApp.port = 8754 \u7ecf\u5e38\u4f7f\u7528\u7684\u9009\u9879\u4e5f\u4f1a\u6709\u77ed\u7684\u522b\u540d\u548c\u6807\u5fd7\uff0c\u4f8b\u5982 --port 8754 \u6216 --no-browser \u3002 \u8981\u67e5\u770b\u7f29\u5199\u9009\u9879\uff0c\u8bf7\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4f20\u9012 --help \u6216 --help-all : jupyter { application } --help # Just the short options jupyter { application } --help-all # Includes options without short names \u547d\u4ee4\u884c\u9009\u9879\u5c06\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u3002 See also traitlets.config \u6b64\u914d\u7f6e\u7cfb\u7edf\u7684\u4f4e\u7ea7\u4f53\u7cfb\u7ed3\u6784\u3002","title":"\u7528\u4e8e\u914d\u7f6e\u7684\u547d\u4ee4\u884c\u9009\u9879"},{"location":"2.Use/3.command/","text":"\u547d\u4ee4 \u00b6 \u6982\u8981 \u00b6 jupyter <subcommand> [ options ] \u63cf\u8ff0 \u00b6 \u50cf jupyter notebook \u8fd9\u6837\u7684\u547d\u4ee4\u542f\u52a8 Jupyter \u5e94\u7528\u7a0b\u5e8f\u3002 jupyter \u547d\u4ee4\u4e3b\u8981\u662f\u5b50\u547d\u4ee4\u7684\u547d\u540d\u7a7a\u95f4\u3002 \u5728 PATH \u4e0a\u627e\u5230\u7684\u50cf jupyter-foo \u8fd9\u6837\u7684\u547d\u4ee4\u5c06\u4f5c\u4e3a\u5b50\u547d\u4ee4 jupyter foo \u63d0\u4f9b\u3002 jupyter \u547d\u4ee4\u4e5f\u53ef\u7528\u4e8e\u6267\u884c\u9664\u542f\u52a8 Jupyter \u5e94\u7528\u7a0b\u5e8f\u4e4b\u5916\u7684\u64cd\u4f5c\u3002 \u547d\u4ee4\u9009\u9879 \u00b6 # \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\uff0c\u5305\u62ec\u53ef\u7528\u7684\u5b50\u547d\u4ee4\u3002 -h, --help # \u663e\u793a config \u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --config-dir # \u663e\u793a\u6570\u636e\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --data-dir # \u663e\u793a\u6570\u636e\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --runtime-dir # \u663e\u793a\u6240\u6709 Jupyter \u76ee\u5f55\u548c\u641c\u7d22\u8def\u5f84\u3002 --paths # \u4ee5\u673a\u5668\u53ef\u8bfb\u7684 JSON \u683c\u5f0f\u6253\u5370\u76ee\u5f55\u548c\u641c\u7d22\u8def\u5f84\u3002 --json","title":"\u547d\u4ee4"},{"location":"2.Use/3.command/#_1","text":"","title":"\u547d\u4ee4"},{"location":"2.Use/3.command/#_2","text":"jupyter <subcommand> [ options ]","title":"\u6982\u8981"},{"location":"2.Use/3.command/#_3","text":"\u50cf jupyter notebook \u8fd9\u6837\u7684\u547d\u4ee4\u542f\u52a8 Jupyter \u5e94\u7528\u7a0b\u5e8f\u3002 jupyter \u547d\u4ee4\u4e3b\u8981\u662f\u5b50\u547d\u4ee4\u7684\u547d\u540d\u7a7a\u95f4\u3002 \u5728 PATH \u4e0a\u627e\u5230\u7684\u50cf jupyter-foo \u8fd9\u6837\u7684\u547d\u4ee4\u5c06\u4f5c\u4e3a\u5b50\u547d\u4ee4 jupyter foo \u63d0\u4f9b\u3002 jupyter \u547d\u4ee4\u4e5f\u53ef\u7528\u4e8e\u6267\u884c\u9664\u542f\u52a8 Jupyter \u5e94\u7528\u7a0b\u5e8f\u4e4b\u5916\u7684\u64cd\u4f5c\u3002","title":"\u63cf\u8ff0"},{"location":"2.Use/3.command/#_4","text":"# \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\uff0c\u5305\u62ec\u53ef\u7528\u7684\u5b50\u547d\u4ee4\u3002 -h, --help # \u663e\u793a config \u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --config-dir # \u663e\u793a\u6570\u636e\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --data-dir # \u663e\u793a\u6570\u636e\u76ee\u5f55\u7684\u4f4d\u7f6e\u3002 --runtime-dir # \u663e\u793a\u6240\u6709 Jupyter \u76ee\u5f55\u548c\u641c\u7d22\u8def\u5f84\u3002 --paths # \u4ee5\u673a\u5668\u53ef\u8bfb\u7684 JSON \u683c\u5f0f\u6253\u5370\u76ee\u5f55\u548c\u641c\u7d22\u8def\u5f84\u3002 --json","title":"\u547d\u4ee4\u9009\u9879"},{"location":"2.Use/4.directories/","text":"\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e \u00b6 \u6211\u4eec\u5f88\u9ad8\u5174\u60a8\u80fd\u6210\u4e3a\u8d21\u732e\u8005\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u53d1\u73b0\u60a8\u5bf9\u9879\u76ee\u7684\u5f71\u54cd\u3002\u611f\u8c22\u60a8\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u5174\u8da3\uff0c\u60f3\u6cd5\u548c\u6280\u80fd\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u9488\u5bf9\u6bcf\u79cd\u6587\u4ef6\u7c7b\u578b\u7684\u4f4d\u7f6e\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002 \u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u5b58\u50a8\u5728 ~/.jupyter \u76ee\u5f55\u4e2d\u3002 JUPYTER_CONFIG_DIR \u8bbe\u7f6e\u6b64\u73af\u5883\u53d8\u91cf\u4ee5\u4f7f\u7528 Jupyter \u914d\u7f6e\u6587\u4ef6\u4ee5\u5916\u7684\u7279\u5b9a\u76ee\u5f55\uff08\u9ed8\u8ba4\u503c\u9664\u5916\uff09\u3002 \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u7528\u6237\u914d\u7f6e\u76ee\u5f55\u4e4b\u5916\uff0cJupyter \u8fd8\u6709\u4e00\u4e2a\u641c\u7d22\u8def\u5f84\uff0c\u5176\u4e2d\u5305\u542b\u5c06\u4ece\u4e2d\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u7684\u5176\u4ed6\u4f4d\u7f6e\u3002 \u4ee5\u4e0b\u662f\u6309\u4f18\u5148\u987a\u5e8f\u641c\u7d22\u7684\u4f4d\u7f6e\u8868\uff1a Unix Windows JUPYTER_CONFIG_DIR { sys.prefix } /etc/jupyter/ /usr/local/etc/jupyter/ /etc/jupyter/ %PROGRAMDATA% jupyter \\ \u8981\u5217\u51fa\u5f53\u524d\u4f7f\u7528\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4: jupyter --paths \u6570\u636e\u6587\u4ef6 \u00b6 Jupyter \u4f7f\u7528\u641c\u7d22\u8def\u5f84\u6765\u67e5\u627e\u53ef\u5b89\u88c5\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4f8b\u5982 kernelspecs \u548c notebook \u6269\u5c55\u3002 \u641c\u7d22\u8d44\u6e90\u65f6\uff0c\u4ee3\u7801\u5c06\u641c\u7d22\u4ece\u7b2c\u4e00\u4e2a\u76ee\u5f55\u5f00\u59cb\u7684\u641c\u7d22\u8def\u5f84\uff0c\u76f4\u5230\u627e\u5230\u5305\u542b\u8d44\u6e90\u7684\u4f4d\u7f6e\u3002 \u6bcf\u4e2a\u7c7b\u522b\u7684\u6587\u4ef6\u90fd\u4f4d\u4e8e\u641c\u7d22\u8def\u5f84\u7684\u6bcf\u4e2a\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u4e2d\u3002\u4f8b\u5982\uff0c\u5185\u6838\u89c4\u8303\u5728 kernels \u5b50\u76ee\u5f55\u4e2d\u3002 JUPYTER_PATH \u8bbe\u7f6e\u6b64\u73af\u5883\u53d8\u91cf\u4ee5\u4e3a\u6570\u636e\u641c\u7d22\u8def\u5f84\u63d0\u4f9b\u989d\u5916\u7684\u76ee\u5f55\u3002 JUPYTER_PATH \u5e94\u8be5\u5305\u542b\u4e00\u7cfb\u5217\u76ee\u5f55\uff0c\u7531 os.pathsep\uff08\u5728 Windows \u4e0a\uff0c\u5728 Unix \u4e0a\uff09\u5206\u9694\u3002 \u5728\u5176\u4ed6\u4f4d\u7f6e\u4e4b\u524d\u641c\u7d22 JUPYTER_PATH \u4e2d\u7ed9\u51fa\u7684\u76ee\u5f55\u3002 Linux ( & other free desktops ) Mac Windows JUPYTER_PATH ~/.local/share/jupyter/ ( respects $XDG_DATA_HOME ) ~/Library/Jupyter %APPDATA% jupyter { sys.prefix } /share/jupyter/ /usr/local/share/jupyter /usr/share/jupyter %PROGRAMDATA jupyter \u8fd0\u884c\u65f6\u6587\u4ef6 \u00b6 \u8fde\u63a5\u6587\u4ef6\u4e4b\u7c7b\u7684\u4e1c\u897f\u53ea\u5728\u7279\u5b9a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u7528\uff0c\u5b83\u6709\u4e00\u4e2a\u8fd0\u884c\u65f6\u76ee\u5f55\u3002 \u5728 Linux \u548c\u5176\u4ed6\u514d\u8d39\u684c\u9762\u5e73\u53f0\u4e0a\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8fd0\u884c\u65f6\u6587\u4ef6\u5b58\u50a8\u5728\\ \\$ XDG_RUNTIME_DIR / jupyter \u4e2d\u3002 \u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\uff0c\u5b83\u662f\u7528\u6237\u6570\u636e\u76ee\u5f55\u7684\u8fd0\u884c\u65f6/\u5b50\u76ee\u5f55\uff08\u4e0a\u8868\u7684\u7b2c\u4e8c\u884c\uff09\u3002 \u73af\u5883\u53d8\u91cf\u4e5f\u53ef\u7528\u4e8e\u8bbe\u7f6e\u8fd0\u884c\u65f6\u76ee\u5f55\u3002 JUPYTER_RUNTIME_DIR \u8bbe\u7f6e\u6b64\u9879\u4ee5\u8986\u76d6 Jupyter \u5b58\u50a8\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 \u6458\u8981 \u00b6 JUPYTER_CONFIG_DIR \u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e JUPYTER_PATH \u7528\u4e8e\u6570\u636e\u6587\u4ef6\u76ee\u5f55\u4f4d\u7f6e JUPYTER_RUNTIME_DIR \u7528\u4e8e\u8fd0\u884c\u65f6\u6587\u4ef6\u4f4d\u7f6e See also jupyter_core.paths \u7528\u4e8e\u67e5\u627e\u8fd9\u4e9b\u76ee\u5f55\u7684Python API\u3002 jupyter\u547d\u4ee4\u4ece\u547d\u4ee4\u884c\u627e\u5230\u8fd9\u4e9b\u76ee\u5f55\u3002","title":"\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e"},{"location":"2.Use/4.directories/#_1","text":"\u6211\u4eec\u5f88\u9ad8\u5174\u60a8\u80fd\u6210\u4e3a\u8d21\u732e\u8005\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u53d1\u73b0\u60a8\u5bf9\u9879\u76ee\u7684\u5f71\u54cd\u3002\u611f\u8c22\u60a8\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u5174\u8da3\uff0c\u60f3\u6cd5\u548c\u6280\u80fd\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u4ee5\u9488\u5bf9\u6bcf\u79cd\u6587\u4ef6\u7c7b\u578b\u7684\u4f4d\u7f6e\u8fdb\u884c\u81ea\u5b9a\u4e49\u3002","title":"\u76ee\u5f55\u548c\u6587\u4ef6\u4f4d\u7f6e"},{"location":"2.Use/4.directories/#_2","text":"\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u5b58\u50a8\u5728 ~/.jupyter \u76ee\u5f55\u4e2d\u3002 JUPYTER_CONFIG_DIR \u8bbe\u7f6e\u6b64\u73af\u5883\u53d8\u91cf\u4ee5\u4f7f\u7528 Jupyter \u914d\u7f6e\u6587\u4ef6\u4ee5\u5916\u7684\u7279\u5b9a\u76ee\u5f55\uff08\u9ed8\u8ba4\u503c\u9664\u5916\uff09\u3002 \u9664\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u7528\u6237\u914d\u7f6e\u76ee\u5f55\u4e4b\u5916\uff0cJupyter \u8fd8\u6709\u4e00\u4e2a\u641c\u7d22\u8def\u5f84\uff0c\u5176\u4e2d\u5305\u542b\u5c06\u4ece\u4e2d\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u7684\u5176\u4ed6\u4f4d\u7f6e\u3002 \u4ee5\u4e0b\u662f\u6309\u4f18\u5148\u987a\u5e8f\u641c\u7d22\u7684\u4f4d\u7f6e\u8868\uff1a Unix Windows JUPYTER_CONFIG_DIR { sys.prefix } /etc/jupyter/ /usr/local/etc/jupyter/ /etc/jupyter/ %PROGRAMDATA% jupyter \\ \u8981\u5217\u51fa\u5f53\u524d\u4f7f\u7528\u7684\u914d\u7f6e\u76ee\u5f55\uff0c\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4: jupyter --paths","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"2.Use/4.directories/#_3","text":"Jupyter \u4f7f\u7528\u641c\u7d22\u8def\u5f84\u6765\u67e5\u627e\u53ef\u5b89\u88c5\u7684\u6570\u636e\u6587\u4ef6\uff0c\u4f8b\u5982 kernelspecs \u548c notebook \u6269\u5c55\u3002 \u641c\u7d22\u8d44\u6e90\u65f6\uff0c\u4ee3\u7801\u5c06\u641c\u7d22\u4ece\u7b2c\u4e00\u4e2a\u76ee\u5f55\u5f00\u59cb\u7684\u641c\u7d22\u8def\u5f84\uff0c\u76f4\u5230\u627e\u5230\u5305\u542b\u8d44\u6e90\u7684\u4f4d\u7f6e\u3002 \u6bcf\u4e2a\u7c7b\u522b\u7684\u6587\u4ef6\u90fd\u4f4d\u4e8e\u641c\u7d22\u8def\u5f84\u7684\u6bcf\u4e2a\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u4e2d\u3002\u4f8b\u5982\uff0c\u5185\u6838\u89c4\u8303\u5728 kernels \u5b50\u76ee\u5f55\u4e2d\u3002 JUPYTER_PATH \u8bbe\u7f6e\u6b64\u73af\u5883\u53d8\u91cf\u4ee5\u4e3a\u6570\u636e\u641c\u7d22\u8def\u5f84\u63d0\u4f9b\u989d\u5916\u7684\u76ee\u5f55\u3002 JUPYTER_PATH \u5e94\u8be5\u5305\u542b\u4e00\u7cfb\u5217\u76ee\u5f55\uff0c\u7531 os.pathsep\uff08\u5728 Windows \u4e0a\uff0c\u5728 Unix \u4e0a\uff09\u5206\u9694\u3002 \u5728\u5176\u4ed6\u4f4d\u7f6e\u4e4b\u524d\u641c\u7d22 JUPYTER_PATH \u4e2d\u7ed9\u51fa\u7684\u76ee\u5f55\u3002 Linux ( & other free desktops ) Mac Windows JUPYTER_PATH ~/.local/share/jupyter/ ( respects $XDG_DATA_HOME ) ~/Library/Jupyter %APPDATA% jupyter { sys.prefix } /share/jupyter/ /usr/local/share/jupyter /usr/share/jupyter %PROGRAMDATA jupyter","title":"\u6570\u636e\u6587\u4ef6"},{"location":"2.Use/4.directories/#_4","text":"\u8fde\u63a5\u6587\u4ef6\u4e4b\u7c7b\u7684\u4e1c\u897f\u53ea\u5728\u7279\u5b9a\u8fdb\u7a0b\u7684\u751f\u547d\u5468\u671f\u4e2d\u6709\u7528\uff0c\u5b83\u6709\u4e00\u4e2a\u8fd0\u884c\u65f6\u76ee\u5f55\u3002 \u5728 Linux \u548c\u5176\u4ed6\u514d\u8d39\u684c\u9762\u5e73\u53f0\u4e0a\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u8fd0\u884c\u65f6\u6587\u4ef6\u5b58\u50a8\u5728\\ \\$ XDG_RUNTIME_DIR / jupyter \u4e2d\u3002 \u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\uff0c\u5b83\u662f\u7528\u6237\u6570\u636e\u76ee\u5f55\u7684\u8fd0\u884c\u65f6/\u5b50\u76ee\u5f55\uff08\u4e0a\u8868\u7684\u7b2c\u4e8c\u884c\uff09\u3002 \u73af\u5883\u53d8\u91cf\u4e5f\u53ef\u7528\u4e8e\u8bbe\u7f6e\u8fd0\u884c\u65f6\u76ee\u5f55\u3002 JUPYTER_RUNTIME_DIR \u8bbe\u7f6e\u6b64\u9879\u4ee5\u8986\u76d6 Jupyter \u5b58\u50a8\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002","title":"\u8fd0\u884c\u65f6\u6587\u4ef6"},{"location":"2.Use/4.directories/#_5","text":"JUPYTER_CONFIG_DIR \u7528\u4e8e\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e JUPYTER_PATH \u7528\u4e8e\u6570\u636e\u6587\u4ef6\u76ee\u5f55\u4f4d\u7f6e JUPYTER_RUNTIME_DIR \u7528\u4e8e\u8fd0\u884c\u65f6\u6587\u4ef6\u4f4d\u7f6e See also jupyter_core.paths \u7528\u4e8e\u67e5\u627e\u8fd9\u4e9b\u76ee\u5f55\u7684Python API\u3002 jupyter\u547d\u4ee4\u4ece\u547d\u4ee4\u884c\u627e\u5230\u8fd9\u4e9b\u76ee\u5f55\u3002","title":"\u6458\u8981"},{"location":"2.Use/4.upgrade/","text":"\u5347\u7ea7 \u00b6 \u4f7f\u7528 Anaconda \u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c \u00b6 \u5982\u679c\u4f7f\u7528 Anaconda\uff0c\u8bf7\u4f7f\u7528 conda \u66f4\u65b0 Jupyter: conda update jupyter \u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u4ee5\u8fd0\u884c Jupyter Notebook\u3002 \u5c06 IPython Notebook \u5347\u7ea7\u5230 Jupyter Notebook \u00b6 Jupyter \u7b14\u8bb0\u672c\u66fe\u7ecf\u88ab\u79f0\u4e3a IPython \u7b14\u8bb0\u672c\u3002 \u5982\u679c\u60a8\u8fd0\u884c\u7684\u662f\u65e7\u7248\u672c\u7684 IPython Notebook\uff08\u7248\u672c 3 \u6216\u66f4\u65e9\u7248\u672c\uff09\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5185\u5bb9\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u7684 Jupyter Notebook\u3002 \u5982\u679c\u4f7f\u7528 Anaconda\uff0c\u8bf7\u4f7f\u7528 conda \u66f4\u65b0 Jupyter: conda update jupyter \u6216\u8005 \u5982\u679c\u4f7f\u7528 pip: pip install -U jupyter \u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u4ee5\u8fd0\u884c Jupyter Notebook\u3002 See also \u8fc1\u79fb\u6587\u6863\u5305\u542b\u6709\u5173\u4eceIPython 3\u8fc1\u79fb\u5230Jupyter\u7684\u5176\u4ed6\u4fe1\u606f\u3002","title":"\u5347\u7ea7"},{"location":"2.Use/4.upgrade/#_1","text":"","title":"\u5347\u7ea7"},{"location":"2.Use/4.upgrade/#anaconda-jupyter","text":"\u5982\u679c\u4f7f\u7528 Anaconda\uff0c\u8bf7\u4f7f\u7528 conda \u66f4\u65b0 Jupyter: conda update jupyter \u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u4ee5\u8fd0\u884c Jupyter Notebook\u3002","title":"\u4f7f\u7528 Anaconda \u5347\u7ea7 Jupyter \u7b14\u8bb0\u672c"},{"location":"2.Use/4.upgrade/#ipython-notebook-jupyter-notebook","text":"Jupyter \u7b14\u8bb0\u672c\u66fe\u7ecf\u88ab\u79f0\u4e3a IPython \u7b14\u8bb0\u672c\u3002 \u5982\u679c\u60a8\u8fd0\u884c\u7684\u662f\u65e7\u7248\u672c\u7684 IPython Notebook\uff08\u7248\u672c 3 \u6216\u66f4\u65e9\u7248\u672c\uff09\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5185\u5bb9\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u7684 Jupyter Notebook\u3002 \u5982\u679c\u4f7f\u7528 Anaconda\uff0c\u8bf7\u4f7f\u7528 conda \u66f4\u65b0 Jupyter: conda update jupyter \u6216\u8005 \u5982\u679c\u4f7f\u7528 pip: pip install -U jupyter \u8bf7\u53c2\u9605\u8fd0\u884c\u7b14\u8bb0\u672c\u4ee5\u8fd0\u884c Jupyter Notebook\u3002 See also \u8fc1\u79fb\u6587\u6863\u5305\u542b\u6709\u5173\u4eceIPython 3\u8fc1\u79fb\u5230Jupyter\u7684\u5176\u4ed6\u4fe1\u606f\u3002","title":"\u5c06 IPython Notebook \u5347\u7ea7\u5230 Jupyter Notebook"},{"location":"2.Use/5.kernel/","text":"\u5b89\u88c5\u5185\u6838(\u53ef\u9009) \u00b6 \u6b64\u4fe1\u606f\u63d0\u4f9b\u4e86\u4f7f\u7528\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff08\u5185\u6838\uff09\u7684 Jupyter Notebook \u7684\u9ad8\u7ea7\u89c6\u56fe\u3002 \u662f\u5426\u5df2\u9884\u5148\u5b89\u88c5\u4efb\u4f55\u8bed\u8a00\uff1f \u00b6 \u662f\u7684\uff0c\u5b89\u88c5 Jupyter Notebook \u4e5f\u5c06\u5b89\u88c5 IPython \u5185\u6838\u3002 \u8fd9\u5141\u8bb8\u4f7f\u7528 Python \u7f16\u7a0b\u8bed\u8a00\u5728\u7b14\u8bb0\u672c\u4e0a\u5de5\u4f5c\u3002 \u5982\u4f55\u5b89\u88c5 Python 2 \u548c Python 3\uff1f \u00b6 \u8981\u5b89\u88c5\u5176\u4ed6\u7248\u672c\u7684 Python\uff0c\u5373\u540c\u65f6\u63d0\u4f9b Python 2 \u548c 3\uff0c\u8bf7\u53c2\u9605\u6709\u5173\u5b89\u88c5\u5185\u6838\u7684 IPython \u6587\u6863\u3002 \u5982\u4f55\u5b89\u88c5 R \u6216 Julia \u7b49\u5176\u4ed6\u8bed\u8a00\uff1f \u00b6 \u8981\u4ee5\u975e Python \u8bed\u8a00\u8fd0\u884c\u7b14\u8bb0\u672c\uff0c\u4f8b\u5982 R \u6216 Julia\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u5176\u4ed6\u5185\u6838\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u53ef\u7528\u5185\u6838\u7684\u5b8c\u6574\u5217\u8868\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u9879\u76ee : \u5404\u4e2aJupyter\u6216IPython\u9879\u76ee\u7684\u8be6\u7ec6\u5b89\u88c5\u8bf4\u660e\u3002 Kernels : \u6709\u5173\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u5185\u6838\u7684\u4fe1\u606f\u3002 Jupyter\u5ba2\u6237\u7aef\u7684\u5185\u6838\u6587\u6863 : \u5173\u4e8e\u5185\u6838\u7684\u6280\u672f\u4fe1\u606f\u3002","title":"\u5b89\u88c5\u5185\u6838(\u53ef\u9009)"},{"location":"2.Use/5.kernel/#_1","text":"\u6b64\u4fe1\u606f\u63d0\u4f9b\u4e86\u4f7f\u7528\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\uff08\u5185\u6838\uff09\u7684 Jupyter Notebook \u7684\u9ad8\u7ea7\u89c6\u56fe\u3002","title":"\u5b89\u88c5\u5185\u6838(\u53ef\u9009)"},{"location":"2.Use/5.kernel/#_2","text":"\u662f\u7684\uff0c\u5b89\u88c5 Jupyter Notebook \u4e5f\u5c06\u5b89\u88c5 IPython \u5185\u6838\u3002 \u8fd9\u5141\u8bb8\u4f7f\u7528 Python \u7f16\u7a0b\u8bed\u8a00\u5728\u7b14\u8bb0\u672c\u4e0a\u5de5\u4f5c\u3002","title":"\u662f\u5426\u5df2\u9884\u5148\u5b89\u88c5\u4efb\u4f55\u8bed\u8a00\uff1f"},{"location":"2.Use/5.kernel/#python-2-python-3","text":"\u8981\u5b89\u88c5\u5176\u4ed6\u7248\u672c\u7684 Python\uff0c\u5373\u540c\u65f6\u63d0\u4f9b Python 2 \u548c 3\uff0c\u8bf7\u53c2\u9605\u6709\u5173\u5b89\u88c5\u5185\u6838\u7684 IPython \u6587\u6863\u3002","title":"\u5982\u4f55\u5b89\u88c5 Python 2 \u548c Python 3\uff1f"},{"location":"2.Use/5.kernel/#r-julia","text":"\u8981\u4ee5\u975e Python \u8bed\u8a00\u8fd0\u884c\u7b14\u8bb0\u672c\uff0c\u4f8b\u5982 R \u6216 Julia\uff0c\u60a8\u9700\u8981\u5b89\u88c5\u5176\u4ed6\u5185\u6838\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u53ef\u7528\u5185\u6838\u7684\u5b8c\u6574\u5217\u8868\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b Jupyter\u9879\u76ee : \u5404\u4e2aJupyter\u6216IPython\u9879\u76ee\u7684\u8be6\u7ec6\u5b89\u88c5\u8bf4\u660e\u3002 Kernels : \u6709\u5173\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u5185\u6838\u7684\u4fe1\u606f\u3002 Jupyter\u5ba2\u6237\u7aef\u7684\u5185\u6838\u6587\u6863 : \u5173\u4e8e\u5185\u6838\u7684\u6280\u672f\u4fe1\u606f\u3002","title":"\u5982\u4f55\u5b89\u88c5 R \u6216 Julia \u7b49\u5176\u4ed6\u8bed\u8a00\uff1f"},{"location":"2.Use/6.Glossary/","text":"\u8bcd\u6c47\u8868 \u00b6 \u672f\u8bed \u8bf4\u660e command line \u952e\u5165\u547d\u4ee4\u7684\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\u7a97\u53e3\u3002 Command Prompt \u5728 Windows \u4e0a\uff0c\u8fd9\u662f\u5c06\u547d\u4ee4\u952e\u5165\u7a97\u53e3\u4ee5\u4f9b\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 conda Anaconda \u7684\u5305\u88f9\u7ecf\u7406\u3002 config \u6307\u914d\u7f6e\u6587\u4ef6\u548c\u8fdb\u7a0b\u3002 kernel \u5185\u6838\u5728 Jupyter \u4e2d\u63d0\u4f9b\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u3002 IPython \u662f\u9ed8\u8ba4\u7684\u5185\u6838\u3002\u5176\u4ed6\u5185\u6838\u5305\u62ec R\uff0cJulia \u7b49\u7b49\u3002 Notebook Dashboard \u7b14\u8bb0\u672c\u7528\u6237\u754c\u9762\uff0c\u663e\u793a\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u7684\u5217\u8868\u3002 pip Python \u5305\u7ba1\u7406\u5668\u3002 profiles \u5728 Jupyter \u4e2d\u4e0d\u53ef\u7528\u3002\u5728 IPython 3 \u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\u662f\u914d\u7f6e\u548c\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u96c6\u5408\u3002 REPL read-eval-print-loop. terminal \u7528\u4e8e\u8f93\u5165\u8981\u6267\u884c\u7684\u547d\u4ee4\u7684\u7a97\u53e3\uff08Linux \u548c OS X\uff09\u3002 widget \u7c7b\u4f3c\u4e8e\u63d2\u4ef6\u7684\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8f93\u5165\uff0c\u4f8b\u5982\u6ed1\u5757\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"2.Use/6.Glossary/#_1","text":"\u672f\u8bed \u8bf4\u660e command line \u952e\u5165\u547d\u4ee4\u7684\u7ec8\u7aef\u6216\u63a7\u5236\u53f0\u7a97\u53e3\u3002 Command Prompt \u5728 Windows \u4e0a\uff0c\u8fd9\u662f\u5c06\u547d\u4ee4\u952e\u5165\u7a97\u53e3\u4ee5\u4f9b\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 conda Anaconda \u7684\u5305\u88f9\u7ecf\u7406\u3002 config \u6307\u914d\u7f6e\u6587\u4ef6\u548c\u8fdb\u7a0b\u3002 kernel \u5185\u6838\u5728 Jupyter \u4e2d\u63d0\u4f9b\u7f16\u7a0b\u8bed\u8a00\u652f\u6301\u3002 IPython \u662f\u9ed8\u8ba4\u7684\u5185\u6838\u3002\u5176\u4ed6\u5185\u6838\u5305\u62ec R\uff0cJulia \u7b49\u7b49\u3002 Notebook Dashboard \u7b14\u8bb0\u672c\u7528\u6237\u754c\u9762\uff0c\u663e\u793a\u542f\u52a8\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u7684\u76ee\u5f55\u4e2d\u7684\u7b14\u8bb0\u672c\uff0c\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u7684\u5217\u8868\u3002 pip Python \u5305\u7ba1\u7406\u5668\u3002 profiles \u5728 Jupyter \u4e2d\u4e0d\u53ef\u7528\u3002\u5728 IPython 3 \u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\u662f\u914d\u7f6e\u548c\u8fd0\u884c\u65f6\u6587\u4ef6\u7684\u96c6\u5408\u3002 REPL read-eval-print-loop. terminal \u7528\u4e8e\u8f93\u5165\u8981\u6267\u884c\u7684\u547d\u4ee4\u7684\u7a97\u53e3\uff08Linux \u548c OS X\uff09\u3002 widget \u7c7b\u4f3c\u4e8e\u63d2\u4ef6\u7684\u7528\u6237\u754c\u9762\u7ec4\u4ef6\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u8f93\u5165\uff0c\u4f8b\u5982\u6ed1\u5757\u3002","title":"\u8bcd\u6c47\u8868"},{"location":"2.Use/7.MIME-types/","text":"MIME types \u00b6 \u4ec0\u4e48\u662f mimetype\uff1f \u00b6 \u53d1\u751f Internet \u8bf7\u6c42\u548c\u54cd\u5e94\u65f6\uff0c\u5c06\u4f20\u9012 Content-Type \u6807\u5934\u3002 mimetype\uff08\u4e5f\u79f0\u4e3a MIME \u7c7b\u578b\uff09\u6807\u8bc6\u5e94\u7531\u5e94\u7528\u7a0b\u5e8f\u548c\u6d4f\u89c8\u5668\u6839\u636e\u7c7b\u578b\u5904\u7406\u6216\u4f7f\u7528\u8fd4\u56de\u7684\u5185\u5bb9\u7684\u65b9\u5f0f\u3002 MIME \u7c7b\u578b\u7531 MIME \u7ec4\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\uff0c\u56fe\u50cf\uff0c\u97f3\u9891\u7b49\uff09\u548c MIME \u5b50\u7c7b\u578b\u7ec4\u6210\u3002 \u4f8b\u5982\uff0cMIME \u7c7b\u578b\u662f image/png\uff0c\u5176\u4e2d MIME \u7ec4\u662f image\uff0c\u5b50\u7c7b\u578b\u662f png\u3002 \u7531\u4e8e\u7c7b\u578b\u53ef\u80fd\u5305\u542b\u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u4f9b\u5e94\u5546\u7279\u5b9a\u7684 MIME \u7c7b\u578b vnd\u3002 \u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546\u7684 MIME \u7c7b\u578b\u5c06\u5305\u542b vnd\uff0c\u4f8b\u5982 application/vnd.jupyter.cells\u3002 Jupyter \u548c IPython \u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49 mimetypes \u00b6 application/vnd.jupyter application/vnd.jupyter.cells application/vnd.jupyter.dragindex \u7531 nbdime \u4f7f\u7528 application/x-ipynb+json \u7528\u4e8e\u7b14\u8bb0\u672c text/html metadata: isolated: boolean \u2013 HTML\u5e94\u8be5\u5728 <iframe> \u4e2d\u5448\u73b0\u3002 \u5217\u51fa\u7528\u4e8e\u663e\u793a\u7684\u81ea\u5b9a\u4e49 mimetypes \u00b6 application/vnd.geo+json - \u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 GeoJSON \u89c4\u8303 application/vnd.geo + json\uff0c\u5e76\u5c06\u5176\u66ff\u6362\u4e3a application/geo + json application/geo+json - \u9996\u9009 GeoJSON \u89c4\u8303 application/vnd.plotly.v1+json - Plotly JSON Schema application/vdom.v1+json - \u865a\u62df DOM \u89c4\u8303","title":"MIME types"},{"location":"2.Use/7.MIME-types/#mime-types","text":"","title":"MIME types"},{"location":"2.Use/7.MIME-types/#mimetype","text":"\u53d1\u751f Internet \u8bf7\u6c42\u548c\u54cd\u5e94\u65f6\uff0c\u5c06\u4f20\u9012 Content-Type \u6807\u5934\u3002 mimetype\uff08\u4e5f\u79f0\u4e3a MIME \u7c7b\u578b\uff09\u6807\u8bc6\u5e94\u7531\u5e94\u7528\u7a0b\u5e8f\u548c\u6d4f\u89c8\u5668\u6839\u636e\u7c7b\u578b\u5904\u7406\u6216\u4f7f\u7528\u8fd4\u56de\u7684\u5185\u5bb9\u7684\u65b9\u5f0f\u3002 MIME \u7c7b\u578b\u7531 MIME \u7ec4\uff08\u5373\u5e94\u7528\u7a0b\u5e8f\uff0c\u56fe\u50cf\uff0c\u97f3\u9891\u7b49\uff09\u548c MIME \u5b50\u7c7b\u578b\u7ec4\u6210\u3002 \u4f8b\u5982\uff0cMIME \u7c7b\u578b\u662f image/png\uff0c\u5176\u4e2d MIME \u7ec4\u662f image\uff0c\u5b50\u7c7b\u578b\u662f png\u3002 \u7531\u4e8e\u7c7b\u578b\u53ef\u80fd\u5305\u542b\u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u9879\u76ee\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u4f9b\u5e94\u5546\u7279\u5b9a\u7684 MIME \u7c7b\u578b vnd\u3002 \u7279\u5b9a\u4e8e\u4f9b\u5e94\u5546\u7684 MIME \u7c7b\u578b\u5c06\u5305\u542b vnd\uff0c\u4f8b\u5982 application/vnd.jupyter.cells\u3002","title":"\u4ec0\u4e48\u662f mimetype\uff1f"},{"location":"2.Use/7.MIME-types/#jupyter-ipython-mimetypes","text":"application/vnd.jupyter application/vnd.jupyter.cells application/vnd.jupyter.dragindex \u7531 nbdime \u4f7f\u7528 application/x-ipynb+json \u7528\u4e8e\u7b14\u8bb0\u672c text/html metadata: isolated: boolean \u2013 HTML\u5e94\u8be5\u5728 <iframe> \u4e2d\u5448\u73b0\u3002","title":"Jupyter \u548c IPython \u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49 mimetypes"},{"location":"2.Use/7.MIME-types/#mimetypes","text":"application/vnd.geo+json - \u73b0\u5728\u4e0d\u63a8\u8350\u4f7f\u7528 GeoJSON \u89c4\u8303 application/vnd.geo + json\uff0c\u5e76\u5c06\u5176\u66ff\u6362\u4e3a application/geo + json application/geo+json - \u9996\u9009 GeoJSON \u89c4\u8303 application/vnd.plotly.v1+json - Plotly JSON Schema application/vdom.v1+json - \u865a\u62df DOM \u89c4\u8303","title":"\u5217\u51fa\u7528\u4e8e\u663e\u793a\u7684\u81ea\u5b9a\u4e49 mimetypes"},{"location":"3.Documentation/","text":"\u6587\u6863 \u00b6 Jupyter \u9879\u76ee\u7684\u6bcf\u4e2a\u5b58\u50a8\u5e93\u7684\u5b8c\u6574\u94fe\u63a5\u5217\u8868\u3002 \u901a\u7528\u6587\u6863 \u00b6 Project-wide \u6587\u6863 \u4e3a Jupyter \u505a\u8d21\u732e \u7528\u6237\u754c\u9762 \u00b6 JupyterLab Jupyter Notebook Jupyter Console Qt Console IPython \u00b6 IPython IPyParallel Traitlets \u5185\u6838 \u00b6 IPython IRkernel IJulia \u793e\u533a\u7ef4\u62a4\u5185\u6838 \u5c0f\u5de5\u5177 \u00b6 IPyWidgets/Jupyter Widgets widget-cookiecutter \u6240\u6709\u5c0f\u90e8\u4ef6\u9879\u76ee... \u7b14\u8bb0\u672c\u6587\u6863 \u00b6 nbconvert nbformat nbviewer JupyterHub \u00b6 JupyterHub Zero to JupyterHub nbgrader \u6240\u6709 JupyterHub \u9879\u76ee......... \u90e8\u7f72 \u00b6 Docker Stacks \u5185\u6838\u7f51\u5173 \u4f01\u4e1a\u7f51\u5173 \u57fa\u91d1\u4f1a \u00b6 Jupyter Client Jupyter Core Jupyter Alabaster Theme","title":"\u6587\u6863"},{"location":"3.Documentation/#_1","text":"Jupyter \u9879\u76ee\u7684\u6bcf\u4e2a\u5b58\u50a8\u5e93\u7684\u5b8c\u6574\u94fe\u63a5\u5217\u8868\u3002","title":"\u6587\u6863"},{"location":"3.Documentation/#_2","text":"Project-wide \u6587\u6863 \u4e3a Jupyter \u505a\u8d21\u732e","title":"\u901a\u7528\u6587\u6863"},{"location":"3.Documentation/#_3","text":"JupyterLab Jupyter Notebook Jupyter Console Qt Console","title":"\u7528\u6237\u754c\u9762"},{"location":"3.Documentation/#ipython","text":"IPython IPyParallel Traitlets","title":"IPython"},{"location":"3.Documentation/#_4","text":"IPython IRkernel IJulia \u793e\u533a\u7ef4\u62a4\u5185\u6838","title":"\u5185\u6838"},{"location":"3.Documentation/#_5","text":"IPyWidgets/Jupyter Widgets widget-cookiecutter \u6240\u6709\u5c0f\u90e8\u4ef6\u9879\u76ee...","title":"\u5c0f\u5de5\u5177"},{"location":"3.Documentation/#_6","text":"nbconvert nbformat nbviewer","title":"\u7b14\u8bb0\u672c\u6587\u6863"},{"location":"3.Documentation/#jupyterhub","text":"JupyterHub Zero to JupyterHub nbgrader \u6240\u6709 JupyterHub \u9879\u76ee.........","title":"JupyterHub"},{"location":"3.Documentation/#_7","text":"Docker Stacks \u5185\u6838\u7f51\u5173 \u4f01\u4e1a\u7f51\u5173","title":"\u90e8\u7f72"},{"location":"3.Documentation/#_8","text":"Jupyter Client Jupyter Core Jupyter Alabaster Theme","title":"\u57fa\u91d1\u4f1a"},{"location":"3.Documentation/Community/","text":"\u793e\u533a\u6307\u5357 \u00b6 \u6b22\u8fce\u6765\u5230 Jupyter \u793e\u533a\u6307\u5357\u3002 \u8fd9\u4e9b\u6307\u5357\u65e8\u5728\u63d0\u4f9b\u6709\u5173 Jupyter \u793e\u533a\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u80cc\u666f\uff0c\u4e8b\u4ef6\u548c\u6c9f\u901a\u6e20\u9053\u3002 \u7531\u4e8e\u6211\u4eec\u7684\u793e\u533a\u975e\u5e38\u6d3b\u8dc3\uff0c\u4fe1\u606f\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u4f7f\u5176\u4fdd\u6301\u6700\u65b0\u72b6\u6001\u3002 \u6bcf\u5468\u5f00\u53d1\u4f1a\u8bae \u00b6 \u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u6bcf\u5468\u90fd\u4f1a\u53ec\u5f00\u4f1a\u8bae\uff0c\u8ba8\u8bba\u548c\u6f14\u793a\u4ed6\u4eec\u4e00\u76f4\u5728\u7814\u7a76\u7684\u5185\u5bb9\uff0c\u8ba8\u8bba\u672a\u6765\u7684\u8ba1\u5212\u4ee5\u53ca\u5f15\u5bfc\u4f1a\u8bdd\u3002 \u8fd9\u4e9b\u4f1a\u8bae\u662f\u516c\u5f00\u7684\u3002 \u53c2\u52a0\u4f1a\u8bae\u7684\u76f4\u63a5\u94fe\u63a5\u5c06\u5728\u4f1a\u8bae\u5f00\u59cb\u524d\u53d1\u5e03\u5230 Hackpad\u3002\u4e4b\u540e\uff0c\u4f1a\u8bae\u5f55\u97f3\u5c06\u53d1\u5e03\u5230 YouTube \u4e0a\u7684 IPython \u9891\u9053\u3002 Jupyter/IPython \u4f1a\u8bae \u00b6 \u5468\u4e8c\u4e0a\u5348 9 \u70b9\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4 JupyterLab \u4f1a\u8bae \u00b6 \u5468\u4e94\u4e0a\u5348 9 \u70b9\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4 \u5728 Hackpad \u4f1a\u8bae\u4e4b\u524d/\u671f\u95f4\u8fdb\u884c\u534f\u4f5c\u7b14\u8bb0\u3002 Hackpads \u6309\u6708\u7ec4\u7ec7\u3002 \u6211\u4eec\u5c06\u5728\u6bcf\u6b21\u4f1a\u8bae\u5f00\u59cb\u524d 1-2 \u5929\u5bf9\u5f00\u53d1\u4f1a\u5458 Gitter \u9891\u9053\u8fdb\u884c ping \u64cd\u4f5c\uff0c\u4ee5\u4e86\u89e3\u8c01\u53ef\u80fd\u4f1a\u53c2\u52a0\u3002 Jupyter \u901a\u8baf \u00b6 Blog https://blog.jupyter.org/ Newsletter https://newsletter.jupyter.org/ Website https://jupyter.org Twitter https://twitter.com/ProjectJupyter \u90ae\u4ef6\u5217\u8868 (Jupyter, Jupyter in Education) https://jupyter.org/community.html \u6cbb\u7406 \u00b6 \u6307\u5bfc\u59d4\u5458\u4f1a\uff1a\u5173\u4e8e\u6307\u5bfc\u59d4\u5458\u4f1a\u53ca\u5176\u6210\u5458\u7684\u4fe1\u606f\u53ef\u4ee5\u5728 Jupyter \u7f51\u7ad9\u4e0a\u627e\u5230\u3002 Jupyter Enhancement Proposal\uff08JEP\uff09\u6d41\u7a0b\uff1a\u6709\u5173\u6d41\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728 jupyter / enhancement-proposal GitHub repo \u4e2d\u627e\u5230\u3002 \u884c\u4e3a\u5b88\u5219 \u00b6 \u53ef\u4ee5\u5728 GitHub \u4e0a\u7684 Jupyter Governance \u56de\u8d2d\u4e2d\u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002","title":"\u793e\u533a\u6307\u5357"},{"location":"3.Documentation/Community/#_1","text":"\u6b22\u8fce\u6765\u5230 Jupyter \u793e\u533a\u6307\u5357\u3002 \u8fd9\u4e9b\u6307\u5357\u65e8\u5728\u63d0\u4f9b\u6709\u5173 Jupyter \u793e\u533a\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u80cc\u666f\uff0c\u4e8b\u4ef6\u548c\u6c9f\u901a\u6e20\u9053\u3002 \u7531\u4e8e\u6211\u4eec\u7684\u793e\u533a\u975e\u5e38\u6d3b\u8dc3\uff0c\u4fe1\u606f\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u6211\u4eec\u4f1a\u5c3d\u6700\u5927\u52aa\u529b\u4f7f\u5176\u4fdd\u6301\u6700\u65b0\u72b6\u6001\u3002","title":"\u793e\u533a\u6307\u5357"},{"location":"3.Documentation/Community/#_2","text":"\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u6bcf\u5468\u90fd\u4f1a\u53ec\u5f00\u4f1a\u8bae\uff0c\u8ba8\u8bba\u548c\u6f14\u793a\u4ed6\u4eec\u4e00\u76f4\u5728\u7814\u7a76\u7684\u5185\u5bb9\uff0c\u8ba8\u8bba\u672a\u6765\u7684\u8ba1\u5212\u4ee5\u53ca\u5f15\u5bfc\u4f1a\u8bdd\u3002 \u8fd9\u4e9b\u4f1a\u8bae\u662f\u516c\u5f00\u7684\u3002 \u53c2\u52a0\u4f1a\u8bae\u7684\u76f4\u63a5\u94fe\u63a5\u5c06\u5728\u4f1a\u8bae\u5f00\u59cb\u524d\u53d1\u5e03\u5230 Hackpad\u3002\u4e4b\u540e\uff0c\u4f1a\u8bae\u5f55\u97f3\u5c06\u53d1\u5e03\u5230 YouTube \u4e0a\u7684 IPython \u9891\u9053\u3002","title":"\u6bcf\u5468\u5f00\u53d1\u4f1a\u8bae"},{"location":"3.Documentation/Community/#jupyteripython","text":"\u5468\u4e8c\u4e0a\u5348 9 \u70b9\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4","title":"Jupyter/IPython \u4f1a\u8bae"},{"location":"3.Documentation/Community/#jupyterlab","text":"\u5468\u4e94\u4e0a\u5348 9 \u70b9\u592a\u5e73\u6d0b\u6807\u51c6\u65f6\u95f4 \u5728 Hackpad \u4f1a\u8bae\u4e4b\u524d/\u671f\u95f4\u8fdb\u884c\u534f\u4f5c\u7b14\u8bb0\u3002 Hackpads \u6309\u6708\u7ec4\u7ec7\u3002 \u6211\u4eec\u5c06\u5728\u6bcf\u6b21\u4f1a\u8bae\u5f00\u59cb\u524d 1-2 \u5929\u5bf9\u5f00\u53d1\u4f1a\u5458 Gitter \u9891\u9053\u8fdb\u884c ping \u64cd\u4f5c\uff0c\u4ee5\u4e86\u89e3\u8c01\u53ef\u80fd\u4f1a\u53c2\u52a0\u3002","title":"JupyterLab \u4f1a\u8bae"},{"location":"3.Documentation/Community/#jupyter","text":"Blog https://blog.jupyter.org/ Newsletter https://newsletter.jupyter.org/ Website https://jupyter.org Twitter https://twitter.com/ProjectJupyter \u90ae\u4ef6\u5217\u8868 (Jupyter, Jupyter in Education) https://jupyter.org/community.html","title":"Jupyter \u901a\u8baf"},{"location":"3.Documentation/Community/#_3","text":"\u6307\u5bfc\u59d4\u5458\u4f1a\uff1a\u5173\u4e8e\u6307\u5bfc\u59d4\u5458\u4f1a\u53ca\u5176\u6210\u5458\u7684\u4fe1\u606f\u53ef\u4ee5\u5728 Jupyter \u7f51\u7ad9\u4e0a\u627e\u5230\u3002 Jupyter Enhancement Proposal\uff08JEP\uff09\u6d41\u7a0b\uff1a\u6709\u5173\u6d41\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728 jupyter / enhancement-proposal GitHub repo \u4e2d\u627e\u5230\u3002","title":"\u6cbb\u7406"},{"location":"3.Documentation/Community/#_4","text":"\u53ef\u4ee5\u5728 GitHub \u4e0a\u7684 Jupyter Governance \u56de\u8d2d\u4e2d\u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002","title":"\u884c\u4e3a\u5b88\u5219"},{"location":"3.Documentation/Contributor/","text":"\u8d21\u732e\u8005\u6307\u5357 \u00b6 \u5f00\u53d1\u8005\u6307\u5357 IPython \u5f00\u53d1\u6307\u5357\uff08\u6765\u6e90\uff1a\u65e7\u7684 IPython wiki\uff09 \u6587\u6863\u6307\u5357 \u901a\u8baf\u6307\u5357 \u65e0\u8bba\u60a8\u662f Project Jupyter \u5b50\u9879\u76ee\u8fd8\u662f IPython \u7684\u65b0\u6210\u5458\uff0c\u56de\u5f52\u8005\u6216\u5f53\u524d\u8d21\u732e\u8005\uff0c\u6211\u4eec\u90fd\u6b22\u8fce\u60a8\u3002 Jupyter \u9879\u76ee\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u7a33\u6b65\u589e\u957f\uff0c\u5f88\u9ad8\u5174\u770b\u5230\u4eba\u4eec\u4f7f\u7528\u8fd9\u4e9b\u9879\u76ee\u7684\u65b9\u5f0f\u5f88\u591a\u3002 \u7531\u4e8e\u8fd9\u79cd\u5feb\u901f\u6269\u5c55\uff0c\u6211\u4eec\u7684\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u6b63\u5728\u5e73\u8861\u8bb8\u591a\u9700\u6c42\uff0c\u9700\u6c42\u548c\u8d44\u6e90\u3002 \u6211\u4eec\u8981\u6c42\u8d21\u732e\u8005\u82b1\u4e9b\u65f6\u95f4\u719f\u6089\u6211\u4eec\u7684\u8d21\u732e\u6307\u5357\uff0c\u5e76\u82b1\u4e9b\u65f6\u95f4\u4e86\u89e3\u6211\u4eec\u7684\u9879\u76ee\u6c9f\u901a\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u8d21\u732e\u8005\u6307\u5357\u548c\u4e2a\u522b\u9879\u76ee\u6587\u6863\u63d0\u4f9b\u6307\u5bfc\u3002\u5982\u679c\u60a8\u6709\u7591\u95ee\uff0c\u8bf7\u54a8\u8be2\u6211\u4eec\u3002 \u793e\u533a\u8d44\u6e90\u63d0\u4f9b\u6709\u5173\u6211\u4eec\u5e38\u7528\u901a\u4fe1\u65b9\u6cd5\u7684\u4fe1\u606f\u3002 \u6211\u4eec\u975e\u5e38\u9ad8\u5174\u60a8\u80fd\u4f5c\u4e3a\u8d21\u732e\u8005\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u53d1\u73b0\u60a8\u5bf9\u9879\u76ee\u7684\u5f71\u54cd\u3002\u611f\u8c22\u60a8\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u5174\u8da3\uff0c\u60f3\u6cd5\u548c\u6280\u80fd\u3002","title":"\u8d21\u732e\u8005\u6307\u5357"},{"location":"3.Documentation/Contributor/#_1","text":"\u5f00\u53d1\u8005\u6307\u5357 IPython \u5f00\u53d1\u6307\u5357\uff08\u6765\u6e90\uff1a\u65e7\u7684 IPython wiki\uff09 \u6587\u6863\u6307\u5357 \u901a\u8baf\u6307\u5357 \u65e0\u8bba\u60a8\u662f Project Jupyter \u5b50\u9879\u76ee\u8fd8\u662f IPython \u7684\u65b0\u6210\u5458\uff0c\u56de\u5f52\u8005\u6216\u5f53\u524d\u8d21\u732e\u8005\uff0c\u6211\u4eec\u90fd\u6b22\u8fce\u60a8\u3002 Jupyter \u9879\u76ee\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u7a33\u6b65\u589e\u957f\uff0c\u5f88\u9ad8\u5174\u770b\u5230\u4eba\u4eec\u4f7f\u7528\u8fd9\u4e9b\u9879\u76ee\u7684\u65b9\u5f0f\u5f88\u591a\u3002 \u7531\u4e8e\u8fd9\u79cd\u5feb\u901f\u6269\u5c55\uff0c\u6211\u4eec\u7684\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u6b63\u5728\u5e73\u8861\u8bb8\u591a\u9700\u6c42\uff0c\u9700\u6c42\u548c\u8d44\u6e90\u3002 \u6211\u4eec\u8981\u6c42\u8d21\u732e\u8005\u82b1\u4e9b\u65f6\u95f4\u719f\u6089\u6211\u4eec\u7684\u8d21\u732e\u6307\u5357\uff0c\u5e76\u82b1\u4e9b\u65f6\u95f4\u4e86\u89e3\u6211\u4eec\u7684\u9879\u76ee\u6c9f\u901a\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u8d21\u732e\u8005\u6307\u5357\u548c\u4e2a\u522b\u9879\u76ee\u6587\u6863\u63d0\u4f9b\u6307\u5bfc\u3002\u5982\u679c\u60a8\u6709\u7591\u95ee\uff0c\u8bf7\u54a8\u8be2\u6211\u4eec\u3002 \u793e\u533a\u8d44\u6e90\u63d0\u4f9b\u6709\u5173\u6211\u4eec\u5e38\u7528\u901a\u4fe1\u65b9\u6cd5\u7684\u4fe1\u606f\u3002 \u6211\u4eec\u975e\u5e38\u9ad8\u5174\u60a8\u80fd\u4f5c\u4e3a\u8d21\u732e\u8005\uff0c\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u53d1\u73b0\u60a8\u5bf9\u9879\u76ee\u7684\u5f71\u54cd\u3002\u611f\u8c22\u60a8\u4e0e\u6211\u4eec\u5206\u4eab\u60a8\u7684\u5174\u8da3\uff0c\u60f3\u6cd5\u548c\u6280\u80fd\u3002","title":"\u8d21\u732e\u8005\u6307\u5357"},{"location":"3.Documentation/Gallery/","text":"\u753b\u5eca \u00b6 \u8fd9\u4e2a\u9875\u9762\u662f\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684 Jupyter / IPython \u7b14\u8bb0\u672c\u7684\u7cbe\u9009\u96c6\u5408\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u4f46\u8bf7\u5c1d\u8bd5\u4ec5\u5305\u542b\u6307\u5411\u5305\u542b\u6709\u8da3\u89c6\u89c9\u6216\u6280\u672f\u5185\u5bb9\u7684\u7b14\u8bb0\u672c\u7684\u94fe\u63a5;\u8fd9\u5e94\u8be5*\u4e0d\u4ec5\u4ec5\u662f\u5728\u6bcf\u4e2a ipynb \u6587\u4ef6\u4e0a\u8f6c\u50a8 Google \u641c\u7d22\u3002 \u91cd\u8981\u8d21\u732e\u8bf4\u660e: \u5982\u679c\u60a8\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u8bf7\u786e\u4fdd\u5bf9\u4e8e\u60a8\u94fe\u63a5\u5230\u7684\u4efb\u4f55\u7b14\u8bb0\u672c\uff0c\u94fe\u63a5\u662f\u4f7f\u7528 nbviewer \u800c\u4e0d\u662f\u539f\u59cb\u6587\u4ef6\u7684\u6e32\u67d3\u7248\u672c\u3002 \u53ea\u9700\u5c06\u7b14\u8bb0\u672c URL \u7c98\u8d34\u5230 nbviewer \u6846\u4e2d\uff0c\u7136\u540e\u590d\u5236\u6e32\u67d3\u7248\u672c\u7684\u7ed3\u679c URL \u5373\u53ef\u3002 \u8fd9\u5c06\u4f7f\u8bbf\u95ee\u8005\u66f4\u5bb9\u6613\u7acb\u5373\u8bbf\u95ee\u65b0\u5185\u5bb9\u3002 \u8bf7\u6ce8\u610f\uff0c Matt Davis \u5df2\u7ecf\u65b9\u4fbf\u5730\u7f16\u5199\u4e86\u4e00\u7ec4 bookmarklets\u548c\u6269\u5c55 \uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u952e\u5f0f\u5185\u5bb9\uff0c\u5c06Notebook URL\u52a0\u8f7d\u5230\u60a8\u9009\u62e9\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u76f4\u63a5\u6253\u5f00nbviewer\u3002 \u5173\u4e8e\u4e3b\u9898\u7684\u6574\u672c\u4e66\u7c4d\u6216\u5176\u4ed6\u5927\u578b\u7b14\u8bb0\u672c\u96c6\u5408 \u00b6 \u5165\u95e8\u6559\u7a0b \u00b6 First things first, how to run code in the notebook . There is also a general collection of notebooks from IPython. Another useful one from this collection is an explanation of our rich display system . A great matplotlib tutorial , part of the fantastic Lectures on Scientific Computing with Python by J.R. Johansson . The code of the IPython mini-book by C. Rossant, introducing IPython, NumPy, SciPy, Pandas and matplotlib for interactive computing and data visualization. Python Tutorial by Rajath Kumar M P \u7f16\u7a0b\u4e0e\u8ba1\u7b97\u673a\u79d1\u5b66 \u00b6 Automata and Computability using Jupyter , an entire course, based on forthcoming book published by Taylor and Francis; book title: \"Automata and Computability: Programmer's Perspective\", by Ganesh Gopalakrishnan, Professor, School of Computing, University of Utah, Salt Lake City. [in English, has Youtube videos] Introduction to Programming (using Python) , an entire introductory Python course written by Eric Matthes . This post explains the educational context in an Alaskan high school where Eric is a teacher. Numeric Computing is Fun A series of notebooks created to help educate aspiring computer programmers and data scientists of all ages with no previous programming experience. Python for Developers , a complete book on Python programming by Ricardo Duarte . Note the book also exists in Portuguese . CS1001.py - Extended Introduction to Computer Science . Recitations from Tel-Aviv University introductory course to computer science, assembled as IPython notebooks by Yoav Ram . Exploratory Computing with Python , a set of 15 Notebooks that cover exploratory computing, data analysis, and visualization. No prior programming knowledge required. Each Notebook includes a number of exercises (with answers) that should take less than 4 hours to complete. Developed by Mark Bakker for undergraduate engineering students at the Delft University of Technology. Understanding evolutionary strategies and covariance matrix adaptation , from the Advanced Evolutionary Computation: Theory and Practice course by Luis Mart\u00ed . Code Katas in Python , a collection of algorithmic and data structure exercises covering search and sorting algorithms, stacks, queues, linked lists, graphs, backtracking and greedy problems. Jupyter notebook activities for Part IA of the computing course (Michaelmas Term) in the Engineering Tripos at University of Cambridge , by Garth Wells . Introduction to Python for Computational Science and Engineering ( Hans Fangohr ): Textbook for beginners, broken into one Jupyter Notebook per chapter. Can be executed and interacted with online using Binder. \u7edf\u8ba1\u5b66\uff0c\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u79d1\u5b66 \u00b6 An introductory notebook on uncertainty quantification and sensitivity analysis developed for the Workshop On Uncertainty Quantification And Sensitivity Analysis For Cardiovascular Modeling by Leif Rune Hellevik , Vinzenz Eck and Jacob T. Sturdy. Python Data Science Handbook Supplemental Materials , a collection of notebooks by Jake VanderPlas to accompany the book. \"ISP\": Introduction to Statistics with Python , a collection of notebooks accompanying the book of the same name , by Thomas Haslwanter . Notebooks for the exercises in Andrew Ng's online ML course, Spark and TensorFlow , as well as extra material on other tools from the scipy stack, by John Wittenauer . AM207: Monte Carlo Methods, Stochastic Optimization : a complete course by Verena Kaynig-Fittkau and Pavlos Protopapas from Harvard, with all lecture materials and homework sets as notebooks. An introduction to Bayesian inference , this is just chapter 1 in an ongoing book titled Probabilistic Programming and Bayesian Methods for Hackers Using Python and PyMC , by Cameron Davidson-Pilon . Doing Bayesian Data Analysis : Python/PyMC3 code for a selection of models and figures from the book 'Doing Bayesian Data Analysis: A Tutorial with R, JAGS, and Stan' , Second Edition, by John Kruschke (2015). Learn Data Science , an entire self-directed course by Nitin Borwankar . IPython Cookbook by Cyrille Rossant , a comprehensive guide to Python for Data Science. The code of the 100 recipes is available on the GitHub repository . An introduction to machine learning with Python and scikit-learn ( repo and overview ) by Hannes Schulz and Andreas Mueller . A progressive collection notebooks of the Machine Learning course by the University of Turin (with exercises) . Clustering and Regression , part of the UC Berkeley 2014 Introduction to Data Science course taught by Michael Franklin . Neural Networks , part of a collection on machine learning by Aaron Masino . An introduction to Pandas , part of an 11-lesson tutorial on Pandas , by Hern\u00e1n Rojas . Data Science and Big Data with Python by Steve Phelps . The Statsmodels Project has two excellent collections of examples: in their official documentation and extra ones in their wiki . Too many there to directly duplicate here, but they provide great learning materials on statistical modeling with Python. Machine Learning with the Shogun Toolbox . This is a complete service that includes a ready-to-run IPython instance with a collection of notebooks illustrating the use of the Shogun Toolbox . Just log in and start running the examples. Python for Data Analysis , an introductory collection from the CU Boulder Research Computing Group . The Kaggle bulldozers competition example , one of a set on tutorials on exploratory data analysis with the copper toolkit by Daniel Rodr\u00edguez / Understanding model reliability , part of a complete course on statistics and data analysis for psychologists by Michael Waskom . Graphical Representations of Linear Models , an illustration of the Seaborn statistical visualization library , that also includes Visualizing distributions of data and Representing variability in timeseries plots . By Michael Waskom . Desperately Seeking Silver , one of the homework sets for Harvard's CS 109 Data Science course . The classic 'An Introduction to Statistical Learning with Applications in R' by James, Witten, Hastie, Tibshirani (2013), has not one but two collections of notebooks to accompany the book with Python (instead of the book's default R examples). One by Jordi Warmenhoven and one by Matt Caudill . Python Notebooks for StatLearning Exercises , Python implementations of the R labs for the StatLearning: Statistical Learning online course from Stanford University taught by Profs Trevor Hastie and Rob Tibshirani. Applied Predictive Modeling with Python , Python implementations of the examples (originally written in R) from a famous introductory book, Applied Predictive Modeling , by Max Kuhn and Kjell Johnson. A collection of four courses in foundations of data science, algorithms and databases from multiple faculty at Columbia University's Lede Program . SciPy and OpenCV as an interactive computing environment for computer vision by Thiago Santos , a tutorial presented at SIBGRAPI 2014 . Kalman and Bayesian Filters in Python , by Roger Labbe . Adaboost for digit classification , by Shashwat Shukla . A complete implementation of Adaboost in Python, with code for digit recognition. An example machine learning notebook , by Randal. S. Olson , part of a collection in Data Analysis and Machine Learning . Pandas .head() to .tail() , an in-depth tutorial on Pandas by Tom Augspurger . Apache SINGA tutorial . A Python tutorial for deep learning with SINGA. Data Science Notebooks , a frequently updated collection of notebooks on statistical inference, data analysis, visualization and machine learning, by Donne Martin . ETL with Python , a tutorial for ETL (Extract, Transfer and Load) using python petl package , loading to MySQL and working with csv files by Dima Goldenberg . \u6570\u5b66\uff0c\u7269\u7406\uff0c\u5316\u5b66\uff0c\u751f\u7269\u5b66 \u00b6 A single-atom laser model . This is one of a complete set of lectures on quantum mechanics and quantum optics using QuTiP by J.R. Johansson . 2-d rigid-body transformations . This is part of Scientific Computing in Biomechanics and Motor Control , a complete collection of notebooks by Marcos Duarte . Astrophysical simulations and analysis with yt : a collection of example notebooks on using various codes that yt interfaces with: Enzo , Gadget , RAMSES , PKDGrav and Gasoline . Note: the yt site currently throws an SSL warning, they seem to have an outdated or self-signed certificate. Working with Reactions , part of a set of tutorials on cheminformatics and machine learning with the rdkit project , by Greg Landrum. CFD Python: 12 steps to Navier-Stokes . A complete set of lectures on Computational Fluid Dynamics, from 1-d linear waves to full 2-d Navier-Stokes, by Lorena Barba . Pytherm - Applied Thermodynamics . Lectures on applied thermodynamics using Python and the SciPy ecosystem, by ATOMS . AeroPython: Aerodynamics-Hydrodynamics with Python , a complete course taught at George Washington University by Lorena Barba . Practical Numerical Methods with Python , a collection of learning modules (each consisting of several IPython Notebooks) for a course in numerical differential equations taught at George Washington University by Lorena Barba . Also offered as a \"massive, open online course\" (MOOC) on the GW SEAS Open edX platform. pyuvvis: tools for explorative spectroscopy , spectroscopy library built for integration ipython notebooks, matplotlib and pandas. HyperPython: a practical introduction to the solution of hyperbolic conservation laws , a course by David Ketcheson . An Introduction to Applied Bioinformatics : Interactive lessons in bioinformatics, by Greg Caporaso . Colour science computations with colour , a Python package implementing a comprehensive number of colour theory transformations and algorithms supported by a dedicated collection of IPython Notebooks . More colour science related IPython Notebooks are available on colour-science.org . The notebooks from the Book Bioinformatics with Python Cookbook , covering several fields like Next-Generation Sequencing, Population Genetics, Phylogenetics, Genomics, Proteomics and Geo-referenced information. Learning Population Genetics in an RNA world is an interactive notebook that explains basic population genetics tools and techniques by building an in silico evolutionary model of RNA molecules. An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study . This notebook fully reproduces the research published in this paper . The notebook uses mostly python but includes some bash and R as well and is relevant for researchers in bioinformatics and public health. Lung Cancer Post-Translational Modification and Gene Expression Regulation . This Python notebook uses the Jupyter-widget Clustergrammer-Widget to visualize hierarchical clustering of gene expression and post-translational modification data from 37 lung cancer cell lines as an interactive heatmap. The notebook is part of the research project from this paper . Materials Science in Python using pymatgen . A series of python notebooks using the pymatgen package and materials project API for materials science. \u5730\u7403\u79d1\u5b66\u548c\u5730\u7406\u7a7a\u95f4\u6570\u636e \u00b6 EarthPy , a collection of IPython notebooks with a focus on Earth Sciences, from whale tracks to the flow of the Amazon . Python for Geosciences , a tutorial series aimed at the Earth Sciences community, by Nikolay Koldunov . Find graffiti close to NY subway entrances , one of a rich collection of notebooks on large-scale data analysis , by Roy Hyunjin Han . Logistic models of well switching in Bangladesh , part of the \"Will it Python\" blog series ( repo ) on Machine Learning and data analysis in Python. By Carl Vogel. Estimated likelihood of observing a large earthquake on a continental low\u2010angle normal fault and implications for low\u2010angle normal fault activity , an executable version of a paper by Richard Styron and Eric Hetland published in Geophysical Research Letters , on earthquake probabilities. python4oceanographers , a blog demonstrating analyses in physical oceanography from resource-demanding numerical computations with functions in compiled languages to specialized tidal analysis to visualization of various geo data using fancy things like interactive maps . Machinalis has a public repo with material support for geospatial-data processing related blog posts. It includes notebooks about Object Based Image Analysis and irrigation circles detection . seismo-live is a collection of live Jupyter notebooks for seismology. It includes a fairly large number of notebooks on how to solve the acoustic and elastic wave equation with various different numerical methods. Additionally it contains notebooks with an extensive introduction to data handling and signal processing in seismology, and notebooks tackling ambient seismic noise, rotational and glacial seismology, and more. Geo-Python is an introduction to programming in Python for Bachelors and Masters students in geo-fields (geology, geophysics, geography) taught by members of the Department of Geosciences and Geography at University of Helsinki, Finland . Course lessons and exercises are based on Jupyter notebooks and open for use by any interested person. \u8bed\u8a00\u5b66\u4e0e\u6587\u672c\u6316\u6398 \u00b6 Workshop on text analysis by Neal Caren . Detecting Algorithmically Generated Domains , part of the Data Hacking collection on security-oriented data analysis with IPython & friends. Mining the Social Web (3rd Edition) . A complete collection of notebooks accompanying Matthew Russell and Mikhail Klassen's book by O'Reilly. \u4fe1\u53f7\u5904\u7406 \u00b6 Sound Analysis with the Fourier Transform . A set of IPython Notebooks by Caleb Madrigal to explain what the Fourier Transform is and how to use it for basic audio processing applications. An introduction to Compressed Sensing , part of Python for Signal Processing : an entire book (and blog ) on the subject by Jose Unpingco. \u00e1dasd Kalman and Bayesian Filters in Python . A textbook and accompanying filtering library on the topic of Kalman filtering and other related Bayesian filtering techniques. Classify human movements using Dynamic Time Warping & K Nearest Neighbors: Signals from a smart phone gyroscope and accelerometer are used to classify if the person is running, walking, sitting standing etc. This IPython notebook contains a python implementation of DTW and KNN algorithms along with explanations and a practical application. Digital Signal Processing A collection of notebooks that accompanies a masters course on the topic. An introduction to openCV An introduction course into using openCV for computer vision in python \u5de5\u7a0b\u6559\u80b2 \u00b6 Introduction to Chemical Engineering Analysis by Jeff Kantor . A collection of IPython notebooks illustrating topics in introductory chemical engineering analysis, including stoichiometry, generation-consumption analysis, mass and energy balances. Sensors and Actuators by Andres Marrugo . A collection of Jupyter notebooks in the form of lecture notes and engineering calculations for the course IMTR 1713 Sensors and Actuators taught at the Universidad Tecnol\u00f3gica de Bol\u00edvar . \u4f7f\u7528 SciPy Stack \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u548c\u6570\u636e\u5206\u6790 \u00b6 \u79d1\u5b66\u8ba1\u7b97\u7684\u4e00\u822c\u4e3b\u9898 \u00b6 Algorithms in IPython notebooks , by Sebastian Raschka Comparing the performance of Python compilers - Cython vs. Numba vs. Parakeet , by Sebastian Raschka A Crash Course in Python for Scientists , by Sandia's Rick Muller . A gentle introduction to scientific programming in Python, biased towards biologists , by Mickey Atwal, Cold Spring Harbor Laboratory . Python for Data Science , a self-contained mini-course with exercises, by Joe McCarthy . First few lectures of the UW/Coursera course on Data Analysis . ( Repo ) by Chris Fonnesbeck. CythonGSL: a Cython interface for the GNU Scientific Library (GSL) ( Project repo , by Thomas Wiecki. Introduction to numerical computing with numpy by Steve Phelps . Using Numba to speed up numerical codes . And another Numba example: self-organizing maps . Numpy performance tricks , and blog post , by Cyrille Rossant . IPython Parallel Push/Execute/Pull Demo by Justin Riley. Understanding the design of the R \"formula\" objects by Matthew Brett. Comparing different approaches to evolutionary simulations . Also available here to better visualization. The notebook was converted to a HTML presentation using an old nbconvert with the first developing implementation of reveal converter. By Yoav Ram. The Traveling Salesperson Problem by Peter Norvig . A git tutorial targeted at scientists by Fernando Perez. Running MATLAB in an IPython Notebook , using pymatbridge . Interactive Curve-Fitting The lmfit package provides a widget-based interface to the curve-fitting algorithms in SciPy. A visual guide to the Python Spark API for distributed computing by Jeff Thompson A tutorial on Map-Reduce programming with Apache Spark and Python by Steve Phelps . CodeCombat gridmancer solver by Arn-O . This notebook explains how to improve a recursive tree search with an heuristic function and to find the minimum solution to the gridmancer. \u793e\u4ea4\u6570\u636e \u00b6 Survival Analysis , an illustration of the lifelines library , by Cam Davidson Pilon . A reconstruction of Nate Silver's 538 model for the 2012 US Presidential Election , by Skipper Seabold (complete repo ). Data about the Sandy Hook massacre in Newtown, Conneticut , which accompanies a more detailed blog post on the subject . Here are the notebook and accompanying data . By Brian Keegan. More on gun violence analysis with Wikipedia data . An analysis of the Gaza-Israel 2012 crisis . Ranking NFL Teams . The full repo also includes an explanatory slideshow. By Sean Taylor. Automated processing of news media and generation of associated imagery . An analysis of national school standardized test data in Colombia using Pandas (in Spanish). By Javier Moreno . Getting started with GDELT , by David Masad . GDELT is a dataset containing more than 200-million geolocated events with global coverage for 1979 to the present. Another GDELT example from David, that nicely integrates mapping visualizations . Titanic passengers, coal mining disasters, and vessel speed changes , by Christopher Fonnesbeck A geographic analysis of Indonesian conflicts in 2012 with GDELT, by herrfz . Bioinformatic Approaches to the Computation of Poetic Meter , by A. Sean Pue , C. Titus Brown and Tracy Teal . Analyzing the V\u00e9lib dataset from Paris , by Cyrille Rossant (V\u00e9lib is Paris' bicycle-sharing program ). Using Python to see how the Times writes about men and women , by Neal Caren . Exploring graph properties of the Twitter stream with twython and NetworkX , by F. Perez (complete gist repo with utilities here .) Kaggle Competition: Titanic Machine Learning from Disaster . By Andrew Conti . How clean are San Francisco's restaurants? , a data science tutorial that accompanies a blog post from Zipfian Academy . NYT gender wage gap and US crime by state . Predicting usage of the subway system in NYC , a final project for the Udacity Intro to Data Science Course, by Asim Ihsan . An exploratory statistical analysis of the 2014 World Cup Final , by Ricardo Tavares . Part of a notebook collection on football (aka soccer) analysis . San Francisco's Drug Geography , a GIS analysis of public crime data in SF, by Lance Martin . Geographic Data Science is an entire course by Dani Arribas-Bel to learn to access, munge, and analyse spatial data on social phenomena. Analysis and visualization of a public OKCupid profile dataset using Python and Pandas by Alessandro Giusti includes many colorful data visualizations. \u5fc3\u7406\u5b66\u548c\u795e\u7ecf\u79d1\u5b66 \u00b6 Cue Combination with Neural Populations by Will Adler . Intuition and simulation for the theory (Ma et al. , 2006) that through probabilistic population codes, neurons can perform optimal cue combination with simple linear operations. Demonstrates that variance in cortical activity, rather than impairing sensory systems, is an adaptive mechanism to encode uncertainty in sensory measurements. Modeling psychophysical data with non-linear functions by Ariel Rokem. Visualizing mathematical models of brain cell connections . The effect of convolution of different receptive field functions and natural images is examined. Python for Vision Research . A three-day crash course for vision researchers in programming with Python, building experiments with PsychoPy and psychopy_ext , learning the fMRI multi-voxel pattern analysis with PyMVPA , and understading image processing in Python. Loading and visualizing fMRI data , part of the Functional connectivity with NiLearn course by Ga\u00ebl Varoquaux . \u673a\u5668\u5b66\u4e60\uff0c\u7edf\u8ba1\u548c\u6982\u7387 \u00b6 A tutorial introduction to machine learning with sklearn , an IPython-based slide deck by Andreas Mueller . Introduction to Machine Learning in Python with scikit-learn by Cyrille Rossant , a free recipe from the IPython Cookbook , a comprehensive guide to Python for Data Science. An introduction to Predictive Modeling in Python , by Olivier Grisel . Face Recognition on a subset of the Labeled Faces in the Wild dataset , by Olivier Grisel . An Introduction to Bayesian Methods for Multilevel Modeling , by Chris Fonnesbeck . Introduction to Bayesian Networks by Kui Tang Bayesian data analysis with PyMC3 by Thomas Wiecki . A collection of examples for solving pattern classification problems , by Sebastian Raschka . Introduction to Linear Regression using Python by Kevin Markham Machine learning in Python , a series based on Andrew Ng's Coursera class on machine learning. Part of a larger collection of data science notebooks by John Wittenauer . Probability, Paradox, and the Reasonable Person Principle , by Peter Norvig. How Likely Would You Give A Five-Star Review on Yelp? -- Getting Your Hands Dirty with scikit-learn , by Xun Tang . Complimentary slides . Geodemographic Segmentation Model , by Filipa Rodrigues \u7269\u7406\uff0c\u5316\u5b66\u548c\u751f\u7269\u5b66 \u00b6 Writing A Genome Assembler with blasr and (I)Python , by Jason Chin . Multibody dynamics and control with Python and the notebook file by Jason K. Moore. Manipulation and display of chemical structures , by Greg Landrum , using rdkit. The sound of Hydrogen , visualizing and listening to the quantum-mechanical spectrum of Hydrogen. By Matthias Bussonnier . Particle physics at the Large Hadron Collider (LHC): using ROOT in an LHCb masterclass : Notebook 1 and Notebook 2 notebooks by Alexander Mazurov and Andrey Ustyuzhanin at CERN. A Reaction-Diffusion Equation Solver in Python with Numpy , a demonstration of how IPython notebooks can be used to discuss both the theory and implementation of numerical algorithms on one page, by Georg Walther . Comparing different approaches to evolutionary simulations . Also available here to better visualization. The notebook was converted to a HTML presentation using an old nbconvert with the first developing implementation of reveal converter. By Yoav Ram. \u7ecf\u6d4e\u4e0e\u91d1\u878d \u00b6 Replication of the highly-contentious analysis of economic growth by Reinhart and Rogoff , by Vincent Arel-Bundock , full repo here . This is based on the widely-publicized critique of the original analysis done by Herndon, Ash, and Pollin . fecon235 for Financial Economics series of notebooks which examines time-series data for economics and finance. Easy API to freely access data from the Federal Reserve, SEC, CFTC, stock and futures exchanges. Thus research from older notebooks can be replicated, and updated using the most current data. For example, this notebook forecasts likely Fed policy for setting the Fed Funds rate , but market sentiment across major asset classes is observable from the CFTC Commitment of Traders Report . Major economics indicators are renormalized: for example, various measures of inflation , optionally with the forward-looking break-even rates derived from U.S. Treasury bonds. Other notebooks examine international markets: especially, gold and foreign exchange. Fixed Income: A Structured Bond- Interactive scenarios , Sequential repayment of a bond using interactive widgets and Python in Jupyter, by Mats Gustavsson . \u5730\u7403\u79d1\u5b66\u548c\u5730\u7406\u7a7a\u95f4\u6570\u636e \u00b6 Exploring seafloor habitats: geographic analysis using IPython Notebook with GRASS & R . This embeds a slideshow and a Web Spinning Globe (Cesium) in the notebook. By Massimo Di Stefano. Geo-Spatial Data with IPython . Tutorial by Kelsey Jordahl from SciPy2013. \u6570\u636e\u53ef\u89c6\u5316\u548c\u7ed8\u56fe \u00b6 Plotting pitfalls : common problems when plotting large datasets, and how to avoid them. By James A. Bednar. US Census data and NYC Taxi data visualized using datashader . A Notebook with an interactive Hans Rosling Gapminder bubble chart from Plotly . Data and visualization integration via web based resources . Using NetCDF, Matplotlib, IPython Parallel and ffmpeg to generate video animation from time series of gridded data. By Massimo Di Stefano. 21 Interactive, D3 Plots from matplotlib, ggplot for Python, prettyplotlib, Stack Overflow, and seaborn . Visualizing complex-valued functions with Matplotlib and Mayavi , by Emilia Petrisor . bqplot is a d3-based interactive visualization library built entirely on top of that ipywidgets infrastructure. Checkout the pythonic recreation of Hans Rosling's Wealth of Nations . A D3 Viewer for Matplotlib Visualizations , different from above by not depending on Plot.ly account. Bokeh is an interactive web visualization library for Python (and other languages). It provides d3-like novel graphics, over large datasets, all without requiring any knowledge of Javascript. It also has a Matplotlib compatibility layer. HoloViews lets you construct visualizations very concisely in the notebook. Winner of the 2014 E. Tufte Slope Graphs contest , by Pascal Schetelat . The original contest info on Tufte's site . matta, d3.js-based visualizations in the IPython Notebook , by Eduardo Graells-Garrido . Clustergrammer Interactive Heatmap and DataFrame Viewer This Python notebook shows a simple example of how to visualize a matrix file and Pandas DataFrame as an interactive heatmap (built using D3.js) using the Jupyter Widget Clustergrammer (see paper ). \u6570\u5b66 \u00b6 Linear algebra with Cython . A tutorial that styles the notebook differently to show that you can produce high-quality typography online with the Notebook. By Carl Vogel. Exploring how smooth-looking functions can have very surprising derivatives even at low orders , combining SymPy and matplotlib. By Javier Moreno . A Collection of Applied Mathematics and Machine Learning Tutorials (in Turkish). By Burak Bayramli. Function minimization with iminuit , an introductory companion to their hard core tutorial . By the iminuit project . The Discrete Cosine Transform , a brief explanation and illustration of the math behind the DCT and its role in the JPEG image format, by Jim Mahoney . Chebfun in Python , a demo of PyChebfun , by Olivier Verdier . PyChebfun is a pure-python implementation of the celebrated Chebfun package by Battles and Trefethen . The Matrix Exponential , an introduction to the matrix exponential, its applications, and a list of available software in Python and MATLAB. By Sam Relton . Fractals, complex numbers, and your imagination , by Caleb Fangmeier . A SymPy tutorial , by Andrey Grozin . Introduction to Mathematics with Python , a collection of notebooks aimed at Mathematicians with no/little Python knowledge. Notebooks can be selected to serve as resources for a workshop. By Vince Knight . \u4fe1\u53f7\u548c\u58f0\u97f3\u5904\u7406 \u00b6 Simulation of Delta Sigma modulators in Python with deltasigma , Python port of of Richard Schreier's excellent MATLAB Delta Sigma Toolbox , by Giuseppe Venturini . Several demonstrative notebooks on the package README . PyOracle: Automatic analysis of musical structure , by Greg Surges . A Gallery of SciPy's Window Functions for quick visual inspection and comparison by Jaidev Deshpande Poisson Image Editing | Seamless Cloning by Dhruv Ilesh Shah is a notebook that achieves Seamless Image Cloning by employing the Poisson Solver in the iterative form. Blind Source Separation | Cocktail Party Problem by Dhruv Ilesh Shah & Shashwat Shukla is a notebook that achieves blind source separation, on audio signals in an attempt to approach the Cocktail Party Prblem. The problem has been tackled in two different methods - the FOBI and fastICA. \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u00b6 Python Programming for the Humanities by Folgert Karsdorp & Maarten van Gompel. News Categorization using Multinomial Naive Bayes by Andres Soto Villaverde. Using random cross-validation for news categorization by Andres Soto Villaverde. \u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u718a\u732b \u00b6 Note that in the 'collections' section above there are also pandas-related links, such as the one for an 11-lesson tutorial . A 10-minute whirlwind tour of pandas , this is the notebook accompanying a video presentation by Wes McKinney, author of Pandas and the Python for Data Analysis book. Time-series analysis with Pandas . Financial data analysis with Pandas . Clustering of smartphone sensor data for human activity detection using pandas and scipy , part of Coursera data analysis course, done in Python ( repo ). Log analysis with Pandas , part of a group presented at PyConCa 2012 by Taavi Burns. Analyzing and visualizing sun spot data with Pandas , by Josh Hemann . An enlightening discussion of how naive plotting choices subtly influence our interpretation of data. Advanced analysis of Apache logs , by Nikolay Koldunov . Statistical Data Analysis in Python , by Christopher Fonnesbeck , SciPy 2013. Companion videos 1 , 2 , 3 , 4 \u4e00\u822c Python \u7f16\u7a0b \u00b6 Learning to code with Python , part of an introduction to Python from the Waterloo Python users group . Introduction to Python for Data Scientists by Steve Phelps (part of a larger collection on Data Science and Big Data ). Python Descriptors Demystified , an in-depth discussion of the descriptor protocol in Python, by Chris Beaumont . A collection of not so obvious Python stuff you should know! , by Sebastian Raschka . Key differences between Python 2.7.x and Python 3.x , by Sebastian Raschka . A beginner's guide to Python's namespaces, scope resolution, and the LEGB rule , by Sebastian Raschka . Sorting CSV files using the Python csv module , by Sebastian Raschka . Python 3 OOP series by Leonardo Giordani : Part 1: Objects and types , Part 2: Classes and members , Part 3: Delegation - composition and inheritance , Part 4: Polymorphism , Part 5: Metaclasses , Part 6: Abstract Base Classes How to Aggregate Subscriber's Interest using the 3 methods: (1) Python Dictionary, (2) Apache PySpark - GroupBy Transformation, and (3) Apache PySpark - ReduceBy Transformation by Abbas Taher . \u4f7f\u7528 Python \u4ee5\u5916\u7684\u8bed\u8a00\u7684\u7b14\u8bb0\u672c \u00b6 These are notebooks that use one of the IPython kernels for other languages : Julia \u00b6 The IPython protocols to communicate between kernels and clients are language agnostic, and other programming language communities have started to build support for this protocol in their language. The Julia team has created IJulia , and these are some Julia notebooks: Fractals 3 ways , by Jeff Bezanson . The Design Impact of Multiple Dispatch , a detailed explanation of Julia's multiple dispatch design, by Stefan Karpinski . A tutorial on making interactive graphs with Plotly and Julia. Numerical tours in Julia Functional Geometry by Shashi Gowda JuliaOpt notebooks , a collection of optimization-related notebooks. Coursework using IJulia notebooks: M\u00e9todos Num\u00e9ricos Avanzados (2015-2) , Luis Benet and David P. Sanders M\u00e9todos Monte Carlo , David Sanders Linear Partial Differential Equations: Analysis and Numerics , Steven G. Johnson Julia tutorial for Computational Molecular Biology , Younhun Kim and Matthew Reyna Other collections of IJulia notebooks: Jiahao Chen Christoph Ortner Crossing Language Barriers with Julia, Scipy, and IPython , presented at EuroSciPy '14 by Steven G. Johnson. Haskell \u00b6 There exists a Haskell kernel for IPython in the IHaskell project . IHaskell Demo Notebook Homophone reduction , a solution to a cute problem involving treating English letters as generators of a large group. Gradient descent typeclass , a look at how arbitrary gradient descent algorithms can be represented with a typeclass. OCaml \u00b6 iocaml is an OCaml kernel for IPython H.261 Video Decoding in OCaml OCaml implementation of the 2048 game Ruby \u00b6 Similar to the Julia kernel there exists also a Ruby kernel for IPython. IRuby Demo Notebook SciRuby Notebooks The interactive plotting library Nyaplot has some case studies using IRuby: War expenditure per GDP Finding shape consensus among multiple geometrical polygons Perl \u00b6 An example showcasing full use of the display protocol with the IPerl kernel. F# \u00b6 F# for Jupyter Notebooks C# \u00b6 Xamarin Workbooks Create a rich C# workbook for Android, iOS, Mac, WPF, or Console, and get instant live results as you learn these APIs. Javascript \u00b6 Two IJavascript notebooks that demonstrate how to use D3 to do computations and send a SVG back and play with a virtual DOM \u5173\u4e8e\u4f7f\u7528 Notebook \u672c\u8eab\u505a\u5404\u79cd\u4e8b\u60c5\u7684\u5176\u4ed6\u4e3b\u9898 \u00b6 Blogging With IPython in Blogger , also available in blog post form , full repo here . By Fernando Perez. Blogging With IPython in Octopress , by Jake van der Plas and available as a blog post . Other notebooks by Jake contain many more great examples of doing interesting work with the scientific Python stack. Blogging With IPython in Nikola , also available in blog post form by Dami\u00e1n Avila. Custom CSS control of the notebook , this is part of a blog repo by Matthias Bussonnier. IPython display hookery: tools to help display visual output from various sources , a gist by @deeplook . Importing IPython Notebooks as Modules by Min RK . \u53ef\u91cd\u590d\u7684\u5b66\u672f\u51fa\u7248\u7269 \u00b6 This section contains academic papers that have been published in the peer-reviewed literature or pre-print sites such as the ArXiv that include one or more notebooks that enable (even if only partially) readers to reproduce the results of the publication. If you include a publication here, please link to the journal article as well as providing the nbviewer notebook link (and any other relevant resources associated with the paper). 1. Discovery of Gravitational Waves by the LIGO collaboration . That page, from the LIGO Open Science Center, contains multiple notebooks for various datasets corresponding to different events; this binder lets you run the code right away. More details on the GW150914 event as well as the original main Physical Review Letters paper, \"Observation of Gravitational Waves from a Binary Black Hole Merger\" . 2. Characterizing Strain Variation in Engineered E. coli Using a Multi-Omics-Based Workflow , by Brunk et al. 3. Predicting Coronal Mass Ejections Using Machine Learning Methods by Monica Bobra and Stathis Ilonidis (Astrophysical Journal, 2016). An IPython notebook , which reproduces all the results, has been permanently deposited in the Stanford Digital Repository . 4. The Paper of the Future by Alyssa Goodman et al. (Authorea Preprint, 2017). This article explains and shows with demonstrations how scholarly \"papers\" can morph into long-lasting rich records of scientific discourse, enriched with deep data and code linkages, interactive figures, audio, video, and commenting. It includes an interactive d3.js visualization and has an astronomical data figure with an IPYthon Notebook \"behind\" it. 5. Reply to 'Influence of cosmic ray variability on the monsoon rainfall and temperature': a false-positive in the field of solar-terrestrial research by Benjamin Laken , 2015. Reviewed article will appear in JASTP. The IPython notebook reproduces the full analysis and figures exactly as they appear in the article, and is available on Github: link via figshare . 6. An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study , by Zichen Wang and Avi Ma'ayan . (F1000Research 2016, 5:1574). An IPython notebook was used to perform the proposed RNA-Seq pipeline using public gene expression data of human cells after Zika virus infection. The computational pipeline is also version controlled and Dockerized available here . 7. The probability of improvement in Fisher's geometric model: a probabilistic approach , by Yoav Ram and Lilach Hadany . (Theoretical Population Biology, 2014). An IPython notebook , allowing figure reproduction, was deposited as a supplementry file . 8. Stress-induced mutagenesis and complex adaptation , by Yoav Ram and Lilach Hadany (Proceedings B, 2014). An IPython notebook , allowing figures reproduction, was deposited as a supplementry file . 9. Automatic segmentation of odor maps in the mouse olfactory bulb using regularized non-negative matrix factorization , by J. Soelter et al. (Neuroimage 2014, Open Access). The notebook allows to reproduce most figures from the paper and provides a deeper look at the data. The full code repository is also available. 10. Multi-tiered genomic analysis of head and neck cancer ties TP53 mutation to 3p loss, by A. Gross et al. (Nature Genetics 2014) . The full collection of notebooks to replicate the results . 11. Dog and human inflammatory bowel disease rely on overlapping yet distinct dysbiosis networks, by V\u00e1zquez-Baeza et al. (Nature microbiology 2016) . The full collection of notebooks to replicate the results . 12. powerlaw: a Python package for analysis of heavy-tailed distributions, by J. Alstott et al. . Notebook of examples in manuscript , ArXiv link and project repository . 13. Collaborative cloud-enabled tools allow rapid, reproducible biological insights, by B. Ragan-Kelley et al. . The main notebook , the full collection of related notebooks and the companion site with the Amazon AMI information for reproducing the full paper. 14. A Reference-Free Algorithm for Computational Normalization of Shotgun Sequencing Data, by C.T. Brown et al. . Full notebook , ArXiv link and project repository . 15. The kinematics of the Local Group in a cosmological context by J.E. Forero-Romero et al. . The Full notebook and also all the data in a github repo . 16. Warming Ocean Threatens Sea Life , an article in Scientific American backed by a notebook for its main plot . By Roberto de Almeida from MarinExplore . 17. Extrapolating Weak Selection in Evolutionary Games , by Wu, Garc\u00eda, Hauert and Traulsen. PLOS Comp Bio paper and Figshare link . 18. Using neural networks to estimate redshift distributions. An application to CFHTLenS by Christopher Bonnett paper (submitted to MNRAS) 1. Mechanisms for stable, robust, and adaptive development of orientation maps in the primary visual cortex by Jean-Luc R. Stevens, Judith S. Law, Jan Antolik, and James A. Bednar. Journal of Neuroscience, 33:15747-15766, 2013. Notebook1 , Notebook2 . 1. Accelerated Randomized Benchmarking , by Christopher Granade , Christopher Ferrie and D. G. Cory. New Journal of Physics 17 013042 (2015) , arXiv , GitHub repo . 1. Dynamics and associations of microbial community types across the human body , by Tao Ding & Patrick D. Schloss. Notebook replicating results . 1. Variations in submarine channel sinuosity as a function of latitude and slope , by Sylvester, Z., Pirmez, C., Cantelli, A., & Jobe, Z. R. 1. Frontoparietal representations of task context support the flexible control of goal directed cognition , by M.L. Waskom, D. Kumaran, A.M. Gordon, J. Rissman, & A.D. Wagner. Github repository | Main notebook 1. pyparty: Intuitive Particle Processing in Python , Adam Hughes Notebook to Generate the Published Figures | Also, check out the pyparty tutorial notebooks . 1. Indication of family-specific DNA methylation patterns in developing oysters , Claire E. Olson, Steven B. Roberts doi: http://dx.doi.org/10.1101/012831. Notebook to generate results in the paper . 1. Parallel Prefix Polymorphism Permits Parallelization, Presentation & Proof , Jiahao Chen and Alan Edelman , HPTCDL'14. Website and notebook 1. Transcriptome Sequencing Reveals Potential Mechanism of Cryptic 3\u2019 Splice Site Selection in SF3B1 -mutated Cancers by Christopher DeBoever et al. There are several notebooks to replicate results and make figures. 1. A Workflow for Characterizing Nanoparticle Monolayers for Biosensors: Machine Learning on Real and Artificial SEM Images , Adam Hughes, Zhaowen Liu, Maryam Raftari, Mark. E Reeves. Notebooks are linked in Table 1 in the text. 1. AtomPy: An Open Atomic Data Curation Environment for Astrophysical Applications , by C. Mendoza, J. Boswell, D. Ajoku, M. Bautista. 1. Visualizing 4-Dimensional Asteroids , in Scientific American (by Jake VanderPlas) 1. Challenges and opportunities in understanding microbial communities with metagenome assembly , accompanied by IPython Notebook tutorial , by Adina Howe and Patrick Chain. 1. Structure of a shear-line polar low (2016) by Sergeev, D. E. , Renfrew, I. A. , Spengler, T. and Dorling, S. R. Q.J.R. Meteorol. Soc. doi:10.1002/qj.2911. Accompanied by Notebooks to generate the published figures . 1. Detecting High-Order Epistasis in Nonlinear Genotype-Phenotype Maps by Zachary R. Sailer and Michael J. Harms published in Genetics , March 2017 . All figures can be reproduced by the set of notebooks in this Github repo . 1. Summary Analysis of the 2017 GitHub Open Source Survey by Stuart Geiger . Preprint in SocArXiv , June 2017. doi:10.17605/OSF.IO/ENRQ5. Paper is derived from a notebook converted to LaTeX with nbconvert. Notebook and materials at: OSF , GitHub , nbviewer 1. The weirdest SDSS galaxies: results from an outlier detection algorithm , by D. Baron and D. Poznanski. Notebooks to replicate . 1. Clustergrammer, a web-based heatmap visualization and analysis tool for high-dimensional biological data , by Nicolas Fernandez et al. Notebooks: Fig. 3 , Fig. 4 , Fig. 5 1. Sociology: An investigation of Social Class Inequalities in General Cognitive Ability in Two British Birth Cohorts. Preprint in SocArXiv, December 2017. doi: 10.17605/OSF.IO/SZXDM. Notebook and materials at: OSF , GitHub , nbviewer . 1. An on-chip architecture for self-homodyned nonclassical light , quant-ph ArXiV preprint, Nov 2016, by Fischer et al. A supporting notebook for all calculations included in the ArXiV submission. 1. A nested sampling code for targeted searches for continuous gravitational waves from pulsars , gr-qc ArXiV preprint, May 2017, by Pitkin et al. Complete repo with supporting notebooks and sources on GitHub. 1. HyperTools: A Python toolbox for visualizing and manipulating high-dimensional data , stat.OT ArXiV preprint by Heusser et al. A repo with companion notebooks is available, that links to the library itself, HyperTools . 1. Nonsinusoidal beta oscillations reflect cortical pathophysiology in Parkinson's disease , in Journal of Neuroscience by Cole et al. A repo with companion notebooks with all necessary data is available to reproduce all figures. 1. Cycle-by-cycle analysis of neural oscillations , in bioRxiv by Cole & Voytek. A repo with companion notebooks with all necessary data is available to reproduce all figures. This repo also links to the related useful library, neurodsp , which contains notebooks of tutorials. \u6570\u636e\u9a71\u52a8\u7684\u65b0\u95fb \u00b6 The Need for Openness in Data Journalism , by Brian Keegan . St. Louis County Segregation Analysis , analysis for the article The Ferguson Area Is Even More Segregated Than You Probably Guessed by Jeremy Singer-Vine . Size of thesis and dissertations in Quebec , by Jean-Hugues Roy (in French). \u5f02\u60f3\u5929\u5f00\u7684\u7b14\u8bb0\u672c \u00b6 XKCD-styled plots created with Matplotlib . Here is the blog post version with discussion. By Jake van der Plas. Van Gogh's Starry Night with ipythonblocks , part of Matt Davis' ipythonblocks . This is a teaching tool for use with the IPython notebook that provides visual elements to understand programming concepts. Conway's Game of Life . Interesting use of convolution operation to calculate the next state of game board, instead of obvious find neighbors and filter the board for next state. pynguins . Using jupyter notebook, python, and numpy to solve Board Game \"Penguins on Ice\". \"People plots\" , stick figures generated with matplotlib. Reveal converter mini-tutorial , also available in blog post form . Do you want to make static html/css slideshow straight from the IPython notebook? OK, now you can do it with the reveal converter (nbconvert). Demo by Dami\u00e1n Avila. Personal IPython Weight Notebook . Plot your loss of weight with prognosis and motivation features. Streaming Double Pendulum Simulation in IPython NB . Porque Charles Xavier debe cambiar a Cerebro por Python , a study in data and gender in the Marvel comics universe, by Mai Gim\u00e9nez and Angela Rivera . Functional Geometry: a deconstruction of the MC Escher woodcut Square Limit , an IJulia notebook by Shashi Gowda . Solving physical puzzles with a Jupyter Noteboook . \u5728\u91ce\u5916\u4f7f\u7528\u7684 IPython \u89c6\u9891 \u00b6 Of course the first thing you might try is searching for videos about IPython (1900 or so by last count on Youtube) but there are demonstrations of other applications using the power of IPython but are not mentioned is the descriptions. Below are a few such: Video on how to learn Python featuring IPython as the platform of choice for learning! This video shows IPython being used in the scikit-learn project He does not show IPython in use but his IPython sticker is clear for the entire video: Planning and Tending the Garden: The Future of Early Childhood Python Education Wes McKinney's speech on Python and data analysis features IPython as does his book Python for Data Analysis This video shows Plotly and IPython in use at a Montreal Python meetup. \u901a\u8fc7\u7b14\u8bb0\u672c\u8bbf\u95ee\u548c\u7f16\u7a0b IBM \u91cf\u5b50\u8ba1\u7b97\u673a \u00b6 Github notebook example (scroll down) illustrating how to use Qiskit and access the IBMQ quantum computers.","title":"\u753b\u5eca"},{"location":"3.Documentation/Gallery/#_1","text":"\u8fd9\u4e2a\u9875\u9762\u662f\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684 Jupyter / IPython \u7b14\u8bb0\u672c\u7684\u7cbe\u9009\u96c6\u5408\u3002 \u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u4f46\u8bf7\u5c1d\u8bd5\u4ec5\u5305\u542b\u6307\u5411\u5305\u542b\u6709\u8da3\u89c6\u89c9\u6216\u6280\u672f\u5185\u5bb9\u7684\u7b14\u8bb0\u672c\u7684\u94fe\u63a5;\u8fd9\u5e94\u8be5*\u4e0d\u4ec5\u4ec5\u662f\u5728\u6bcf\u4e2a ipynb \u6587\u4ef6\u4e0a\u8f6c\u50a8 Google \u641c\u7d22\u3002 \u91cd\u8981\u8d21\u732e\u8bf4\u660e: \u5982\u679c\u60a8\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u8bf7\u786e\u4fdd\u5bf9\u4e8e\u60a8\u94fe\u63a5\u5230\u7684\u4efb\u4f55\u7b14\u8bb0\u672c\uff0c\u94fe\u63a5\u662f\u4f7f\u7528 nbviewer \u800c\u4e0d\u662f\u539f\u59cb\u6587\u4ef6\u7684\u6e32\u67d3\u7248\u672c\u3002 \u53ea\u9700\u5c06\u7b14\u8bb0\u672c URL \u7c98\u8d34\u5230 nbviewer \u6846\u4e2d\uff0c\u7136\u540e\u590d\u5236\u6e32\u67d3\u7248\u672c\u7684\u7ed3\u679c URL \u5373\u53ef\u3002 \u8fd9\u5c06\u4f7f\u8bbf\u95ee\u8005\u66f4\u5bb9\u6613\u7acb\u5373\u8bbf\u95ee\u65b0\u5185\u5bb9\u3002 \u8bf7\u6ce8\u610f\uff0c Matt Davis \u5df2\u7ecf\u65b9\u4fbf\u5730\u7f16\u5199\u4e86\u4e00\u7ec4 bookmarklets\u548c\u6269\u5c55 \uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u952e\u5f0f\u5185\u5bb9\uff0c\u5c06Notebook URL\u52a0\u8f7d\u5230\u60a8\u9009\u62e9\u7684\u6d4f\u89c8\u5668\u4e2d\uff0c\u76f4\u63a5\u6253\u5f00nbviewer\u3002","title":"\u753b\u5eca"},{"location":"3.Documentation/Gallery/#_2","text":"","title":"\u5173\u4e8e\u4e3b\u9898\u7684\u6574\u672c\u4e66\u7c4d\u6216\u5176\u4ed6\u5927\u578b\u7b14\u8bb0\u672c\u96c6\u5408"},{"location":"3.Documentation/Gallery/#_3","text":"First things first, how to run code in the notebook . There is also a general collection of notebooks from IPython. Another useful one from this collection is an explanation of our rich display system . A great matplotlib tutorial , part of the fantastic Lectures on Scientific Computing with Python by J.R. Johansson . The code of the IPython mini-book by C. Rossant, introducing IPython, NumPy, SciPy, Pandas and matplotlib for interactive computing and data visualization. Python Tutorial by Rajath Kumar M P","title":"\u5165\u95e8\u6559\u7a0b"},{"location":"3.Documentation/Gallery/#_4","text":"Automata and Computability using Jupyter , an entire course, based on forthcoming book published by Taylor and Francis; book title: \"Automata and Computability: Programmer's Perspective\", by Ganesh Gopalakrishnan, Professor, School of Computing, University of Utah, Salt Lake City. [in English, has Youtube videos] Introduction to Programming (using Python) , an entire introductory Python course written by Eric Matthes . This post explains the educational context in an Alaskan high school where Eric is a teacher. Numeric Computing is Fun A series of notebooks created to help educate aspiring computer programmers and data scientists of all ages with no previous programming experience. Python for Developers , a complete book on Python programming by Ricardo Duarte . Note the book also exists in Portuguese . CS1001.py - Extended Introduction to Computer Science . Recitations from Tel-Aviv University introductory course to computer science, assembled as IPython notebooks by Yoav Ram . Exploratory Computing with Python , a set of 15 Notebooks that cover exploratory computing, data analysis, and visualization. No prior programming knowledge required. Each Notebook includes a number of exercises (with answers) that should take less than 4 hours to complete. Developed by Mark Bakker for undergraduate engineering students at the Delft University of Technology. Understanding evolutionary strategies and covariance matrix adaptation , from the Advanced Evolutionary Computation: Theory and Practice course by Luis Mart\u00ed . Code Katas in Python , a collection of algorithmic and data structure exercises covering search and sorting algorithms, stacks, queues, linked lists, graphs, backtracking and greedy problems. Jupyter notebook activities for Part IA of the computing course (Michaelmas Term) in the Engineering Tripos at University of Cambridge , by Garth Wells . Introduction to Python for Computational Science and Engineering ( Hans Fangohr ): Textbook for beginners, broken into one Jupyter Notebook per chapter. Can be executed and interacted with online using Binder.","title":"\u7f16\u7a0b\u4e0e\u8ba1\u7b97\u673a\u79d1\u5b66"},{"location":"3.Documentation/Gallery/#_5","text":"An introductory notebook on uncertainty quantification and sensitivity analysis developed for the Workshop On Uncertainty Quantification And Sensitivity Analysis For Cardiovascular Modeling by Leif Rune Hellevik , Vinzenz Eck and Jacob T. Sturdy. Python Data Science Handbook Supplemental Materials , a collection of notebooks by Jake VanderPlas to accompany the book. \"ISP\": Introduction to Statistics with Python , a collection of notebooks accompanying the book of the same name , by Thomas Haslwanter . Notebooks for the exercises in Andrew Ng's online ML course, Spark and TensorFlow , as well as extra material on other tools from the scipy stack, by John Wittenauer . AM207: Monte Carlo Methods, Stochastic Optimization : a complete course by Verena Kaynig-Fittkau and Pavlos Protopapas from Harvard, with all lecture materials and homework sets as notebooks. An introduction to Bayesian inference , this is just chapter 1 in an ongoing book titled Probabilistic Programming and Bayesian Methods for Hackers Using Python and PyMC , by Cameron Davidson-Pilon . Doing Bayesian Data Analysis : Python/PyMC3 code for a selection of models and figures from the book 'Doing Bayesian Data Analysis: A Tutorial with R, JAGS, and Stan' , Second Edition, by John Kruschke (2015). Learn Data Science , an entire self-directed course by Nitin Borwankar . IPython Cookbook by Cyrille Rossant , a comprehensive guide to Python for Data Science. The code of the 100 recipes is available on the GitHub repository . An introduction to machine learning with Python and scikit-learn ( repo and overview ) by Hannes Schulz and Andreas Mueller . A progressive collection notebooks of the Machine Learning course by the University of Turin (with exercises) . Clustering and Regression , part of the UC Berkeley 2014 Introduction to Data Science course taught by Michael Franklin . Neural Networks , part of a collection on machine learning by Aaron Masino . An introduction to Pandas , part of an 11-lesson tutorial on Pandas , by Hern\u00e1n Rojas . Data Science and Big Data with Python by Steve Phelps . The Statsmodels Project has two excellent collections of examples: in their official documentation and extra ones in their wiki . Too many there to directly duplicate here, but they provide great learning materials on statistical modeling with Python. Machine Learning with the Shogun Toolbox . This is a complete service that includes a ready-to-run IPython instance with a collection of notebooks illustrating the use of the Shogun Toolbox . Just log in and start running the examples. Python for Data Analysis , an introductory collection from the CU Boulder Research Computing Group . The Kaggle bulldozers competition example , one of a set on tutorials on exploratory data analysis with the copper toolkit by Daniel Rodr\u00edguez / Understanding model reliability , part of a complete course on statistics and data analysis for psychologists by Michael Waskom . Graphical Representations of Linear Models , an illustration of the Seaborn statistical visualization library , that also includes Visualizing distributions of data and Representing variability in timeseries plots . By Michael Waskom . Desperately Seeking Silver , one of the homework sets for Harvard's CS 109 Data Science course . The classic 'An Introduction to Statistical Learning with Applications in R' by James, Witten, Hastie, Tibshirani (2013), has not one but two collections of notebooks to accompany the book with Python (instead of the book's default R examples). One by Jordi Warmenhoven and one by Matt Caudill . Python Notebooks for StatLearning Exercises , Python implementations of the R labs for the StatLearning: Statistical Learning online course from Stanford University taught by Profs Trevor Hastie and Rob Tibshirani. Applied Predictive Modeling with Python , Python implementations of the examples (originally written in R) from a famous introductory book, Applied Predictive Modeling , by Max Kuhn and Kjell Johnson. A collection of four courses in foundations of data science, algorithms and databases from multiple faculty at Columbia University's Lede Program . SciPy and OpenCV as an interactive computing environment for computer vision by Thiago Santos , a tutorial presented at SIBGRAPI 2014 . Kalman and Bayesian Filters in Python , by Roger Labbe . Adaboost for digit classification , by Shashwat Shukla . A complete implementation of Adaboost in Python, with code for digit recognition. An example machine learning notebook , by Randal. S. Olson , part of a collection in Data Analysis and Machine Learning . Pandas .head() to .tail() , an in-depth tutorial on Pandas by Tom Augspurger . Apache SINGA tutorial . A Python tutorial for deep learning with SINGA. Data Science Notebooks , a frequently updated collection of notebooks on statistical inference, data analysis, visualization and machine learning, by Donne Martin . ETL with Python , a tutorial for ETL (Extract, Transfer and Load) using python petl package , loading to MySQL and working with csv files by Dima Goldenberg .","title":"\u7edf\u8ba1\u5b66\uff0c\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u79d1\u5b66"},{"location":"3.Documentation/Gallery/#_6","text":"A single-atom laser model . This is one of a complete set of lectures on quantum mechanics and quantum optics using QuTiP by J.R. Johansson . 2-d rigid-body transformations . This is part of Scientific Computing in Biomechanics and Motor Control , a complete collection of notebooks by Marcos Duarte . Astrophysical simulations and analysis with yt : a collection of example notebooks on using various codes that yt interfaces with: Enzo , Gadget , RAMSES , PKDGrav and Gasoline . Note: the yt site currently throws an SSL warning, they seem to have an outdated or self-signed certificate. Working with Reactions , part of a set of tutorials on cheminformatics and machine learning with the rdkit project , by Greg Landrum. CFD Python: 12 steps to Navier-Stokes . A complete set of lectures on Computational Fluid Dynamics, from 1-d linear waves to full 2-d Navier-Stokes, by Lorena Barba . Pytherm - Applied Thermodynamics . Lectures on applied thermodynamics using Python and the SciPy ecosystem, by ATOMS . AeroPython: Aerodynamics-Hydrodynamics with Python , a complete course taught at George Washington University by Lorena Barba . Practical Numerical Methods with Python , a collection of learning modules (each consisting of several IPython Notebooks) for a course in numerical differential equations taught at George Washington University by Lorena Barba . Also offered as a \"massive, open online course\" (MOOC) on the GW SEAS Open edX platform. pyuvvis: tools for explorative spectroscopy , spectroscopy library built for integration ipython notebooks, matplotlib and pandas. HyperPython: a practical introduction to the solution of hyperbolic conservation laws , a course by David Ketcheson . An Introduction to Applied Bioinformatics : Interactive lessons in bioinformatics, by Greg Caporaso . Colour science computations with colour , a Python package implementing a comprehensive number of colour theory transformations and algorithms supported by a dedicated collection of IPython Notebooks . More colour science related IPython Notebooks are available on colour-science.org . The notebooks from the Book Bioinformatics with Python Cookbook , covering several fields like Next-Generation Sequencing, Population Genetics, Phylogenetics, Genomics, Proteomics and Geo-referenced information. Learning Population Genetics in an RNA world is an interactive notebook that explains basic population genetics tools and techniques by building an in silico evolutionary model of RNA molecules. An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study . This notebook fully reproduces the research published in this paper . The notebook uses mostly python but includes some bash and R as well and is relevant for researchers in bioinformatics and public health. Lung Cancer Post-Translational Modification and Gene Expression Regulation . This Python notebook uses the Jupyter-widget Clustergrammer-Widget to visualize hierarchical clustering of gene expression and post-translational modification data from 37 lung cancer cell lines as an interactive heatmap. The notebook is part of the research project from this paper . Materials Science in Python using pymatgen . A series of python notebooks using the pymatgen package and materials project API for materials science.","title":"\u6570\u5b66\uff0c\u7269\u7406\uff0c\u5316\u5b66\uff0c\u751f\u7269\u5b66"},{"location":"3.Documentation/Gallery/#_7","text":"EarthPy , a collection of IPython notebooks with a focus on Earth Sciences, from whale tracks to the flow of the Amazon . Python for Geosciences , a tutorial series aimed at the Earth Sciences community, by Nikolay Koldunov . Find graffiti close to NY subway entrances , one of a rich collection of notebooks on large-scale data analysis , by Roy Hyunjin Han . Logistic models of well switching in Bangladesh , part of the \"Will it Python\" blog series ( repo ) on Machine Learning and data analysis in Python. By Carl Vogel. Estimated likelihood of observing a large earthquake on a continental low\u2010angle normal fault and implications for low\u2010angle normal fault activity , an executable version of a paper by Richard Styron and Eric Hetland published in Geophysical Research Letters , on earthquake probabilities. python4oceanographers , a blog demonstrating analyses in physical oceanography from resource-demanding numerical computations with functions in compiled languages to specialized tidal analysis to visualization of various geo data using fancy things like interactive maps . Machinalis has a public repo with material support for geospatial-data processing related blog posts. It includes notebooks about Object Based Image Analysis and irrigation circles detection . seismo-live is a collection of live Jupyter notebooks for seismology. It includes a fairly large number of notebooks on how to solve the acoustic and elastic wave equation with various different numerical methods. Additionally it contains notebooks with an extensive introduction to data handling and signal processing in seismology, and notebooks tackling ambient seismic noise, rotational and glacial seismology, and more. Geo-Python is an introduction to programming in Python for Bachelors and Masters students in geo-fields (geology, geophysics, geography) taught by members of the Department of Geosciences and Geography at University of Helsinki, Finland . Course lessons and exercises are based on Jupyter notebooks and open for use by any interested person.","title":"\u5730\u7403\u79d1\u5b66\u548c\u5730\u7406\u7a7a\u95f4\u6570\u636e"},{"location":"3.Documentation/Gallery/#_8","text":"Workshop on text analysis by Neal Caren . Detecting Algorithmically Generated Domains , part of the Data Hacking collection on security-oriented data analysis with IPython & friends. Mining the Social Web (3rd Edition) . A complete collection of notebooks accompanying Matthew Russell and Mikhail Klassen's book by O'Reilly.","title":"\u8bed\u8a00\u5b66\u4e0e\u6587\u672c\u6316\u6398"},{"location":"3.Documentation/Gallery/#_9","text":"Sound Analysis with the Fourier Transform . A set of IPython Notebooks by Caleb Madrigal to explain what the Fourier Transform is and how to use it for basic audio processing applications. An introduction to Compressed Sensing , part of Python for Signal Processing : an entire book (and blog ) on the subject by Jose Unpingco. \u00e1dasd Kalman and Bayesian Filters in Python . A textbook and accompanying filtering library on the topic of Kalman filtering and other related Bayesian filtering techniques. Classify human movements using Dynamic Time Warping & K Nearest Neighbors: Signals from a smart phone gyroscope and accelerometer are used to classify if the person is running, walking, sitting standing etc. This IPython notebook contains a python implementation of DTW and KNN algorithms along with explanations and a practical application. Digital Signal Processing A collection of notebooks that accompanies a masters course on the topic. An introduction to openCV An introduction course into using openCV for computer vision in python","title":"\u4fe1\u53f7\u5904\u7406"},{"location":"3.Documentation/Gallery/#_10","text":"Introduction to Chemical Engineering Analysis by Jeff Kantor . A collection of IPython notebooks illustrating topics in introductory chemical engineering analysis, including stoichiometry, generation-consumption analysis, mass and energy balances. Sensors and Actuators by Andres Marrugo . A collection of Jupyter notebooks in the form of lecture notes and engineering calculations for the course IMTR 1713 Sensors and Actuators taught at the Universidad Tecnol\u00f3gica de Bol\u00edvar .","title":"\u5de5\u7a0b\u6559\u80b2"},{"location":"3.Documentation/Gallery/#scipy-stack","text":"","title":"\u4f7f\u7528 SciPy Stack \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u548c\u6570\u636e\u5206\u6790"},{"location":"3.Documentation/Gallery/#_11","text":"Algorithms in IPython notebooks , by Sebastian Raschka Comparing the performance of Python compilers - Cython vs. Numba vs. Parakeet , by Sebastian Raschka A Crash Course in Python for Scientists , by Sandia's Rick Muller . A gentle introduction to scientific programming in Python, biased towards biologists , by Mickey Atwal, Cold Spring Harbor Laboratory . Python for Data Science , a self-contained mini-course with exercises, by Joe McCarthy . First few lectures of the UW/Coursera course on Data Analysis . ( Repo ) by Chris Fonnesbeck. CythonGSL: a Cython interface for the GNU Scientific Library (GSL) ( Project repo , by Thomas Wiecki. Introduction to numerical computing with numpy by Steve Phelps . Using Numba to speed up numerical codes . And another Numba example: self-organizing maps . Numpy performance tricks , and blog post , by Cyrille Rossant . IPython Parallel Push/Execute/Pull Demo by Justin Riley. Understanding the design of the R \"formula\" objects by Matthew Brett. Comparing different approaches to evolutionary simulations . Also available here to better visualization. The notebook was converted to a HTML presentation using an old nbconvert with the first developing implementation of reveal converter. By Yoav Ram. The Traveling Salesperson Problem by Peter Norvig . A git tutorial targeted at scientists by Fernando Perez. Running MATLAB in an IPython Notebook , using pymatbridge . Interactive Curve-Fitting The lmfit package provides a widget-based interface to the curve-fitting algorithms in SciPy. A visual guide to the Python Spark API for distributed computing by Jeff Thompson A tutorial on Map-Reduce programming with Apache Spark and Python by Steve Phelps . CodeCombat gridmancer solver by Arn-O . This notebook explains how to improve a recursive tree search with an heuristic function and to find the minimum solution to the gridmancer.","title":"\u79d1\u5b66\u8ba1\u7b97\u7684\u4e00\u822c\u4e3b\u9898"},{"location":"3.Documentation/Gallery/#_12","text":"Survival Analysis , an illustration of the lifelines library , by Cam Davidson Pilon . A reconstruction of Nate Silver's 538 model for the 2012 US Presidential Election , by Skipper Seabold (complete repo ). Data about the Sandy Hook massacre in Newtown, Conneticut , which accompanies a more detailed blog post on the subject . Here are the notebook and accompanying data . By Brian Keegan. More on gun violence analysis with Wikipedia data . An analysis of the Gaza-Israel 2012 crisis . Ranking NFL Teams . The full repo also includes an explanatory slideshow. By Sean Taylor. Automated processing of news media and generation of associated imagery . An analysis of national school standardized test data in Colombia using Pandas (in Spanish). By Javier Moreno . Getting started with GDELT , by David Masad . GDELT is a dataset containing more than 200-million geolocated events with global coverage for 1979 to the present. Another GDELT example from David, that nicely integrates mapping visualizations . Titanic passengers, coal mining disasters, and vessel speed changes , by Christopher Fonnesbeck A geographic analysis of Indonesian conflicts in 2012 with GDELT, by herrfz . Bioinformatic Approaches to the Computation of Poetic Meter , by A. Sean Pue , C. Titus Brown and Tracy Teal . Analyzing the V\u00e9lib dataset from Paris , by Cyrille Rossant (V\u00e9lib is Paris' bicycle-sharing program ). Using Python to see how the Times writes about men and women , by Neal Caren . Exploring graph properties of the Twitter stream with twython and NetworkX , by F. Perez (complete gist repo with utilities here .) Kaggle Competition: Titanic Machine Learning from Disaster . By Andrew Conti . How clean are San Francisco's restaurants? , a data science tutorial that accompanies a blog post from Zipfian Academy . NYT gender wage gap and US crime by state . Predicting usage of the subway system in NYC , a final project for the Udacity Intro to Data Science Course, by Asim Ihsan . An exploratory statistical analysis of the 2014 World Cup Final , by Ricardo Tavares . Part of a notebook collection on football (aka soccer) analysis . San Francisco's Drug Geography , a GIS analysis of public crime data in SF, by Lance Martin . Geographic Data Science is an entire course by Dani Arribas-Bel to learn to access, munge, and analyse spatial data on social phenomena. Analysis and visualization of a public OKCupid profile dataset using Python and Pandas by Alessandro Giusti includes many colorful data visualizations.","title":"\u793e\u4ea4\u6570\u636e"},{"location":"3.Documentation/Gallery/#_13","text":"Cue Combination with Neural Populations by Will Adler . Intuition and simulation for the theory (Ma et al. , 2006) that through probabilistic population codes, neurons can perform optimal cue combination with simple linear operations. Demonstrates that variance in cortical activity, rather than impairing sensory systems, is an adaptive mechanism to encode uncertainty in sensory measurements. Modeling psychophysical data with non-linear functions by Ariel Rokem. Visualizing mathematical models of brain cell connections . The effect of convolution of different receptive field functions and natural images is examined. Python for Vision Research . A three-day crash course for vision researchers in programming with Python, building experiments with PsychoPy and psychopy_ext , learning the fMRI multi-voxel pattern analysis with PyMVPA , and understading image processing in Python. Loading and visualizing fMRI data , part of the Functional connectivity with NiLearn course by Ga\u00ebl Varoquaux .","title":"\u5fc3\u7406\u5b66\u548c\u795e\u7ecf\u79d1\u5b66"},{"location":"3.Documentation/Gallery/#_14","text":"A tutorial introduction to machine learning with sklearn , an IPython-based slide deck by Andreas Mueller . Introduction to Machine Learning in Python with scikit-learn by Cyrille Rossant , a free recipe from the IPython Cookbook , a comprehensive guide to Python for Data Science. An introduction to Predictive Modeling in Python , by Olivier Grisel . Face Recognition on a subset of the Labeled Faces in the Wild dataset , by Olivier Grisel . An Introduction to Bayesian Methods for Multilevel Modeling , by Chris Fonnesbeck . Introduction to Bayesian Networks by Kui Tang Bayesian data analysis with PyMC3 by Thomas Wiecki . A collection of examples for solving pattern classification problems , by Sebastian Raschka . Introduction to Linear Regression using Python by Kevin Markham Machine learning in Python , a series based on Andrew Ng's Coursera class on machine learning. Part of a larger collection of data science notebooks by John Wittenauer . Probability, Paradox, and the Reasonable Person Principle , by Peter Norvig. How Likely Would You Give A Five-Star Review on Yelp? -- Getting Your Hands Dirty with scikit-learn , by Xun Tang . Complimentary slides . Geodemographic Segmentation Model , by Filipa Rodrigues","title":"\u673a\u5668\u5b66\u4e60\uff0c\u7edf\u8ba1\u548c\u6982\u7387"},{"location":"3.Documentation/Gallery/#_15","text":"Writing A Genome Assembler with blasr and (I)Python , by Jason Chin . Multibody dynamics and control with Python and the notebook file by Jason K. Moore. Manipulation and display of chemical structures , by Greg Landrum , using rdkit. The sound of Hydrogen , visualizing and listening to the quantum-mechanical spectrum of Hydrogen. By Matthias Bussonnier . Particle physics at the Large Hadron Collider (LHC): using ROOT in an LHCb masterclass : Notebook 1 and Notebook 2 notebooks by Alexander Mazurov and Andrey Ustyuzhanin at CERN. A Reaction-Diffusion Equation Solver in Python with Numpy , a demonstration of how IPython notebooks can be used to discuss both the theory and implementation of numerical algorithms on one page, by Georg Walther . Comparing different approaches to evolutionary simulations . Also available here to better visualization. The notebook was converted to a HTML presentation using an old nbconvert with the first developing implementation of reveal converter. By Yoav Ram.","title":"\u7269\u7406\uff0c\u5316\u5b66\u548c\u751f\u7269\u5b66"},{"location":"3.Documentation/Gallery/#_16","text":"Replication of the highly-contentious analysis of economic growth by Reinhart and Rogoff , by Vincent Arel-Bundock , full repo here . This is based on the widely-publicized critique of the original analysis done by Herndon, Ash, and Pollin . fecon235 for Financial Economics series of notebooks which examines time-series data for economics and finance. Easy API to freely access data from the Federal Reserve, SEC, CFTC, stock and futures exchanges. Thus research from older notebooks can be replicated, and updated using the most current data. For example, this notebook forecasts likely Fed policy for setting the Fed Funds rate , but market sentiment across major asset classes is observable from the CFTC Commitment of Traders Report . Major economics indicators are renormalized: for example, various measures of inflation , optionally with the forward-looking break-even rates derived from U.S. Treasury bonds. Other notebooks examine international markets: especially, gold and foreign exchange. Fixed Income: A Structured Bond- Interactive scenarios , Sequential repayment of a bond using interactive widgets and Python in Jupyter, by Mats Gustavsson .","title":"\u7ecf\u6d4e\u4e0e\u91d1\u878d"},{"location":"3.Documentation/Gallery/#_17","text":"Exploring seafloor habitats: geographic analysis using IPython Notebook with GRASS & R . This embeds a slideshow and a Web Spinning Globe (Cesium) in the notebook. By Massimo Di Stefano. Geo-Spatial Data with IPython . Tutorial by Kelsey Jordahl from SciPy2013.","title":"\u5730\u7403\u79d1\u5b66\u548c\u5730\u7406\u7a7a\u95f4\u6570\u636e"},{"location":"3.Documentation/Gallery/#_18","text":"Plotting pitfalls : common problems when plotting large datasets, and how to avoid them. By James A. Bednar. US Census data and NYC Taxi data visualized using datashader . A Notebook with an interactive Hans Rosling Gapminder bubble chart from Plotly . Data and visualization integration via web based resources . Using NetCDF, Matplotlib, IPython Parallel and ffmpeg to generate video animation from time series of gridded data. By Massimo Di Stefano. 21 Interactive, D3 Plots from matplotlib, ggplot for Python, prettyplotlib, Stack Overflow, and seaborn . Visualizing complex-valued functions with Matplotlib and Mayavi , by Emilia Petrisor . bqplot is a d3-based interactive visualization library built entirely on top of that ipywidgets infrastructure. Checkout the pythonic recreation of Hans Rosling's Wealth of Nations . A D3 Viewer for Matplotlib Visualizations , different from above by not depending on Plot.ly account. Bokeh is an interactive web visualization library for Python (and other languages). It provides d3-like novel graphics, over large datasets, all without requiring any knowledge of Javascript. It also has a Matplotlib compatibility layer. HoloViews lets you construct visualizations very concisely in the notebook. Winner of the 2014 E. Tufte Slope Graphs contest , by Pascal Schetelat . The original contest info on Tufte's site . matta, d3.js-based visualizations in the IPython Notebook , by Eduardo Graells-Garrido . Clustergrammer Interactive Heatmap and DataFrame Viewer This Python notebook shows a simple example of how to visualize a matrix file and Pandas DataFrame as an interactive heatmap (built using D3.js) using the Jupyter Widget Clustergrammer (see paper ).","title":"\u6570\u636e\u53ef\u89c6\u5316\u548c\u7ed8\u56fe"},{"location":"3.Documentation/Gallery/#_19","text":"Linear algebra with Cython . A tutorial that styles the notebook differently to show that you can produce high-quality typography online with the Notebook. By Carl Vogel. Exploring how smooth-looking functions can have very surprising derivatives even at low orders , combining SymPy and matplotlib. By Javier Moreno . A Collection of Applied Mathematics and Machine Learning Tutorials (in Turkish). By Burak Bayramli. Function minimization with iminuit , an introductory companion to their hard core tutorial . By the iminuit project . The Discrete Cosine Transform , a brief explanation and illustration of the math behind the DCT and its role in the JPEG image format, by Jim Mahoney . Chebfun in Python , a demo of PyChebfun , by Olivier Verdier . PyChebfun is a pure-python implementation of the celebrated Chebfun package by Battles and Trefethen . The Matrix Exponential , an introduction to the matrix exponential, its applications, and a list of available software in Python and MATLAB. By Sam Relton . Fractals, complex numbers, and your imagination , by Caleb Fangmeier . A SymPy tutorial , by Andrey Grozin . Introduction to Mathematics with Python , a collection of notebooks aimed at Mathematicians with no/little Python knowledge. Notebooks can be selected to serve as resources for a workshop. By Vince Knight .","title":"\u6570\u5b66"},{"location":"3.Documentation/Gallery/#_20","text":"Simulation of Delta Sigma modulators in Python with deltasigma , Python port of of Richard Schreier's excellent MATLAB Delta Sigma Toolbox , by Giuseppe Venturini . Several demonstrative notebooks on the package README . PyOracle: Automatic analysis of musical structure , by Greg Surges . A Gallery of SciPy's Window Functions for quick visual inspection and comparison by Jaidev Deshpande Poisson Image Editing | Seamless Cloning by Dhruv Ilesh Shah is a notebook that achieves Seamless Image Cloning by employing the Poisson Solver in the iterative form. Blind Source Separation | Cocktail Party Problem by Dhruv Ilesh Shah & Shashwat Shukla is a notebook that achieves blind source separation, on audio signals in an attempt to approach the Cocktail Party Prblem. The problem has been tackled in two different methods - the FOBI and fastICA.","title":"\u4fe1\u53f7\u548c\u58f0\u97f3\u5904\u7406"},{"location":"3.Documentation/Gallery/#_21","text":"Python Programming for the Humanities by Folgert Karsdorp & Maarten van Gompel. News Categorization using Multinomial Naive Bayes by Andres Soto Villaverde. Using random cross-validation for news categorization by Andres Soto Villaverde.","title":"\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"3.Documentation/Gallery/#_22","text":"Note that in the 'collections' section above there are also pandas-related links, such as the one for an 11-lesson tutorial . A 10-minute whirlwind tour of pandas , this is the notebook accompanying a video presentation by Wes McKinney, author of Pandas and the Python for Data Analysis book. Time-series analysis with Pandas . Financial data analysis with Pandas . Clustering of smartphone sensor data for human activity detection using pandas and scipy , part of Coursera data analysis course, done in Python ( repo ). Log analysis with Pandas , part of a group presented at PyConCa 2012 by Taavi Burns. Analyzing and visualizing sun spot data with Pandas , by Josh Hemann . An enlightening discussion of how naive plotting choices subtly influence our interpretation of data. Advanced analysis of Apache logs , by Nikolay Koldunov . Statistical Data Analysis in Python , by Christopher Fonnesbeck , SciPy 2013. Companion videos 1 , 2 , 3 , 4","title":"\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u718a\u732b"},{"location":"3.Documentation/Gallery/#python","text":"Learning to code with Python , part of an introduction to Python from the Waterloo Python users group . Introduction to Python for Data Scientists by Steve Phelps (part of a larger collection on Data Science and Big Data ). Python Descriptors Demystified , an in-depth discussion of the descriptor protocol in Python, by Chris Beaumont . A collection of not so obvious Python stuff you should know! , by Sebastian Raschka . Key differences between Python 2.7.x and Python 3.x , by Sebastian Raschka . A beginner's guide to Python's namespaces, scope resolution, and the LEGB rule , by Sebastian Raschka . Sorting CSV files using the Python csv module , by Sebastian Raschka . Python 3 OOP series by Leonardo Giordani : Part 1: Objects and types , Part 2: Classes and members , Part 3: Delegation - composition and inheritance , Part 4: Polymorphism , Part 5: Metaclasses , Part 6: Abstract Base Classes How to Aggregate Subscriber's Interest using the 3 methods: (1) Python Dictionary, (2) Apache PySpark - GroupBy Transformation, and (3) Apache PySpark - ReduceBy Transformation by Abbas Taher .","title":"\u4e00\u822c Python \u7f16\u7a0b"},{"location":"3.Documentation/Gallery/#python_1","text":"These are notebooks that use one of the IPython kernels for other languages :","title":"\u4f7f\u7528 Python \u4ee5\u5916\u7684\u8bed\u8a00\u7684\u7b14\u8bb0\u672c"},{"location":"3.Documentation/Gallery/#julia","text":"The IPython protocols to communicate between kernels and clients are language agnostic, and other programming language communities have started to build support for this protocol in their language. The Julia team has created IJulia , and these are some Julia notebooks: Fractals 3 ways , by Jeff Bezanson . The Design Impact of Multiple Dispatch , a detailed explanation of Julia's multiple dispatch design, by Stefan Karpinski . A tutorial on making interactive graphs with Plotly and Julia. Numerical tours in Julia Functional Geometry by Shashi Gowda JuliaOpt notebooks , a collection of optimization-related notebooks. Coursework using IJulia notebooks: M\u00e9todos Num\u00e9ricos Avanzados (2015-2) , Luis Benet and David P. Sanders M\u00e9todos Monte Carlo , David Sanders Linear Partial Differential Equations: Analysis and Numerics , Steven G. Johnson Julia tutorial for Computational Molecular Biology , Younhun Kim and Matthew Reyna Other collections of IJulia notebooks: Jiahao Chen Christoph Ortner Crossing Language Barriers with Julia, Scipy, and IPython , presented at EuroSciPy '14 by Steven G. Johnson.","title":"Julia"},{"location":"3.Documentation/Gallery/#haskell","text":"There exists a Haskell kernel for IPython in the IHaskell project . IHaskell Demo Notebook Homophone reduction , a solution to a cute problem involving treating English letters as generators of a large group. Gradient descent typeclass , a look at how arbitrary gradient descent algorithms can be represented with a typeclass.","title":"Haskell"},{"location":"3.Documentation/Gallery/#ocaml","text":"iocaml is an OCaml kernel for IPython H.261 Video Decoding in OCaml OCaml implementation of the 2048 game","title":"OCaml"},{"location":"3.Documentation/Gallery/#ruby","text":"Similar to the Julia kernel there exists also a Ruby kernel for IPython. IRuby Demo Notebook SciRuby Notebooks The interactive plotting library Nyaplot has some case studies using IRuby: War expenditure per GDP Finding shape consensus among multiple geometrical polygons","title":"Ruby"},{"location":"3.Documentation/Gallery/#perl","text":"An example showcasing full use of the display protocol with the IPerl kernel.","title":"Perl"},{"location":"3.Documentation/Gallery/#f","text":"F# for Jupyter Notebooks","title":"F&#35;"},{"location":"3.Documentation/Gallery/#c","text":"Xamarin Workbooks Create a rich C# workbook for Android, iOS, Mac, WPF, or Console, and get instant live results as you learn these APIs.","title":"C&#35;"},{"location":"3.Documentation/Gallery/#javascript","text":"Two IJavascript notebooks that demonstrate how to use D3 to do computations and send a SVG back and play with a virtual DOM","title":"Javascript"},{"location":"3.Documentation/Gallery/#notebook","text":"Blogging With IPython in Blogger , also available in blog post form , full repo here . By Fernando Perez. Blogging With IPython in Octopress , by Jake van der Plas and available as a blog post . Other notebooks by Jake contain many more great examples of doing interesting work with the scientific Python stack. Blogging With IPython in Nikola , also available in blog post form by Dami\u00e1n Avila. Custom CSS control of the notebook , this is part of a blog repo by Matthias Bussonnier. IPython display hookery: tools to help display visual output from various sources , a gist by @deeplook . Importing IPython Notebooks as Modules by Min RK .","title":"\u5173\u4e8e\u4f7f\u7528 Notebook \u672c\u8eab\u505a\u5404\u79cd\u4e8b\u60c5\u7684\u5176\u4ed6\u4e3b\u9898"},{"location":"3.Documentation/Gallery/#_23","text":"This section contains academic papers that have been published in the peer-reviewed literature or pre-print sites such as the ArXiv that include one or more notebooks that enable (even if only partially) readers to reproduce the results of the publication. If you include a publication here, please link to the journal article as well as providing the nbviewer notebook link (and any other relevant resources associated with the paper). 1. Discovery of Gravitational Waves by the LIGO collaboration . That page, from the LIGO Open Science Center, contains multiple notebooks for various datasets corresponding to different events; this binder lets you run the code right away. More details on the GW150914 event as well as the original main Physical Review Letters paper, \"Observation of Gravitational Waves from a Binary Black Hole Merger\" . 2. Characterizing Strain Variation in Engineered E. coli Using a Multi-Omics-Based Workflow , by Brunk et al. 3. Predicting Coronal Mass Ejections Using Machine Learning Methods by Monica Bobra and Stathis Ilonidis (Astrophysical Journal, 2016). An IPython notebook , which reproduces all the results, has been permanently deposited in the Stanford Digital Repository . 4. The Paper of the Future by Alyssa Goodman et al. (Authorea Preprint, 2017). This article explains and shows with demonstrations how scholarly \"papers\" can morph into long-lasting rich records of scientific discourse, enriched with deep data and code linkages, interactive figures, audio, video, and commenting. It includes an interactive d3.js visualization and has an astronomical data figure with an IPYthon Notebook \"behind\" it. 5. Reply to 'Influence of cosmic ray variability on the monsoon rainfall and temperature': a false-positive in the field of solar-terrestrial research by Benjamin Laken , 2015. Reviewed article will appear in JASTP. The IPython notebook reproduces the full analysis and figures exactly as they appear in the article, and is available on Github: link via figshare . 6. An open RNA-Seq data analysis pipeline tutorial with an example of reprocessing data from a recent Zika virus study , by Zichen Wang and Avi Ma'ayan . (F1000Research 2016, 5:1574). An IPython notebook was used to perform the proposed RNA-Seq pipeline using public gene expression data of human cells after Zika virus infection. The computational pipeline is also version controlled and Dockerized available here . 7. The probability of improvement in Fisher's geometric model: a probabilistic approach , by Yoav Ram and Lilach Hadany . (Theoretical Population Biology, 2014). An IPython notebook , allowing figure reproduction, was deposited as a supplementry file . 8. Stress-induced mutagenesis and complex adaptation , by Yoav Ram and Lilach Hadany (Proceedings B, 2014). An IPython notebook , allowing figures reproduction, was deposited as a supplementry file . 9. Automatic segmentation of odor maps in the mouse olfactory bulb using regularized non-negative matrix factorization , by J. Soelter et al. (Neuroimage 2014, Open Access). The notebook allows to reproduce most figures from the paper and provides a deeper look at the data. The full code repository is also available. 10. Multi-tiered genomic analysis of head and neck cancer ties TP53 mutation to 3p loss, by A. Gross et al. (Nature Genetics 2014) . The full collection of notebooks to replicate the results . 11. Dog and human inflammatory bowel disease rely on overlapping yet distinct dysbiosis networks, by V\u00e1zquez-Baeza et al. (Nature microbiology 2016) . The full collection of notebooks to replicate the results . 12. powerlaw: a Python package for analysis of heavy-tailed distributions, by J. Alstott et al. . Notebook of examples in manuscript , ArXiv link and project repository . 13. Collaborative cloud-enabled tools allow rapid, reproducible biological insights, by B. Ragan-Kelley et al. . The main notebook , the full collection of related notebooks and the companion site with the Amazon AMI information for reproducing the full paper. 14. A Reference-Free Algorithm for Computational Normalization of Shotgun Sequencing Data, by C.T. Brown et al. . Full notebook , ArXiv link and project repository . 15. The kinematics of the Local Group in a cosmological context by J.E. Forero-Romero et al. . The Full notebook and also all the data in a github repo . 16. Warming Ocean Threatens Sea Life , an article in Scientific American backed by a notebook for its main plot . By Roberto de Almeida from MarinExplore . 17. Extrapolating Weak Selection in Evolutionary Games , by Wu, Garc\u00eda, Hauert and Traulsen. PLOS Comp Bio paper and Figshare link . 18. Using neural networks to estimate redshift distributions. An application to CFHTLenS by Christopher Bonnett paper (submitted to MNRAS) 1. Mechanisms for stable, robust, and adaptive development of orientation maps in the primary visual cortex by Jean-Luc R. Stevens, Judith S. Law, Jan Antolik, and James A. Bednar. Journal of Neuroscience, 33:15747-15766, 2013. Notebook1 , Notebook2 . 1. Accelerated Randomized Benchmarking , by Christopher Granade , Christopher Ferrie and D. G. Cory. New Journal of Physics 17 013042 (2015) , arXiv , GitHub repo . 1. Dynamics and associations of microbial community types across the human body , by Tao Ding & Patrick D. Schloss. Notebook replicating results . 1. Variations in submarine channel sinuosity as a function of latitude and slope , by Sylvester, Z., Pirmez, C., Cantelli, A., & Jobe, Z. R. 1. Frontoparietal representations of task context support the flexible control of goal directed cognition , by M.L. Waskom, D. Kumaran, A.M. Gordon, J. Rissman, & A.D. Wagner. Github repository | Main notebook 1. pyparty: Intuitive Particle Processing in Python , Adam Hughes Notebook to Generate the Published Figures | Also, check out the pyparty tutorial notebooks . 1. Indication of family-specific DNA methylation patterns in developing oysters , Claire E. Olson, Steven B. Roberts doi: http://dx.doi.org/10.1101/012831. Notebook to generate results in the paper . 1. Parallel Prefix Polymorphism Permits Parallelization, Presentation & Proof , Jiahao Chen and Alan Edelman , HPTCDL'14. Website and notebook 1. Transcriptome Sequencing Reveals Potential Mechanism of Cryptic 3\u2019 Splice Site Selection in SF3B1 -mutated Cancers by Christopher DeBoever et al. There are several notebooks to replicate results and make figures. 1. A Workflow for Characterizing Nanoparticle Monolayers for Biosensors: Machine Learning on Real and Artificial SEM Images , Adam Hughes, Zhaowen Liu, Maryam Raftari, Mark. E Reeves. Notebooks are linked in Table 1 in the text. 1. AtomPy: An Open Atomic Data Curation Environment for Astrophysical Applications , by C. Mendoza, J. Boswell, D. Ajoku, M. Bautista. 1. Visualizing 4-Dimensional Asteroids , in Scientific American (by Jake VanderPlas) 1. Challenges and opportunities in understanding microbial communities with metagenome assembly , accompanied by IPython Notebook tutorial , by Adina Howe and Patrick Chain. 1. Structure of a shear-line polar low (2016) by Sergeev, D. E. , Renfrew, I. A. , Spengler, T. and Dorling, S. R. Q.J.R. Meteorol. Soc. doi:10.1002/qj.2911. Accompanied by Notebooks to generate the published figures . 1. Detecting High-Order Epistasis in Nonlinear Genotype-Phenotype Maps by Zachary R. Sailer and Michael J. Harms published in Genetics , March 2017 . All figures can be reproduced by the set of notebooks in this Github repo . 1. Summary Analysis of the 2017 GitHub Open Source Survey by Stuart Geiger . Preprint in SocArXiv , June 2017. doi:10.17605/OSF.IO/ENRQ5. Paper is derived from a notebook converted to LaTeX with nbconvert. Notebook and materials at: OSF , GitHub , nbviewer 1. The weirdest SDSS galaxies: results from an outlier detection algorithm , by D. Baron and D. Poznanski. Notebooks to replicate . 1. Clustergrammer, a web-based heatmap visualization and analysis tool for high-dimensional biological data , by Nicolas Fernandez et al. Notebooks: Fig. 3 , Fig. 4 , Fig. 5 1. Sociology: An investigation of Social Class Inequalities in General Cognitive Ability in Two British Birth Cohorts. Preprint in SocArXiv, December 2017. doi: 10.17605/OSF.IO/SZXDM. Notebook and materials at: OSF , GitHub , nbviewer . 1. An on-chip architecture for self-homodyned nonclassical light , quant-ph ArXiV preprint, Nov 2016, by Fischer et al. A supporting notebook for all calculations included in the ArXiV submission. 1. A nested sampling code for targeted searches for continuous gravitational waves from pulsars , gr-qc ArXiV preprint, May 2017, by Pitkin et al. Complete repo with supporting notebooks and sources on GitHub. 1. HyperTools: A Python toolbox for visualizing and manipulating high-dimensional data , stat.OT ArXiV preprint by Heusser et al. A repo with companion notebooks is available, that links to the library itself, HyperTools . 1. Nonsinusoidal beta oscillations reflect cortical pathophysiology in Parkinson's disease , in Journal of Neuroscience by Cole et al. A repo with companion notebooks with all necessary data is available to reproduce all figures. 1. Cycle-by-cycle analysis of neural oscillations , in bioRxiv by Cole & Voytek. A repo with companion notebooks with all necessary data is available to reproduce all figures. This repo also links to the related useful library, neurodsp , which contains notebooks of tutorials.","title":"\u53ef\u91cd\u590d\u7684\u5b66\u672f\u51fa\u7248\u7269"},{"location":"3.Documentation/Gallery/#_24","text":"The Need for Openness in Data Journalism , by Brian Keegan . St. Louis County Segregation Analysis , analysis for the article The Ferguson Area Is Even More Segregated Than You Probably Guessed by Jeremy Singer-Vine . Size of thesis and dissertations in Quebec , by Jean-Hugues Roy (in French).","title":"\u6570\u636e\u9a71\u52a8\u7684\u65b0\u95fb"},{"location":"3.Documentation/Gallery/#_25","text":"XKCD-styled plots created with Matplotlib . Here is the blog post version with discussion. By Jake van der Plas. Van Gogh's Starry Night with ipythonblocks , part of Matt Davis' ipythonblocks . This is a teaching tool for use with the IPython notebook that provides visual elements to understand programming concepts. Conway's Game of Life . Interesting use of convolution operation to calculate the next state of game board, instead of obvious find neighbors and filter the board for next state. pynguins . Using jupyter notebook, python, and numpy to solve Board Game \"Penguins on Ice\". \"People plots\" , stick figures generated with matplotlib. Reveal converter mini-tutorial , also available in blog post form . Do you want to make static html/css slideshow straight from the IPython notebook? OK, now you can do it with the reveal converter (nbconvert). Demo by Dami\u00e1n Avila. Personal IPython Weight Notebook . Plot your loss of weight with prognosis and motivation features. Streaming Double Pendulum Simulation in IPython NB . Porque Charles Xavier debe cambiar a Cerebro por Python , a study in data and gender in the Marvel comics universe, by Mai Gim\u00e9nez and Angela Rivera . Functional Geometry: a deconstruction of the MC Escher woodcut Square Limit , an IJulia notebook by Shashi Gowda . Solving physical puzzles with a Jupyter Noteboook .","title":"\u5f02\u60f3\u5929\u5f00\u7684\u7b14\u8bb0\u672c"},{"location":"3.Documentation/Gallery/#ipython","text":"Of course the first thing you might try is searching for videos about IPython (1900 or so by last count on Youtube) but there are demonstrations of other applications using the power of IPython but are not mentioned is the descriptions. Below are a few such: Video on how to learn Python featuring IPython as the platform of choice for learning! This video shows IPython being used in the scikit-learn project He does not show IPython in use but his IPython sticker is clear for the entire video: Planning and Tending the Garden: The Future of Early Childhood Python Education Wes McKinney's speech on Python and data analysis features IPython as does his book Python for Data Analysis This video shows Plotly and IPython in use at a Montreal Python meetup.","title":"\u5728\u91ce\u5916\u4f7f\u7528\u7684 IPython \u89c6\u9891"},{"location":"3.Documentation/Gallery/#ibm","text":"Github notebook example (scroll down) illustrating how to use Qiskit and access the IBMQ quantum computers.","title":"\u901a\u8fc7\u7b14\u8bb0\u672c\u8bbf\u95ee\u548c\u7f16\u7a0b IBM \u91cf\u5b50\u8ba1\u7b97\u673a"},{"location":"3.Documentation/IPython/","text":"IPython \u00b6 \u5185\u5bb9 \u00b6 Description Background Resources \u63cf\u8ff0 \u00b6 IPython \u4e3a\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u67b6\u6784: \u5f3a\u5927\u7684\u4ea4\u4e92\u5f0f shell\u3002 Jupyter \u7684\u5185\u6838\u3002 \u652f\u6301\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316\u548c GUI \u5de5\u5177\u5305\u7684\u4f7f\u7528\u3002 \u7075\u6d3b\uff0c\u53ef\u5d4c\u5165\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u52a0\u8f7d\u5230\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002 \u6613\u4e8e\u4f7f\u7528\uff0c\u9ad8\u6027\u80fd\u7684\u5e76\u884c\u8ba1\u7b97\u5de5\u5177\u3002 \u80cc\u666f \u00b6 IPython \u662f\u4e00\u4e2a\u4e0d\u65ad\u53d1\u5c55\u7684\u9879\u76ee\uff0c\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u7ec4\u4ef6\u8d8a\u6765\u8d8a\u591a\u3002 IPython 3.x \u662f IPython \u7684\u6700\u540e\u4e00\u4e2a\u5355\u7247\u7248\u672c\uff0c\u5305\u542b\u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0cqtconsole \u7b49\u3002 \u4ece IPython 4.0 \u5f00\u59cb\uff0c\u9879\u76ee\u4e2d\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u90e8\u5206\uff1a\u7b14\u8bb0\u672c\u683c\u5f0f\uff0c\u6d88\u606f\u534f\u8bae\uff0cqtconsole\uff0c\u7b14\u8bb0\u672c Web \u5e94\u7528\u7a0b\u5e8f\u7b49\u5df2\u7ecf\u8f6c\u79fb\u5230\u540d\u4e3a Jupyter \u7684\u65b0\u9879\u76ee\u4e2d\u3002 IPython \u672c\u8eab\u4e13\u6ce8\u4e8e\u4ea4\u4e92\u5f0f Python\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u4e3a Jupyter \u63d0\u4f9b Python \u5185\u6838\u3002 \u8d44\u6e90 \u00b6 IPython \u7f51\u7ad9 \u6709\u8da3\u7684\u7b14\u8bb0\u672c\u753b\u5eca IPython \u6587\u6863","title":"IPython"},{"location":"3.Documentation/IPython/#ipython","text":"","title":"IPython"},{"location":"3.Documentation/IPython/#_1","text":"Description Background Resources","title":"\u5185\u5bb9"},{"location":"3.Documentation/IPython/#_2","text":"IPython \u4e3a\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u67b6\u6784: \u5f3a\u5927\u7684\u4ea4\u4e92\u5f0f shell\u3002 Jupyter \u7684\u5185\u6838\u3002 \u652f\u6301\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316\u548c GUI \u5de5\u5177\u5305\u7684\u4f7f\u7528\u3002 \u7075\u6d3b\uff0c\u53ef\u5d4c\u5165\u7684\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u52a0\u8f7d\u5230\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u3002 \u6613\u4e8e\u4f7f\u7528\uff0c\u9ad8\u6027\u80fd\u7684\u5e76\u884c\u8ba1\u7b97\u5de5\u5177\u3002","title":"\u63cf\u8ff0"},{"location":"3.Documentation/IPython/#_3","text":"IPython \u662f\u4e00\u4e2a\u4e0d\u65ad\u53d1\u5c55\u7684\u9879\u76ee\uff0c\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u7ec4\u4ef6\u8d8a\u6765\u8d8a\u591a\u3002 IPython 3.x \u662f IPython \u7684\u6700\u540e\u4e00\u4e2a\u5355\u7247\u7248\u672c\uff0c\u5305\u542b\u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0cqtconsole \u7b49\u3002 \u4ece IPython 4.0 \u5f00\u59cb\uff0c\u9879\u76ee\u4e2d\u4e0e\u8bed\u8a00\u65e0\u5173\u7684\u90e8\u5206\uff1a\u7b14\u8bb0\u672c\u683c\u5f0f\uff0c\u6d88\u606f\u534f\u8bae\uff0cqtconsole\uff0c\u7b14\u8bb0\u672c Web \u5e94\u7528\u7a0b\u5e8f\u7b49\u5df2\u7ecf\u8f6c\u79fb\u5230\u540d\u4e3a Jupyter \u7684\u65b0\u9879\u76ee\u4e2d\u3002 IPython \u672c\u8eab\u4e13\u6ce8\u4e8e\u4ea4\u4e92\u5f0f Python\uff0c\u5176\u4e2d\u4e00\u90e8\u5206\u662f\u4e3a Jupyter \u63d0\u4f9b Python \u5185\u6838\u3002","title":"\u80cc\u666f"},{"location":"3.Documentation/IPython/#_4","text":"IPython \u7f51\u7ad9 \u6709\u8da3\u7684\u7b14\u8bb0\u672c\u753b\u5eca IPython \u6587\u6863","title":"\u8d44\u6e90"},{"location":"3.Documentation/Release/","text":"\u53d1\u884c\u8bf4\u660e \u00b6 \u6bcf\u4e2a\u9879\u76ee\u7684\u6587\u6863\u548c GitHub \u5b58\u50a8\u5e93\u90fd\u5305\u542b\u6709\u5173\u5148\u524d\u7248\u672c\u7684\u53d1\u5e03\u548c\u66f4\u6539\u7684\u4fe1\u606f\u3002 Coming Soon \u6211\u4eec\u6b63\u5728\u79ef\u6781\u7814\u7a76\u663e\u793a\u6bcf\u4e2a\u9879\u76ee\uff0c\u5f53\u524d\u7248\u672c\u4ee5\u53ca\u66f4\u6539\u65e5\u5fd7\u94fe\u63a5\u7684\u56fe\u5f62\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"3.Documentation/Release/#_1","text":"\u6bcf\u4e2a\u9879\u76ee\u7684\u6587\u6863\u548c GitHub \u5b58\u50a8\u5e93\u90fd\u5305\u542b\u6709\u5173\u5148\u524d\u7248\u672c\u7684\u53d1\u5e03\u548c\u66f4\u6539\u7684\u4fe1\u606f\u3002 Coming Soon \u6211\u4eec\u6b63\u5728\u79ef\u6781\u7814\u7a76\u663e\u793a\u6bcf\u4e2a\u9879\u76ee\uff0c\u5f53\u524d\u7248\u672c\u4ee5\u53ca\u66f4\u6539\u65e5\u5fd7\u94fe\u63a5\u7684\u56fe\u5f62\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u53d1\u884c\u8bf4\u660e"},{"location":"3.Documentation/how_jupyter_ipython_work/","text":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c \u00b6 \u62bd\u8c61 \u00b6 \u672c\u8282\u91cd\u70b9\u4ecb\u7ecd IPython \u548c Jupyter \u7b14\u8bb0\u672c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u4ea4\u4e92\u3002 \u5f53\u6211\u4eec\u8ba8\u8bba IPython \u65f6\uff0c\u6211\u4eec\u8c08\u8bba\u4e24\u4e2a\u57fa\u672c\u89d2\u8272: \u7ec8\u7aef IPython \u4f5c\u4e3a\u719f\u6089\u7684 REPL\u3002 IPython \u5185\u6838\uff0c\u63d0\u4f9b\u4e0e\u524d\u7aef\u63a5\u53e3\u7684\u8ba1\u7b97\u548c\u901a\u4fe1\uff0c\u5982\u7b14\u8bb0\u672c\u3002 Jupyter Notebook \u53ca\u5176\u7075\u6d3b\u7684\u754c\u9762\u5c06\u7b14\u8bb0\u672c\u7535\u8111\u4ece\u4ee3\u7801\u6269\u5c55\u5230\u53ef\u89c6\u5316\uff0c\u591a\u5a92\u4f53\uff0c\u534f\u4f5c\u7b49\u3002 \u7ec8\u7aef IPython \u00b6 \u5f53\u60a8\u952e\u5165 ipython \u65f6\uff0c\u60a8\u5c06\u83b7\u5f97\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u7684\u539f\u59cb IPython \u63a5\u53e3\u3002 \u5b83\u505a\u4e86\u8fd9\u6837\u7684\u4e8b\u60c5: while True : code = input ( \">>> \" ) exec ( code ) \u5f53\u7136\uff0c\u5b83\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5904\u7406\u591a\u884c\u4ee3\u7801\uff0c\u4f7f\u7528 readline \u5b8c\u6210\u5236\u8868\u7b26\uff0c\u9b54\u672f\u547d\u4ee4\u7b49\u7b49\u3002 \u4f46\u8be5\u6a21\u578b\u5c31\u50cf\u4ee3\u7801\u793a\u4f8b\uff1a\u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e9b\u4ee3\u7801\uff0c\u5f53\u4ed6\u4eec\u8f93\u5165\u4ee3\u7801\u65f6\uff0c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u6267\u884c\u5b83\u3002 \u6b64\u6a21\u578b\u901a\u5e38\u79f0\u4e3a REPL \u6216 Read-Eval-Print-Loop\u3002 IPython \u5185\u6838 \u00b6 \u6240\u6709\u5176\u4ed6\u63a5\u53e3 - Notebook\uff0cQt \u63a7\u5236\u53f0\uff0c\u7ec8\u7aef\u4e2d\u7684 ipython \u63a7\u5236\u53f0\u548c\u7b2c\u4e09\u65b9\u63a5\u53e3 - \u90fd\u4f7f\u7528 IPython \u5185\u6838\u3002 IPython \u5185\u6838\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u8d1f\u8d23\u8fd0\u884c\u7528\u6237\u4ee3\u7801\uff0c\u4ee5\u53ca\u8ba1\u7b97\u53ef\u80fd\u7684\u5b8c\u6210\u60c5\u51b5\u3002 \u524d\u7aef\uff0c\u5982\u7b14\u8bb0\u672c\u6216 Qt \u63a7\u5236\u53f0\uff0c\u4f7f\u7528\u901a\u8fc7 ZeroMQ \u5957\u63a5\u5b57\u53d1\u9001\u7684 JSON \u6d88\u606f\u4e0e IPython \u5185\u6838\u901a\u4fe1;\u5728 Jupyter \u7684 Messaging \u4e2d\u63cf\u8ff0\u4e86\u524d\u7aef\u548c IPython \u5185\u6838\u4e4b\u95f4\u4f7f\u7528\u7684\u534f\u8bae\u3002 \u5185\u6838\u7684\u6838\u5fc3\u6267\u884c\u673a\u5236\u4e0e\u7ec8\u7aef IPython \u5171\u4eab: \u5185\u6838\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u8fde\u63a5\u5230\u591a\u4e2a\u524d\u7aef\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u524d\u7aef\u5c06\u53ef\u4ee5\u8bbf\u95ee\u76f8\u540c\u7684\u53d8\u91cf\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u65e8\u5728\u5141\u8bb8\u57fa\u4e8e\u76f8\u540c\u5185\u6838\u8f7b\u677e\u5f00\u53d1\u4e0d\u540c\u7684\u524d\u7aef\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5f00\u53d1\u8fd9\u4e9b\u8bed\u8a00\u7684\u5185\u6838\u6765\u652f\u6301\u540c\u4e00\u524d\u7aef\u7684\u65b0\u8bed\u8a00\uff0c\u5e76\u4e14\u6211\u4eec\u6b63\u5728\u6539\u8fdb IPython \u4ee5\u4f7f\u5176\u66f4\u52a0\u5b9e\u7528\u3002 \u4eca\u5929\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u53e6\u4e00\u79cd\u8bed\u8a00\u5f00\u53d1\u5185\u6838\u3002 \u5305\u88c5\u5668\u5185\u6838\u91cd\u7528 IPython \u4e2d\u7684\u901a\u4fe1\u673a\u5236\uff0c\u5e76\u4ec5\u5b9e\u73b0\u6838\u5fc3\u6267\u884c\u90e8\u5206\u3002 \u672c\u673a\u5185\u6838\u4ee5\u76ee\u6807\u8bed\u8a00\u5b9e\u73b0\u6267\u884c\u548c\u901a\u4fe1: \u5bf9\u4e8e\u5177\u6709\u826f\u597d Python \u5305\u88c5\u7684\u8bed\u8a00\uff08\u5982 octave_kernel\uff09\uff0c\u6216\u8005\u5b9e\u73b0\u901a\u4fe1\u673a\u5236\uff08\u5982 bash_kernel\uff09\u4e0d\u5207\u5b9e\u9645\u7684\u8bed\u8a00\uff0c\u5305\u88c5\u5668\u5185\u6838\u66f4\u5bb9\u6613\u5feb\u901f\u7f16\u5199\u3002 \u4f7f\u7528\u5b83\u4eec\u7684\u793e\u533a\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u7ef4\u62a4\u672c\u673a\u5185\u6838\uff0c\u4f8b\u5982 IJulia \u6216 IHaskell\u3002 See also \u4e3aJupyter\u5236\u4f5c\u5185\u6838 \u5185\u6838 \u7b14\u8bb0\u672c \u00b6 \u7b14\u8bb0\u672c\u524d\u7aef\u505a\u4e86\u989d\u5916\u7684\u4e8b\u60c5\u3002 \u9664\u4e86\u8fd0\u884c\u4ee3\u7801\u4e4b\u5916\uff0c\u5b83\u8fd8\u5c06\u4ee3\u7801\u548c\u8f93\u51fa\u4ee5\u53ca\u964d\u4ef7\u7b14\u8bb0\u5b58\u50a8\u5728\u540d\u4e3a notebook \u7684\u53ef\u7f16\u8f91\u6587\u6863\u4e2d\u3002 \u4fdd\u5b58\u65f6\uff0c\u4f1a\u5c06\u5176\u4ece\u6d4f\u89c8\u5668\u53d1\u9001\u5230\u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u5176\u4f5c\u4e3a\u5e26\u6709.ipynb \u6269\u5c55\u540d\u7684 JSON \u6587\u4ef6\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u3002 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u662f\u5185\u6838\uff0c\u8d1f\u8d23\u4fdd\u5b58\u548c\u52a0\u8f7d\u7b14\u8bb0\u672c\uff0c\u56e0\u6b64\u5373\u4f7f\u60a8\u6ca1\u6709\u8be5\u8bed\u8a00\u7684\u5185\u6838\uff0c\u60a8\u4e5f\u53ef\u4ee5\u7f16\u8f91\u7b14\u8bb0\u672c - \u60a8\u5c06\u65e0\u6cd5\u8fd0\u884c\u4ee3\u7801\u3002 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\u800c\u4e0d\u662f\u5185\u6838\u8d1f\u8d23\u4fdd\u5b58\u548c\u52a0\u8f7d\u7b14\u8bb0\u672c\uff0c\u56e0\u6b64\u5373\u4f7f\u60a8\u6ca1\u6709\u8be5\u8bed\u8a00\u7684\u5185\u6838\uff0c\u4e5f\u53ef\u4ee5\u7f16\u8f91\u7b14\u8bb0\u672c - \u60a8\u5c06\u65e0\u6cd5\u8fd0\u884c\u4ee3\u7801\u3002 \u5c06\u7b14\u8bb0\u672c\u5bfc\u51fa\u4e3a\u5176\u4ed6\u683c\u5f0f \u00b6 Jupyter \u4e2d\u7684 Nbconvert \u5de5\u5177\u5c06\u7b14\u8bb0\u672c\u6587\u4ef6\u8f6c\u6362\u4e3a\u5176\u4ed6\u683c\u5f0f\uff0c\u4f8b\u5982 HTML\uff0cLaTeX \u6216 reStructuredText\u3002 \u6b64\u8f6c\u6362\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u6b65\u9aa4: \u9884\u5904\u7406\u5668\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u7b14\u8bb0\u672c\u3002 \u4f8b\u5982\u3002 ExecutePreprocessor \u8fd0\u884c\u7b14\u8bb0\u672c\u4e2d\u7684\u4ee3\u7801\u5e76\u66f4\u65b0\u8f93\u51fa\u3002 \u5bfc\u51fa\u5668\u5c06\u7b14\u8bb0\u672c\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6587\u4ef6\u683c\u5f0f\u3002 \u5927\u591a\u6570\u51fa\u53e3\u5546\u90fd\u4f7f\u7528\u6a21\u677f\u3002 \u540e\u5904\u7406\u5668\u5904\u7406\u5bfc\u51fa\u751f\u6210\u7684\u6587\u4ef6\u3002 nbviewer \u7f51\u7ad9\u4f7f\u7528 nbconvert \u548c HTML \u5bfc\u51fa\u5668\u3002 \u5f53\u60a8\u4e3a\u5176\u63d0\u4f9b URL \u65f6\uff0c\u5b83\u4f1a\u4ece\u8be5 URL \u83b7\u53d6\u7b14\u8bb0\u672c\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a HTML\uff0c\u5e76\u5c06\u8be5 HTML \u63d0\u4f9b\u7ed9\u60a8\u3002 IPython.parallel \u00b6 IPython \u8fd8\u5305\u62ec\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\uff0cIPython.parallel\u3002 \u8fd9\u5141\u8bb8\u60a8\u63a7\u5236\u8bb8\u591a\u5355\u72ec\u7684\u5f15\u64ce\uff0c\u8fd9\u4e9b\u5f15\u64ce\u662f\u4e0a\u8ff0 IPython \u5185\u6838\u7684\u6269\u5c55\u7248\u672c\u3002","title":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c"},{"location":"3.Documentation/how_jupyter_ipython_work/#ipython-jupyter-notebook","text":"","title":"IPython \u548c Jupyter Notebook \u5982\u4f55\u5de5\u4f5c"},{"location":"3.Documentation/how_jupyter_ipython_work/#_1","text":"\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd IPython \u548c Jupyter \u7b14\u8bb0\u672c\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u4ea4\u4e92\u3002 \u5f53\u6211\u4eec\u8ba8\u8bba IPython \u65f6\uff0c\u6211\u4eec\u8c08\u8bba\u4e24\u4e2a\u57fa\u672c\u89d2\u8272: \u7ec8\u7aef IPython \u4f5c\u4e3a\u719f\u6089\u7684 REPL\u3002 IPython \u5185\u6838\uff0c\u63d0\u4f9b\u4e0e\u524d\u7aef\u63a5\u53e3\u7684\u8ba1\u7b97\u548c\u901a\u4fe1\uff0c\u5982\u7b14\u8bb0\u672c\u3002 Jupyter Notebook \u53ca\u5176\u7075\u6d3b\u7684\u754c\u9762\u5c06\u7b14\u8bb0\u672c\u7535\u8111\u4ece\u4ee3\u7801\u6269\u5c55\u5230\u53ef\u89c6\u5316\uff0c\u591a\u5a92\u4f53\uff0c\u534f\u4f5c\u7b49\u3002","title":"\u62bd\u8c61"},{"location":"3.Documentation/how_jupyter_ipython_work/#ipython","text":"\u5f53\u60a8\u952e\u5165 ipython \u65f6\uff0c\u60a8\u5c06\u83b7\u5f97\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u7684\u539f\u59cb IPython \u63a5\u53e3\u3002 \u5b83\u505a\u4e86\u8fd9\u6837\u7684\u4e8b\u60c5: while True : code = input ( \">>> \" ) exec ( code ) \u5f53\u7136\uff0c\u5b83\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u5fc5\u987b\u5904\u7406\u591a\u884c\u4ee3\u7801\uff0c\u4f7f\u7528 readline \u5b8c\u6210\u5236\u8868\u7b26\uff0c\u9b54\u672f\u547d\u4ee4\u7b49\u7b49\u3002 \u4f46\u8be5\u6a21\u578b\u5c31\u50cf\u4ee3\u7801\u793a\u4f8b\uff1a\u63d0\u793a\u7528\u6237\u8f93\u5165\u4e00\u4e9b\u4ee3\u7801\uff0c\u5f53\u4ed6\u4eec\u8f93\u5165\u4ee3\u7801\u65f6\uff0c\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u6267\u884c\u5b83\u3002 \u6b64\u6a21\u578b\u901a\u5e38\u79f0\u4e3a REPL \u6216 Read-Eval-Print-Loop\u3002","title":"\u7ec8\u7aef IPython"},{"location":"3.Documentation/how_jupyter_ipython_work/#ipython_1","text":"\u6240\u6709\u5176\u4ed6\u63a5\u53e3 - Notebook\uff0cQt \u63a7\u5236\u53f0\uff0c\u7ec8\u7aef\u4e2d\u7684 ipython \u63a7\u5236\u53f0\u548c\u7b2c\u4e09\u65b9\u63a5\u53e3 - \u90fd\u4f7f\u7528 IPython \u5185\u6838\u3002 IPython \u5185\u6838\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\uff0c\u8d1f\u8d23\u8fd0\u884c\u7528\u6237\u4ee3\u7801\uff0c\u4ee5\u53ca\u8ba1\u7b97\u53ef\u80fd\u7684\u5b8c\u6210\u60c5\u51b5\u3002 \u524d\u7aef\uff0c\u5982\u7b14\u8bb0\u672c\u6216 Qt \u63a7\u5236\u53f0\uff0c\u4f7f\u7528\u901a\u8fc7 ZeroMQ \u5957\u63a5\u5b57\u53d1\u9001\u7684 JSON \u6d88\u606f\u4e0e IPython \u5185\u6838\u901a\u4fe1;\u5728 Jupyter \u7684 Messaging \u4e2d\u63cf\u8ff0\u4e86\u524d\u7aef\u548c IPython \u5185\u6838\u4e4b\u95f4\u4f7f\u7528\u7684\u534f\u8bae\u3002 \u5185\u6838\u7684\u6838\u5fc3\u6267\u884c\u673a\u5236\u4e0e\u7ec8\u7aef IPython \u5171\u4eab: \u5185\u6838\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u8fde\u63a5\u5230\u591a\u4e2a\u524d\u7aef\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u524d\u7aef\u5c06\u53ef\u4ee5\u8bbf\u95ee\u76f8\u540c\u7684\u53d8\u91cf\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u65e8\u5728\u5141\u8bb8\u57fa\u4e8e\u76f8\u540c\u5185\u6838\u8f7b\u677e\u5f00\u53d1\u4e0d\u540c\u7684\u524d\u7aef\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5f00\u53d1\u8fd9\u4e9b\u8bed\u8a00\u7684\u5185\u6838\u6765\u652f\u6301\u540c\u4e00\u524d\u7aef\u7684\u65b0\u8bed\u8a00\uff0c\u5e76\u4e14\u6211\u4eec\u6b63\u5728\u6539\u8fdb IPython \u4ee5\u4f7f\u5176\u66f4\u52a0\u5b9e\u7528\u3002 \u4eca\u5929\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u53e6\u4e00\u79cd\u8bed\u8a00\u5f00\u53d1\u5185\u6838\u3002 \u5305\u88c5\u5668\u5185\u6838\u91cd\u7528 IPython \u4e2d\u7684\u901a\u4fe1\u673a\u5236\uff0c\u5e76\u4ec5\u5b9e\u73b0\u6838\u5fc3\u6267\u884c\u90e8\u5206\u3002 \u672c\u673a\u5185\u6838\u4ee5\u76ee\u6807\u8bed\u8a00\u5b9e\u73b0\u6267\u884c\u548c\u901a\u4fe1: \u5bf9\u4e8e\u5177\u6709\u826f\u597d Python \u5305\u88c5\u7684\u8bed\u8a00\uff08\u5982 octave_kernel\uff09\uff0c\u6216\u8005\u5b9e\u73b0\u901a\u4fe1\u673a\u5236\uff08\u5982 bash_kernel\uff09\u4e0d\u5207\u5b9e\u9645\u7684\u8bed\u8a00\uff0c\u5305\u88c5\u5668\u5185\u6838\u66f4\u5bb9\u6613\u5feb\u901f\u7f16\u5199\u3002 \u4f7f\u7528\u5b83\u4eec\u7684\u793e\u533a\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u7ef4\u62a4\u672c\u673a\u5185\u6838\uff0c\u4f8b\u5982 IJulia \u6216 IHaskell\u3002 See also \u4e3aJupyter\u5236\u4f5c\u5185\u6838 \u5185\u6838","title":"IPython \u5185\u6838"},{"location":"3.Documentation/how_jupyter_ipython_work/#_2","text":"\u7b14\u8bb0\u672c\u524d\u7aef\u505a\u4e86\u989d\u5916\u7684\u4e8b\u60c5\u3002 \u9664\u4e86\u8fd0\u884c\u4ee3\u7801\u4e4b\u5916\uff0c\u5b83\u8fd8\u5c06\u4ee3\u7801\u548c\u8f93\u51fa\u4ee5\u53ca\u964d\u4ef7\u7b14\u8bb0\u5b58\u50a8\u5728\u540d\u4e3a notebook \u7684\u53ef\u7f16\u8f91\u6587\u6863\u4e2d\u3002 \u4fdd\u5b58\u65f6\uff0c\u4f1a\u5c06\u5176\u4ece\u6d4f\u89c8\u5668\u53d1\u9001\u5230\u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0c\u7b14\u8bb0\u672c\u670d\u52a1\u5668\u5c06\u5176\u4f5c\u4e3a\u5e26\u6709.ipynb \u6269\u5c55\u540d\u7684 JSON \u6587\u4ef6\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u3002 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u662f\u5185\u6838\uff0c\u8d1f\u8d23\u4fdd\u5b58\u548c\u52a0\u8f7d\u7b14\u8bb0\u672c\uff0c\u56e0\u6b64\u5373\u4f7f\u60a8\u6ca1\u6709\u8be5\u8bed\u8a00\u7684\u5185\u6838\uff0c\u60a8\u4e5f\u53ef\u4ee5\u7f16\u8f91\u7b14\u8bb0\u672c - \u60a8\u5c06\u65e0\u6cd5\u8fd0\u884c\u4ee3\u7801\u3002 \u7b14\u8bb0\u672c\u670d\u52a1\u5668\u800c\u4e0d\u662f\u5185\u6838\u8d1f\u8d23\u4fdd\u5b58\u548c\u52a0\u8f7d\u7b14\u8bb0\u672c\uff0c\u56e0\u6b64\u5373\u4f7f\u60a8\u6ca1\u6709\u8be5\u8bed\u8a00\u7684\u5185\u6838\uff0c\u4e5f\u53ef\u4ee5\u7f16\u8f91\u7b14\u8bb0\u672c - \u60a8\u5c06\u65e0\u6cd5\u8fd0\u884c\u4ee3\u7801\u3002","title":"\u7b14\u8bb0\u672c"},{"location":"3.Documentation/how_jupyter_ipython_work/#_3","text":"Jupyter \u4e2d\u7684 Nbconvert \u5de5\u5177\u5c06\u7b14\u8bb0\u672c\u6587\u4ef6\u8f6c\u6362\u4e3a\u5176\u4ed6\u683c\u5f0f\uff0c\u4f8b\u5982 HTML\uff0cLaTeX \u6216 reStructuredText\u3002 \u6b64\u8f6c\u6362\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u6b65\u9aa4: \u9884\u5904\u7406\u5668\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u7b14\u8bb0\u672c\u3002 \u4f8b\u5982\u3002 ExecutePreprocessor \u8fd0\u884c\u7b14\u8bb0\u672c\u4e2d\u7684\u4ee3\u7801\u5e76\u66f4\u65b0\u8f93\u51fa\u3002 \u5bfc\u51fa\u5668\u5c06\u7b14\u8bb0\u672c\u8f6c\u6362\u4e3a\u53e6\u4e00\u79cd\u6587\u4ef6\u683c\u5f0f\u3002 \u5927\u591a\u6570\u51fa\u53e3\u5546\u90fd\u4f7f\u7528\u6a21\u677f\u3002 \u540e\u5904\u7406\u5668\u5904\u7406\u5bfc\u51fa\u751f\u6210\u7684\u6587\u4ef6\u3002 nbviewer \u7f51\u7ad9\u4f7f\u7528 nbconvert \u548c HTML \u5bfc\u51fa\u5668\u3002 \u5f53\u60a8\u4e3a\u5176\u63d0\u4f9b URL \u65f6\uff0c\u5b83\u4f1a\u4ece\u8be5 URL \u83b7\u53d6\u7b14\u8bb0\u672c\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a HTML\uff0c\u5e76\u5c06\u8be5 HTML \u63d0\u4f9b\u7ed9\u60a8\u3002","title":"\u5c06\u7b14\u8bb0\u672c\u5bfc\u51fa\u4e3a\u5176\u4ed6\u683c\u5f0f"},{"location":"3.Documentation/how_jupyter_ipython_work/#ipythonparallel","text":"IPython \u8fd8\u5305\u62ec\u4e00\u4e2a\u5e76\u884c\u8ba1\u7b97\u6846\u67b6\uff0cIPython.parallel\u3002 \u8fd9\u5141\u8bb8\u60a8\u63a7\u5236\u8bb8\u591a\u5355\u72ec\u7684\u5f15\u64ce\uff0c\u8fd9\u4e9b\u5f15\u64ce\u662f\u4e0a\u8ff0 IPython \u5185\u6838\u7684\u6269\u5c55\u7248\u672c\u3002","title":"IPython.parallel"},{"location":"3.Documentation/visual_overview/","text":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0 \u00b6 \u9879\u76ee\u5173\u7cfb\u7684\u9ad8\u7ea7\u89c6\u89c9\u6982\u8ff0","title":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0"},{"location":"3.Documentation/visual_overview/#_1","text":"\u9879\u76ee\u5173\u7cfb\u7684\u9ad8\u7ea7\u89c6\u89c9\u6982\u8ff0","title":"\u9879\u76ee\u7684\u53ef\u89c6\u5316\u6982\u8ff0"},{"location":"4.Cases/","text":"\u53d9\u4e8b\u548c\u7528\u4f8b \u00b6 \u4ec0\u4e48\u662f\u53d9\u4e8b\uff1f \u00b6 \u53d9\u4e8b\u5177\u6709\u534f\u4f5c\u6027\uff0c\u53ef\u5171\u4eab\u6027\uff0c\u53ef\u53d1\u5e03\u6027\u548c\u53ef\u91cd\u590d\u6027\u3002 \u6211\u4eec\u76f8\u4fe1 Narratives \u901a\u8fc7\u5206\u4eab\u60a8\u5bf9 Jupyter \u9879\u76ee\u7684\u4f7f\u7528\uff0c\u90e8\u7f72\u7684\u6280\u672f\u7ec6\u8282\u4ee5\u53ca\u5b89\u88c5\u548c\u914d\u7f6e\u6280\u5de7\u6765\u5e2e\u52a9\u60a8\u81ea\u5df1\u548c\u5176\u4ed6\u7814\u7a76\u4eba\u5458\uff0c\u4ee5\u4fbf\u5176\u4ed6\u4eba\u53ef\u4ee5\u4ece\u60a8\u7684\u7ecf\u9a8c\u4e2d\u5b66\u4e60\u3002 \u7b14\u8bb0\u672c\u53d9\u4e8b \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 JupyterHub \u53d9\u4e8b \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u53d9\u4e8b - \u6784\u5efa\u5757 \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 jupyter \u7528\u4e8e\u6570\u636e\u79d1\u5b66 Jupyter \u548c\u79d1\u5b66\u8ba1\u7b97 Jupyter \u5728\u6559\u80b2\u65b9\u9762","title":"\u53d9\u4e8b\u548c\u7528\u4f8b"},{"location":"4.Cases/#_1","text":"","title":"\u53d9\u4e8b\u548c\u7528\u4f8b"},{"location":"4.Cases/#_2","text":"\u53d9\u4e8b\u5177\u6709\u534f\u4f5c\u6027\uff0c\u53ef\u5171\u4eab\u6027\uff0c\u53ef\u53d1\u5e03\u6027\u548c\u53ef\u91cd\u590d\u6027\u3002 \u6211\u4eec\u76f8\u4fe1 Narratives \u901a\u8fc7\u5206\u4eab\u60a8\u5bf9 Jupyter \u9879\u76ee\u7684\u4f7f\u7528\uff0c\u90e8\u7f72\u7684\u6280\u672f\u7ec6\u8282\u4ee5\u53ca\u5b89\u88c5\u548c\u914d\u7f6e\u6280\u5de7\u6765\u5e2e\u52a9\u60a8\u81ea\u5df1\u548c\u5176\u4ed6\u7814\u7a76\u4eba\u5458\uff0c\u4ee5\u4fbf\u5176\u4ed6\u4eba\u53ef\u4ee5\u4ece\u60a8\u7684\u7ecf\u9a8c\u4e2d\u5b66\u4e60\u3002 \u7b14\u8bb0\u672c\u53d9\u4e8b \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 JupyterHub \u53d9\u4e8b \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u53d9\u4e8b - \u6784\u5efa\u5757 \u63cf\u8ff0 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 jupyter \u7528\u4e8e\u6570\u636e\u79d1\u5b66 Jupyter \u548c\u79d1\u5b66\u8ba1\u7b97 Jupyter \u5728\u6559\u80b2\u65b9\u9762","title":"\u4ec0\u4e48\u662f\u53d9\u4e8b\uff1f"},{"location":"4.Cases/data_science/","text":"\u6570\u636e\u79d1\u5b66 \u00b6 \u672c\u9875\u9762\u7684\u76ee\u7684\u662f\u7a81\u51fa\u5185\u6838\u548c\u5176\u4ed6\u5728\u6570\u636e\u79d1\u5b66\u4e2d\u4f7f\u7528 Jupyter \u7684\u6838\u5fc3\u9879\u76ee\u3002 \u672c\u9875\u9762\u5e76\u4e0d\u662f\u5168\u9762\u6216\u516c\u6b63\u7684\uff0c\u800c\u662f\u57fa\u4e8e\u6211\u4eec\u4e0e\u7528\u6237\u7684\u4e92\u52a8\uff0c\u63d0\u4f9b\u5173\u4e8e Jupyter \u5728\u6570\u636e\u79d1\u5b66\u4e2d\u7684\u4f7f\u7528\u7684\u89c1\u89e3\u3002 \u4ee5\u4e0b Jupyter \u5185\u6838\u5e7f\u6cdb\u7528\u4e8e\u6570\u636e\u79d1\u5b66: python IPython ( GitHub Repo ) R IRkernel ( \u6587\u6863 , GitHub Repo ) IRdisplay ( GitHub Repo ) repr ( GitHub Repo ) Julia IJulia Kernel ( GitHub Repo ) Interactive Widgets ( GitHub Repo ) Bash ( GitHub Repo )","title":"\u6570\u636e\u79d1\u5b66"},{"location":"4.Cases/data_science/#_1","text":"\u672c\u9875\u9762\u7684\u76ee\u7684\u662f\u7a81\u51fa\u5185\u6838\u548c\u5176\u4ed6\u5728\u6570\u636e\u79d1\u5b66\u4e2d\u4f7f\u7528 Jupyter \u7684\u6838\u5fc3\u9879\u76ee\u3002 \u672c\u9875\u9762\u5e76\u4e0d\u662f\u5168\u9762\u6216\u516c\u6b63\u7684\uff0c\u800c\u662f\u57fa\u4e8e\u6211\u4eec\u4e0e\u7528\u6237\u7684\u4e92\u52a8\uff0c\u63d0\u4f9b\u5173\u4e8e Jupyter \u5728\u6570\u636e\u79d1\u5b66\u4e2d\u7684\u4f7f\u7528\u7684\u89c1\u89e3\u3002 \u4ee5\u4e0b Jupyter \u5185\u6838\u5e7f\u6cdb\u7528\u4e8e\u6570\u636e\u79d1\u5b66: python IPython ( GitHub Repo ) R IRkernel ( \u6587\u6863 , GitHub Repo ) IRdisplay ( GitHub Repo ) repr ( GitHub Repo ) Julia IJulia Kernel ( GitHub Repo ) Interactive Widgets ( GitHub Repo ) Bash ( GitHub Repo )","title":"\u6570\u636e\u79d1\u5b66"},{"location":"4.Cases/education/","text":"\u6559\u80b2\u65b9\u9762 \u00b6 \u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002 \u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u6559\u80b2\u65b9\u9762"},{"location":"4.Cases/education/#_1","text":"\u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002 \u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u6559\u80b2\u65b9\u9762"},{"location":"4.Cases/narrative-notebook/","text":"\u7b14\u8bb0\u672c\u53d9\u4e8b \u00b6 \u63cf\u8ff0 \u00b6 \u7b14\u8bb0\u672c\u53d9\u4e8b\u63a2\u8ba8\u4e86 Jupyter \u7b14\u8bb0\u672c\u5728\u5404\u79cd\u5e94\u7528\u4e2d\u7684\u7528\u9014\u3002 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 \u4f7f\u7528 Notebook \u8fdb\u884c\u6570\u636e\u63a2\u7d22 \u4f7f\u7528\u6269\u5c55\u548c\u5c0f\u90e8\u4ef6 \u4f7f\u7528 nbconvert \u8fdb\u884c\u4ee3\u7801\u6267\u884c\u548c\u5de5\u4f5c\u6d41\u7b80\u5316 \u4f7f\u7528 nbconvert \u8fdb\u884c\u53d1\u5e03 \u4f7f\u7528\u591a\u8bed\u8a00\u5185\u6838 \u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u7b14\u8bb0\u672c\u53d9\u4e8b"},{"location":"4.Cases/narrative-notebook/#_1","text":"","title":"\u7b14\u8bb0\u672c\u53d9\u4e8b"},{"location":"4.Cases/narrative-notebook/#_2","text":"\u7b14\u8bb0\u672c\u53d9\u4e8b\u63a2\u8ba8\u4e86 Jupyter \u7b14\u8bb0\u672c\u5728\u5404\u79cd\u5e94\u7528\u4e2d\u7684\u7528\u9014\u3002","title":"\u63cf\u8ff0"},{"location":"4.Cases/narrative-notebook/#_3","text":"\u4f7f\u7528 Notebook \u8fdb\u884c\u6570\u636e\u63a2\u7d22 \u4f7f\u7528\u6269\u5c55\u548c\u5c0f\u90e8\u4ef6 \u4f7f\u7528 nbconvert \u8fdb\u884c\u4ee3\u7801\u6267\u884c\u548c\u5de5\u4f5c\u6d41\u7b80\u5316 \u4f7f\u7528 nbconvert \u8fdb\u884c\u53d1\u5e03 \u4f7f\u7528\u591a\u8bed\u8a00\u5185\u6838 \u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"4.Cases/narrative-other/","text":"\u6784\u5efa\u5757 \u00b6 \u63cf\u8ff0 \u00b6 \u672c\u8282\u4ecb\u7ecd\u5c06\u4e0d\u540c\u9879\u76ee\u96c6\u6210\u5728\u4e00\u8d77\u7684\u4e00\u4e9b\u793a\u4f8b\u3002 \u8fd9\u4e9b\u9879\u76ee\u6784\u6210\u4e86\u521b\u65b0\u670d\u52a1\u7684\u57fa\u7840\uff0c\u5e76\u4e3a\u672a\u6765\u7684\u5e94\u7528\u63d0\u4f9b\u4e86\u6784\u5efa\u6a21\u5757 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 \u5173\u4e8e\u521b\u5efa\u4eea\u8868\u677f\u7684\u53d9\u8ff0 \u5173\u4e8e Thebe \u7684\u53d9\u4e8b \u5173\u4e8e\u6c22\u7684\u53d9\u8ff0","title":"\u6784\u5efa\u5757"},{"location":"4.Cases/narrative-other/#_1","text":"","title":"\u6784\u5efa\u5757"},{"location":"4.Cases/narrative-other/#_2","text":"\u672c\u8282\u4ecb\u7ecd\u5c06\u4e0d\u540c\u9879\u76ee\u96c6\u6210\u5728\u4e00\u8d77\u7684\u4e00\u4e9b\u793a\u4f8b\u3002 \u8fd9\u4e9b\u9879\u76ee\u6784\u6210\u4e86\u521b\u65b0\u670d\u52a1\u7684\u57fa\u7840\uff0c\u5e76\u4e3a\u672a\u6765\u7684\u5e94\u7528\u63d0\u4f9b\u4e86\u6784\u5efa\u6a21\u5757","title":"\u63cf\u8ff0"},{"location":"4.Cases/narrative-other/#_3","text":"\u5173\u4e8e\u521b\u5efa\u4eea\u8868\u677f\u7684\u53d9\u8ff0 \u5173\u4e8e Thebe \u7684\u53d9\u4e8b \u5173\u4e8e\u6c22\u7684\u53d9\u8ff0","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"4.Cases/narrative/","text":"JupyterHub \u53d9\u4e8b \u00b6 \u63cf\u8ff0 \u00b6 JupyterHub Narratives \u4e3a\u4e00\u7ec4\u7528\u6237\u63a2\u7d22 Jupyter \u7b14\u8bb0\u672c\u7684\u90e8\u7f72\u548c\u6269\u5c55\u3002 JupyterHub \u5141\u8bb8\u7075\u6d3b\u914d\u7f6e\u548c\u90e8\u7f72\uff0c\u8fd9\u4f7f\u5f97 JupyterHub \u5bf9\u6559\u80b2\uff0c\u884c\u4e1a\u7814\u7a76\u56e2\u961f\u548c\u670d\u52a1\u63d0\u4f9b\u5546\u6709\u4ef7\u503c\u3002 \u5728\u8fd9\u4e9b\u53d9\u8ff0\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u90e8\u7f72\uff0c\u90e8\u7f72\u4f18\u52bf\u548c\u6700\u4f73\u5b9e\u8df5\u65b9\u9762\u7684\u5dee\u5f02\u3002 \u53d9\u8ff0\u6027\u7684\u4f8b\u5b50 \u00b6 \u4e00\u4e2a\u57fa\u672c\u7684 JupyterHub \u90e8\u7f72\u3002 \u4f7f\u7528 Docker \u7684 JupyterHub \u53c2\u8003\u90e8\u7f72 \u3002 \u4f7f\u7528 JupyterHub \u548c nbgrader \u5728\u5355\u4e2a\u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u53c2\u8003\u90e8\u7f72\u548c Ansible \u811a\u672c\u6765\u81ea\u52a8\u5316\u8bbe\u7f6e\u6765\u6559\u6388\u8bfe\u7a0b \u3002 \u4f7f\u7528 JupyterHub\uff0cnbgrader \u548c\u5bb9\u5668\u6559\u6388\u8bfe\u7a0b JupyterHub \u4f7f\u7528\u5305\u62ec Docker \u5728\u5185\u7684\u5bb9\u5668\u8fdb\u884c\u90e8\u7f72","title":"JupyterHub \u53d9\u4e8b"},{"location":"4.Cases/narrative/#jupyterhub","text":"","title":"JupyterHub \u53d9\u4e8b"},{"location":"4.Cases/narrative/#_1","text":"JupyterHub Narratives \u4e3a\u4e00\u7ec4\u7528\u6237\u63a2\u7d22 Jupyter \u7b14\u8bb0\u672c\u7684\u90e8\u7f72\u548c\u6269\u5c55\u3002 JupyterHub \u5141\u8bb8\u7075\u6d3b\u914d\u7f6e\u548c\u90e8\u7f72\uff0c\u8fd9\u4f7f\u5f97 JupyterHub \u5bf9\u6559\u80b2\uff0c\u884c\u4e1a\u7814\u7a76\u56e2\u961f\u548c\u670d\u52a1\u63d0\u4f9b\u5546\u6709\u4ef7\u503c\u3002 \u5728\u8fd9\u4e9b\u53d9\u8ff0\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u90e8\u7f72\uff0c\u90e8\u7f72\u4f18\u52bf\u548c\u6700\u4f73\u5b9e\u8df5\u65b9\u9762\u7684\u5dee\u5f02\u3002","title":"\u63cf\u8ff0"},{"location":"4.Cases/narrative/#_2","text":"\u4e00\u4e2a\u57fa\u672c\u7684 JupyterHub \u90e8\u7f72\u3002 \u4f7f\u7528 Docker \u7684 JupyterHub \u53c2\u8003\u90e8\u7f72 \u3002 \u4f7f\u7528 JupyterHub \u548c nbgrader \u5728\u5355\u4e2a\u670d\u52a1\u5668\u4e0a\u4f7f\u7528\u53c2\u8003\u90e8\u7f72\u548c Ansible \u811a\u672c\u6765\u81ea\u52a8\u5316\u8bbe\u7f6e\u6765\u6559\u6388\u8bfe\u7a0b \u3002 \u4f7f\u7528 JupyterHub\uff0cnbgrader \u548c\u5bb9\u5668\u6559\u6388\u8bfe\u7a0b JupyterHub \u4f7f\u7528\u5305\u62ec Docker \u5728\u5185\u7684\u5bb9\u5668\u8fdb\u884c\u90e8\u7f72","title":"\u53d9\u8ff0\u6027\u7684\u4f8b\u5b50"},{"location":"4.Cases/science/","text":"\u79d1\u5b66\u8ba1\u7b97 \u00b6 \u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u79d1\u5b66\u8ba1\u7b97"},{"location":"4.Cases/science/#_1","text":"\u6211\u4eec\u6b63\u79ef\u6781\u81f4\u529b\u4e8e\u6587\u6863\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4e3a\u60a8\u6539\u8fdb\u3002\u8c22\u8c22\u4f60\u7684\u8010\u5fc3\u3002","title":"\u79d1\u5b66\u8ba1\u7b97"},{"location":"5.Hub/","text":"JupyterHub \u4e2d\u5fc3 \u00b6 \u7b14\u8bb0\u672c\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1 \u4ec0\u4e48\u662f JupyterHub\uff1f \u00b6 JupyterHub \u5c06\u7b14\u8bb0\u672c\u7684\u5f3a\u5927\u529f\u80fd\u5e26\u7ed9\u4e86\u7528\u6237\u7fa4\u3002\u5b83\u4f7f\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u8ba1\u7b97\u73af\u5883\u548c\u8d44\u6e90\uff0c\u800c\u65e0\u9700\u4e3a\u7528\u6237\u589e\u52a0\u5b89\u88c5\u548c\u7ef4\u62a4\u4efb\u52a1\u3002\u7528\u6237 - \u5305\u62ec\u5b66\u751f\uff0c\u7814\u7a76\u4eba\u5458\u548c\u6570\u636e\u79d1\u5b66\u5bb6 - \u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u4f7f\u7528\u5171\u4eab\u8d44\u6e90\u5b8c\u6210\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u8d44\u6e90\u53ef\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u6709\u6548\u7ba1\u7406\u3002 JupyterHub \u53ef\u4ee5\u5728\u4e91\u4e2d\u6216\u60a8\u81ea\u5df1\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u4ece\u800c\u53ef\u4ee5\u4e3a\u4e16\u754c\u4e0a\u4efb\u4f55\u7528\u6237\u63d0\u4f9b\u9884\u5148\u914d\u7f6e\u7684\u6570\u636e\u79d1\u5b66\u73af\u5883\u3002\u5b83\u53ef\u5b9a\u5236\u548c\u53ef\u6269\u5c55\uff0c\u9002\u7528\u4e8e\u5c0f\u578b\u548c\u5927\u578b\u56e2\u961f\uff0c\u5b66\u672f\u8bfe\u7a0b\u548c\u5927\u578b\u57fa\u7840\u8bbe\u65bd\u3002 JupyterHub \u7684\u4e3b\u8981\u529f\u80fd \u00b6 \u53ef\u5b9a\u5236 - JupyterHub \u53ef\u7528\u4e8e\u670d\u52a1\u4e8e\u5404\u79cd\u73af\u5883\u3002\u5b83\u652f\u6301 Jupyter \u670d\u52a1\u5668\u7684\u51e0\u5341\u4e2a\u5185\u6838\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u5404\u79cd\u7528\u6237\u754c\u9762\uff0c\u5305\u62ec Jupyter Notebook\uff0cJupyter Lab\uff0cRStudio\uff0cnteract \u7b49\u3002 \u7075\u6d3b - \u53ef\u4ee5\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u914d\u7f6e JupyterHub\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u5bf9\u7528\u6237\u5b50\u96c6\u7684\u8bbf\u95ee\u3002\u8eab\u4efd\u9a8c\u8bc1\u662f\u53ef\u63d2\u5165\u7684\uff0c\u652f\u6301\u8bb8\u591a\u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\uff08\u4f8b\u5982 OAuth \u548c GitHub\uff09\u3002 \u53ef\u6269\u5c55 - JupyterHub \u662f\u5bb9\u5668\u53cb\u597d\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u4ee3\u5bb9\u5668\u6280\u672f\u8fdb\u884c\u90e8\u7f72\u3002\u5b83\u8fd8\u53ef\u4ee5\u5728 Kubernetes \u4e0a\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fd0\u884c\u591a\u8fbe\u6570\u4e07\u4e2a\u7528\u6237\u3002 \u4fbf\u643a\u5f0f - JupyterHub \u5b8c\u5168\u662f\u5f00\u6e90\u7684\uff0c\u65e8\u5728\u8fd0\u884c\u5728\u5404\u79cd\u57fa\u7840\u67b6\u6784\u4e0a\u3002\u8fd9\u5305\u62ec\u5546\u4e1a\u4e91\u63d0\u4f9b\u5546\uff0c\u865a\u62df\u673a\uff0c\u751a\u81f3\u662f\u60a8\u81ea\u5df1\u7684\u7b14\u8bb0\u672c\u786c\u4ef6\u3002 \u53ef\u4ee5\u5728 JupyterHub \u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u57fa\u7840 JupyterHub \u4ee3\u7801\u548c\u6280\u672f\u3002\u6b64\u5b58\u50a8\u5e93\u548c JupyterHub \u6587\u6863\u5305\u542b\u6709\u5173 JupyterHub \u5185\u90e8\uff0c\u5176\u81ea\u5b9a\u4e49\u53ca\u5176\u914d\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\u3002 \u90e8\u7f72 JupyterHub \u00b6 Jupyter \u793e\u533a\u7b56\u5212\u4e86\u4e24\u4e2a\u7528\u4e8e\u5728\u4e91\u4e2d\u90e8\u7f72\u7684 JupyterHub\u201c\u53d1\u884c\u7248\u201d\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u94fe\u63a5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u96f6\u5230 JupyterHub for Kubernetes \u4f7f\u7528 Docker \u5728 Kubernetes \u4e0a\u90e8\u7f72 JupyterHub\uff0c\u5141\u8bb8\u5b83\u4e3a\u5927\u91cf\u7528\u6237\u8fdb\u884c\u6709\u6548\u6269\u5c55\u548c\u7ef4\u62a4\u3002 Zero to JupyterHub \u662f\u4e00\u4e2a\u5feb\u901f\u90e8\u7f72 JupyterHub \u7684 Helm \u56fe\u8868\uff0c\u4ee5\u53ca\u5728 Kubernetes \u4e0a\u90e8\u7f72\u548c\u914d\u7f6e JupyterHub \u7684\u6307\u5357\u3002 Littlest JupyterHub \u662f\u4e00\u79cd\u4e13\u4e3a\u5c0f\u578b\u90e8\u7f72\u800c\u8bbe\u8ba1\u7684\u6700\u65b0\u7248\u672c\uff0c\u662f\u4e00\u79cd\u5728\u5355\u4e2a\u865a\u62df\u673a\u4e0a\u5b89\u88c5 JupyterHub \u7684\u8f7b\u91cf\u7ea7\u65b9\u6cd5\u3002 Littlest JupyterHub\uff08\u4e5f\u79f0\u4e3a TLJH\uff09\u63d0\u4f9b\u4e86\u6709\u5173\u5728\u591a\u4e2a\u4e91\u63d0\u4f9b\u5546\u4e0a\u521b\u5efa VM \u7684\u4fe1\u606f\u7684\u6307\u5357\uff0c\u4ee5\u53ca\u5b89\u88c5\u548c\u81ea\u5b9a\u4e49 JupyterHub \u4ee5\u4fbf\u7528\u6237\u53ef\u4ee5\u5728\u516c\u5171 URL \u4e0a\u8bbf\u95ee\u5b83\u3002 \u52a0\u5165\u793e\u533a \u00b6 \u50cf\u6240\u6709 Project Jupyter \u4e00\u6837\uff0cJupyterHub \u662f\u4e00\u4e2a\u5f00\u6e90\u548c\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6211\u4eec\u5f88\u4e50\u610f\u52a0\u5165\u6211\u4eec\u7684\u793e\u533a\uff0c\u8d21\u732e\u4ee3\u7801\uff0c\u65f6\u95f4\uff0c\u8bc4\u8bba\u6216\u8d5e\u8d4f\u3002 JupyterHub Gitter \u9891\u9053\u662f JupyterHub \u793e\u533a\u8ba8\u8bba JupyterHub \u6280\u672f\u53d1\u5c55\u4ee5\u53ca\u90e8\u7f72\u548c\u8c03\u8bd5\u7684\u6700\u4f73\u5b9e\u8df5\u7684\u5730\u65b9\u3002","title":"JupyterHub \u4e2d\u5fc3"},{"location":"5.Hub/#jupyterhub","text":"\u7b14\u8bb0\u672c\u7684\u591a\u7528\u6237\u7248\u672c\uff0c\u4e13\u4e3a\u516c\u53f8\uff0c\u6559\u5ba4\u548c\u7814\u7a76\u5b9e\u9a8c\u5ba4\u800c\u8bbe\u8ba1","title":"JupyterHub \u4e2d\u5fc3"},{"location":"5.Hub/#jupyterhub_1","text":"JupyterHub \u5c06\u7b14\u8bb0\u672c\u7684\u5f3a\u5927\u529f\u80fd\u5e26\u7ed9\u4e86\u7528\u6237\u7fa4\u3002\u5b83\u4f7f\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u8ba1\u7b97\u73af\u5883\u548c\u8d44\u6e90\uff0c\u800c\u65e0\u9700\u4e3a\u7528\u6237\u589e\u52a0\u5b89\u88c5\u548c\u7ef4\u62a4\u4efb\u52a1\u3002\u7528\u6237 - \u5305\u62ec\u5b66\u751f\uff0c\u7814\u7a76\u4eba\u5458\u548c\u6570\u636e\u79d1\u5b66\u5bb6 - \u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u4f7f\u7528\u5171\u4eab\u8d44\u6e90\u5b8c\u6210\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u8d44\u6e90\u53ef\u7531\u7cfb\u7edf\u7ba1\u7406\u5458\u6709\u6548\u7ba1\u7406\u3002 JupyterHub \u53ef\u4ee5\u5728\u4e91\u4e2d\u6216\u60a8\u81ea\u5df1\u7684\u786c\u4ef6\u4e0a\u8fd0\u884c\uff0c\u4ece\u800c\u53ef\u4ee5\u4e3a\u4e16\u754c\u4e0a\u4efb\u4f55\u7528\u6237\u63d0\u4f9b\u9884\u5148\u914d\u7f6e\u7684\u6570\u636e\u79d1\u5b66\u73af\u5883\u3002\u5b83\u53ef\u5b9a\u5236\u548c\u53ef\u6269\u5c55\uff0c\u9002\u7528\u4e8e\u5c0f\u578b\u548c\u5927\u578b\u56e2\u961f\uff0c\u5b66\u672f\u8bfe\u7a0b\u548c\u5927\u578b\u57fa\u7840\u8bbe\u65bd\u3002","title":"\u4ec0\u4e48\u662f JupyterHub\uff1f"},{"location":"5.Hub/#jupyterhub_2","text":"\u53ef\u5b9a\u5236 - JupyterHub \u53ef\u7528\u4e8e\u670d\u52a1\u4e8e\u5404\u79cd\u73af\u5883\u3002\u5b83\u652f\u6301 Jupyter \u670d\u52a1\u5668\u7684\u51e0\u5341\u4e2a\u5185\u6838\uff0c\u53ef\u7528\u4e8e\u670d\u52a1\u5404\u79cd\u7528\u6237\u754c\u9762\uff0c\u5305\u62ec Jupyter Notebook\uff0cJupyter Lab\uff0cRStudio\uff0cnteract \u7b49\u3002 \u7075\u6d3b - \u53ef\u4ee5\u4f7f\u7528\u8eab\u4efd\u9a8c\u8bc1\u914d\u7f6e JupyterHub\uff0c\u4ee5\u4fbf\u63d0\u4f9b\u5bf9\u7528\u6237\u5b50\u96c6\u7684\u8bbf\u95ee\u3002\u8eab\u4efd\u9a8c\u8bc1\u662f\u53ef\u63d2\u5165\u7684\uff0c\u652f\u6301\u8bb8\u591a\u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\uff08\u4f8b\u5982 OAuth \u548c GitHub\uff09\u3002 \u53ef\u6269\u5c55 - JupyterHub \u662f\u5bb9\u5668\u53cb\u597d\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u73b0\u4ee3\u5bb9\u5668\u6280\u672f\u8fdb\u884c\u90e8\u7f72\u3002\u5b83\u8fd8\u53ef\u4ee5\u5728 Kubernetes \u4e0a\u8fd0\u884c\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fd0\u884c\u591a\u8fbe\u6570\u4e07\u4e2a\u7528\u6237\u3002 \u4fbf\u643a\u5f0f - JupyterHub \u5b8c\u5168\u662f\u5f00\u6e90\u7684\uff0c\u65e8\u5728\u8fd0\u884c\u5728\u5404\u79cd\u57fa\u7840\u67b6\u6784\u4e0a\u3002\u8fd9\u5305\u62ec\u5546\u4e1a\u4e91\u63d0\u4f9b\u5546\uff0c\u865a\u62df\u673a\uff0c\u751a\u81f3\u662f\u60a8\u81ea\u5df1\u7684\u7b14\u8bb0\u672c\u786c\u4ef6\u3002 \u53ef\u4ee5\u5728 JupyterHub \u5b58\u50a8\u5e93\u4e2d\u627e\u5230\u57fa\u7840 JupyterHub \u4ee3\u7801\u548c\u6280\u672f\u3002\u6b64\u5b58\u50a8\u5e93\u548c JupyterHub \u6587\u6863\u5305\u542b\u6709\u5173 JupyterHub \u5185\u90e8\uff0c\u5176\u81ea\u5b9a\u4e49\u53ca\u5176\u914d\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\u3002","title":"JupyterHub \u7684\u4e3b\u8981\u529f\u80fd"},{"location":"5.Hub/#jupyterhub_3","text":"Jupyter \u793e\u533a\u7b56\u5212\u4e86\u4e24\u4e2a\u7528\u4e8e\u5728\u4e91\u4e2d\u90e8\u7f72\u7684 JupyterHub\u201c\u53d1\u884c\u7248\u201d\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u94fe\u63a5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u96f6\u5230 JupyterHub for Kubernetes \u4f7f\u7528 Docker \u5728 Kubernetes \u4e0a\u90e8\u7f72 JupyterHub\uff0c\u5141\u8bb8\u5b83\u4e3a\u5927\u91cf\u7528\u6237\u8fdb\u884c\u6709\u6548\u6269\u5c55\u548c\u7ef4\u62a4\u3002 Zero to JupyterHub \u662f\u4e00\u4e2a\u5feb\u901f\u90e8\u7f72 JupyterHub \u7684 Helm \u56fe\u8868\uff0c\u4ee5\u53ca\u5728 Kubernetes \u4e0a\u90e8\u7f72\u548c\u914d\u7f6e JupyterHub \u7684\u6307\u5357\u3002 Littlest JupyterHub \u662f\u4e00\u79cd\u4e13\u4e3a\u5c0f\u578b\u90e8\u7f72\u800c\u8bbe\u8ba1\u7684\u6700\u65b0\u7248\u672c\uff0c\u662f\u4e00\u79cd\u5728\u5355\u4e2a\u865a\u62df\u673a\u4e0a\u5b89\u88c5 JupyterHub \u7684\u8f7b\u91cf\u7ea7\u65b9\u6cd5\u3002 Littlest JupyterHub\uff08\u4e5f\u79f0\u4e3a TLJH\uff09\u63d0\u4f9b\u4e86\u6709\u5173\u5728\u591a\u4e2a\u4e91\u63d0\u4f9b\u5546\u4e0a\u521b\u5efa VM \u7684\u4fe1\u606f\u7684\u6307\u5357\uff0c\u4ee5\u53ca\u5b89\u88c5\u548c\u81ea\u5b9a\u4e49 JupyterHub \u4ee5\u4fbf\u7528\u6237\u53ef\u4ee5\u5728\u516c\u5171 URL \u4e0a\u8bbf\u95ee\u5b83\u3002","title":"\u90e8\u7f72 JupyterHub"},{"location":"5.Hub/#_1","text":"\u50cf\u6240\u6709 Project Jupyter \u4e00\u6837\uff0cJupyterHub \u662f\u4e00\u4e2a\u5f00\u6e90\u548c\u793e\u533a\u9a71\u52a8\u7684\u9879\u76ee\u3002\u6211\u4eec\u5f88\u4e50\u610f\u52a0\u5165\u6211\u4eec\u7684\u793e\u533a\uff0c\u8d21\u732e\u4ee3\u7801\uff0c\u65f6\u95f4\uff0c\u8bc4\u8bba\u6216\u8d5e\u8d4f\u3002 JupyterHub Gitter \u9891\u9053\u662f JupyterHub \u793e\u533a\u8ba8\u8bba JupyterHub \u6280\u672f\u53d1\u5c55\u4ee5\u53ca\u90e8\u7f72\u548c\u8c03\u8bd5\u7684\u6700\u4f73\u5b9e\u8df5\u7684\u5730\u65b9\u3002","title":"\u52a0\u5165\u793e\u533a"},{"location":"6.NBViewer/","text":"nbviewer \u00b6 \u5206\u4eab Jupyter \u7b14\u8bb0\u672c\u7684\u7b80\u5355\u65b9\u6cd5 \u7f16\u7a0b\u8bed\u8a00 \u00b6 IPython \u00b6 IRuby \u00b6 IJulia \u00b6 \u56fe\u4e66 \u00b6 \u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u7684 Python \u00b6 \u5965\u83b1\u5229\u4e66 \u00b6 \u6982\u7387\u89c4\u5212 \u00b6 \u6742\u9879 \u00b6 \u95ea\u7535\u6570\u636e\u53ef\u89c6\u5316 \u00b6 Bokeh \u7684\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316 \u00b6 Plotly \u7684\u4ea4\u4e92\u5f0f\u60c5\u8282 \u00b6 \u4f7f\u7528 Matplotlib \u7684 XKCD \u56fe \u00b6 \u7528\u4e8e\u89c6\u89c9\u7814\u7a76\u7684 Python \u00b6 \u975e\u53c2\u6570\u56de\u5f52 \u00b6 \u504f\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u5668 \u00b6 \u5bf9\u5f53\u524d\u4e8b\u4ef6\u7684\u5206\u6790 \u00b6 Jaynes-Cummings \u6a21\u578b \u00b6","title":"nbviewer"},{"location":"6.NBViewer/#nbviewer","text":"\u5206\u4eab Jupyter \u7b14\u8bb0\u672c\u7684\u7b80\u5355\u65b9\u6cd5","title":"nbviewer"},{"location":"6.NBViewer/#_1","text":"","title":"\u7f16\u7a0b\u8bed\u8a00"},{"location":"6.NBViewer/#ipython","text":"","title":"IPython"},{"location":"6.NBViewer/#iruby","text":"","title":"IRuby"},{"location":"6.NBViewer/#ijulia","text":"","title":"IJulia"},{"location":"6.NBViewer/#_2","text":"","title":"\u56fe\u4e66"},{"location":"6.NBViewer/#python","text":"","title":"\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u7684 Python"},{"location":"6.NBViewer/#_3","text":"","title":"\u5965\u83b1\u5229\u4e66"},{"location":"6.NBViewer/#_4","text":"","title":"\u6982\u7387\u89c4\u5212"},{"location":"6.NBViewer/#_5","text":"","title":"\u6742\u9879"},{"location":"6.NBViewer/#_6","text":"","title":"\u95ea\u7535\u6570\u636e\u53ef\u89c6\u5316"},{"location":"6.NBViewer/#bokeh","text":"","title":"Bokeh \u7684\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316"},{"location":"6.NBViewer/#plotly","text":"","title":"Plotly \u7684\u4ea4\u4e92\u5f0f\u60c5\u8282"},{"location":"6.NBViewer/#matplotlib-xkcd","text":"","title":"\u4f7f\u7528 Matplotlib \u7684 XKCD \u56fe"},{"location":"6.NBViewer/#python_1","text":"","title":"\u7528\u4e8e\u89c6\u89c9\u7814\u7a76\u7684 Python"},{"location":"6.NBViewer/#_7","text":"","title":"\u975e\u53c2\u6570\u56de\u5f52"},{"location":"6.NBViewer/#_8","text":"","title":"\u504f\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u5668"},{"location":"6.NBViewer/#_9","text":"","title":"\u5bf9\u5f53\u524d\u4e8b\u4ef6\u7684\u5206\u6790"},{"location":"6.NBViewer/#jaynes-cummings","text":"","title":"Jaynes-Cummings \u6a21\u578b"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/","text":"\u6316\u6398\u793e\u4ea4\u7f51\u7edc\uff0c\u7b2c 3 \u7248 \u00b6 \u6316\u6398\u793e\u4ea4\u7f51\u7edc\u7684\u5b98\u65b9\u4ee3\u7801\u5e93\uff0c\u7b2c 3 \u7248\uff08O'Reilly\uff0c2019\uff09 \u3002 \u8be5\u4e66\u53ef\u4ece \u4e9a\u9a6c\u900a \u548c \u5728\u7ebf\u91ce\u751f\u52a8\u7269\u56ed\u4e66\u7c4d \u83b7\u53d6. The notebooks folder of this repository contains the latest bug-fixed sample code used in the book chapters. \u5feb\u901f\u5f00\u59cb \u00b6 There are several ways to get up and running with the sample code in MTSW, which we detail in this section, or you can follow along with the youtube video below: Mac OS \u00b6 Windows 10 \u00b6 \u7b2c 1 \u6b65\uff1a\u514b\u9686\u6216\u4e0b\u8f7d\u5b58\u50a8\u5e93 \u00b6 If you are familiar with git and have a git client installed on your machine, simply clone the repository to your own machine. However, it is up to you to install all the dependencies for the repository. The necessary Python libraries are detailed in the requirements.txt file. The other requirements are detailed in the Requirements section below. If you prefer not to use a git client, you can instead download a zip archive directly from GitHub. The only disadvantage of this approach is that in order to synchronize your copy of the code with any future bug fixes, you will need to download the entire repository again. You are still responsible for installing any dependencies yourself. \u4f7f\u7528 Docker \u00b6 A better way that also ensures that all dependencies are downloaded is using Docker. Docker is a tool for creating a \"containerized\" version of software that is independent of the underlying operating system. The included Dockerfile is the recipe that creates an \"image\" of all the software you need to run the sample code for MTSW, including all of the dependencies. This software image runs within the container managed by the Docker client on your machine. The authors recommend using Docker. You won't have to worry about which operating system you're using, whether Windows, MacOS, or some Linux variant. You also won't have to worry about installing anything beyond the Docker client. \u7b2c 2 \u6b65\uff1a\u5b89\u88c5 Docker \u00b6 Visit the Docker Hub and download the free community edition of Docker Desktop for your operating system. NOTE that versions of Mac OS previous to Sierra 10.12 or versions of Microsoft Windows previous to 10 Professional or Enterprise 64-bit will require that you install the Docker Toolbox instead. After installing Docker Desktop, run the Docker Desktop application. We will be accessing it from the command line. To make sure that it is installed correctly, type the following from the command line. docker --version This should display something like Docker version 18.09.0, build 4d60db4 If so, congratulations, you've successfully installed Docker. \u7b2c 3 \u6b65\uff1a\u4e0b\u8f7d\u6216\u6784\u5efa\u6b64\u5b58\u50a8\u5e93\u7684 Docker \u955c\u50cf \u00b6 \u9009\u9879 1\uff1a\u4ece Docker Hub \u4e0b\u8f7d\u201cmining-the-social-web-3rd-edition\u201d\u56fe\u50cf \u00b6 The Docker image of has been pre-built and is hosted on Docker Hub . To download this (~2GB) image, type the following command into your terminal: docker pull mikhailklassen/mining-the-social-web-3rd-edition:latest Next, let's tag the image to something a little shorter. Type the following command into the terminal: docker tag mikhailklassen/mining-the-social-web-3rd-edition:latest mtsw3e:latest \u9009\u9879 2\uff1a\u81ea\u5df1\u6784\u5efa\u6620\u50cf \u00b6 The Docker image is build using the Dockerfile , which is a recipe that tells the Docker client how to build the image. From within the same directory as this repository's Dockerfile , type docker build -t mtsw3e . This will \"tag\" your image with the name mtsw3e . Building the image will take some time. The Docker client has to download a base image and then install all of the dependencies. You will only need to do this once, provided you don't delete the image from your computer. Some users report the following error (noted on MacOS): $ docker build -t mtsw3e . ERRO [ 0000 ] failed to dial gRPC: unable to upgrade to h2c, received 502 context canceled If this happens to you, disable the experimental features by unchecking the option in your Docker preferences. Once you've built the image you should see it in your list of images: $ docker image ls REPOSITORY TAG IMAGE ID mtsw3e latest 326387cea398 \u7b2c 4 \u6b65\uff1a\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f \u00b6 The last step is to run docker-compose , which will launch the container we just built and connect it to a MongoDB database running in a separate container, which is needed for some of the code examples $ docker-compose up The output will look something like this: You will see the instruction on the screen to copy/paste the URL into your web browser's search bar. Copy and paste the version of this URL that points to 127.0.0.1 , e.g. http://127.0.0.1:8888/?token=9f568d96a24a950fb9525ee2746fcdd1c04e035122067be3 If you do this, you should see a Jupyter Notebook server running and a list of all the Jupyter Notebooks that are a part of this repository. When you are down working with the sample code, shut down the container as follows: hit CTRL-C in the terminal window where your app is running to interrupt Docker. Next, type docker-compose down This performs a clean shutdown of any infrastructure set up by Docker and stops all running containers. \u5728\u6ca1\u6709 Docker Compose \u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f \u00b6 If you're not interested in any of the MongoDB examples in Chapter 9, you can run the MTSW3e container by itself without needing to use docker-compose . To do so, run the command from within the repository's root directory: docker run --rm -p 8888:8888 -v \"$PWD\"/notebooks:/home/jovyan/notebooks mtsw3e:latest \u8981\u6c42 \u00b6 If you just to run the sample code on your own machine outside of any Docker container, you will need to install all the requirements yourself. Assuming you have Python 3.3+ installed, it is best practice to create a virtual environment : python3 -m venv mtsw This creates a folder called mtsw . Change into this directory and activate the virtual environment. On Mac OS or Linux: cd mtsw source bin/activate Then use pip to install all requirements: pip install -r requirements.txt You will also need to install the Java Development Kit , which is required by boilerpipe. If you wish to complete all the examples in Chapter 9, you will need to install MongoDB . \u7279\u7ea6 \u00b6 There are several ways in which you can contribute to the project. If you discover a bug in any of the code, the first thing to do is to create a new issue under the Issues tab of this repository. If you are a developer and would like to contribute a bug fix, please feel free to fork the repository and submit a pull request.","title":"\u6316\u6398\u793e\u4ea4\u7f51\u7edc\uff0c\u7b2c 3 \u7248"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#3","text":"\u6316\u6398\u793e\u4ea4\u7f51\u7edc\u7684\u5b98\u65b9\u4ee3\u7801\u5e93\uff0c\u7b2c 3 \u7248\uff08O'Reilly\uff0c2019\uff09 \u3002 \u8be5\u4e66\u53ef\u4ece \u4e9a\u9a6c\u900a \u548c \u5728\u7ebf\u91ce\u751f\u52a8\u7269\u56ed\u4e66\u7c4d \u83b7\u53d6. The notebooks folder of this repository contains the latest bug-fixed sample code used in the book chapters.","title":"\u6316\u6398\u793e\u4ea4\u7f51\u7edc\uff0c\u7b2c 3 \u7248"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#_1","text":"There are several ways to get up and running with the sample code in MTSW, which we detail in this section, or you can follow along with the youtube video below:","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#mac-os","text":"","title":"Mac OS"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#windows-10","text":"","title":"Windows 10"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#1","text":"If you are familiar with git and have a git client installed on your machine, simply clone the repository to your own machine. However, it is up to you to install all the dependencies for the repository. The necessary Python libraries are detailed in the requirements.txt file. The other requirements are detailed in the Requirements section below. If you prefer not to use a git client, you can instead download a zip archive directly from GitHub. The only disadvantage of this approach is that in order to synchronize your copy of the code with any future bug fixes, you will need to download the entire repository again. You are still responsible for installing any dependencies yourself.","title":"\u7b2c 1 \u6b65\uff1a\u514b\u9686\u6216\u4e0b\u8f7d\u5b58\u50a8\u5e93"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#docker","text":"A better way that also ensures that all dependencies are downloaded is using Docker. Docker is a tool for creating a \"containerized\" version of software that is independent of the underlying operating system. The included Dockerfile is the recipe that creates an \"image\" of all the software you need to run the sample code for MTSW, including all of the dependencies. This software image runs within the container managed by the Docker client on your machine. The authors recommend using Docker. You won't have to worry about which operating system you're using, whether Windows, MacOS, or some Linux variant. You also won't have to worry about installing anything beyond the Docker client.","title":"\u4f7f\u7528 Docker"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#2-docker","text":"Visit the Docker Hub and download the free community edition of Docker Desktop for your operating system. NOTE that versions of Mac OS previous to Sierra 10.12 or versions of Microsoft Windows previous to 10 Professional or Enterprise 64-bit will require that you install the Docker Toolbox instead. After installing Docker Desktop, run the Docker Desktop application. We will be accessing it from the command line. To make sure that it is installed correctly, type the following from the command line. docker --version This should display something like Docker version 18.09.0, build 4d60db4 If so, congratulations, you've successfully installed Docker.","title":"\u7b2c 2 \u6b65\uff1a\u5b89\u88c5 Docker"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#3-docker","text":"","title":"\u7b2c 3 \u6b65\uff1a\u4e0b\u8f7d\u6216\u6784\u5efa\u6b64\u5b58\u50a8\u5e93\u7684 Docker \u955c\u50cf"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#1-docker-hub-mining-the-social-web-3rd-edition","text":"The Docker image of has been pre-built and is hosted on Docker Hub . To download this (~2GB) image, type the following command into your terminal: docker pull mikhailklassen/mining-the-social-web-3rd-edition:latest Next, let's tag the image to something a little shorter. Type the following command into the terminal: docker tag mikhailklassen/mining-the-social-web-3rd-edition:latest mtsw3e:latest","title":"\u9009\u9879 1\uff1a\u4ece Docker Hub \u4e0b\u8f7d\u201cmining-the-social-web-3rd-edition\u201d\u56fe\u50cf"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#2","text":"The Docker image is build using the Dockerfile , which is a recipe that tells the Docker client how to build the image. From within the same directory as this repository's Dockerfile , type docker build -t mtsw3e . This will \"tag\" your image with the name mtsw3e . Building the image will take some time. The Docker client has to download a base image and then install all of the dependencies. You will only need to do this once, provided you don't delete the image from your computer. Some users report the following error (noted on MacOS): $ docker build -t mtsw3e . ERRO [ 0000 ] failed to dial gRPC: unable to upgrade to h2c, received 502 context canceled If this happens to you, disable the experimental features by unchecking the option in your Docker preferences. Once you've built the image you should see it in your list of images: $ docker image ls REPOSITORY TAG IMAGE ID mtsw3e latest 326387cea398","title":"\u9009\u9879 2\uff1a\u81ea\u5df1\u6784\u5efa\u6620\u50cf"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#4","text":"The last step is to run docker-compose , which will launch the container we just built and connect it to a MongoDB database running in a separate container, which is needed for some of the code examples $ docker-compose up The output will look something like this: You will see the instruction on the screen to copy/paste the URL into your web browser's search bar. Copy and paste the version of this URL that points to 127.0.0.1 , e.g. http://127.0.0.1:8888/?token=9f568d96a24a950fb9525ee2746fcdd1c04e035122067be3 If you do this, you should see a Jupyter Notebook server running and a list of all the Jupyter Notebooks that are a part of this repository. When you are down working with the sample code, shut down the container as follows: hit CTRL-C in the terminal window where your app is running to interrupt Docker. Next, type docker-compose down This performs a clean shutdown of any infrastructure set up by Docker and stops all running containers.","title":"\u7b2c 4 \u6b65\uff1a\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#docker-compose","text":"If you're not interested in any of the MongoDB examples in Chapter 9, you can run the MTSW3e container by itself without needing to use docker-compose . To do so, run the command from within the repository's root directory: docker run --rm -p 8888:8888 -v \"$PWD\"/notebooks:/home/jovyan/notebooks mtsw3e:latest","title":"\u5728\u6ca1\u6709 Docker Compose \u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#_2","text":"If you just to run the sample code on your own machine outside of any Docker container, you will need to install all the requirements yourself. Assuming you have Python 3.3+ installed, it is best practice to create a virtual environment : python3 -m venv mtsw This creates a folder called mtsw . Change into this directory and activate the virtual environment. On Mac OS or Linux: cd mtsw source bin/activate Then use pip to install all requirements: pip install -r requirements.txt You will also need to install the Java Development Kit , which is required by boilerpipe. If you wish to complete all the examples in Chapter 9, you will need to install MongoDB .","title":"\u8981\u6c42"},{"location":"6.NBViewer/Mining-the-Social-Web-3rd-Edition/#_3","text":"There are several ways in which you can contribute to the project. If you discover a bug in any of the code, the first thing to do is to create a new issue under the Issues tab of this repository. If you are a developer and would like to contribute a bug fix, please feel free to fork the repository and submit a pull request.","title":"\u7279\u7ea6"},{"location":"6.NBViewer/faq/","text":"\u7ecf\u5e38\u88ab\u95ee\u53ca\u7684\u95ee\u9898 \u00b6 \u4ec0\u4e48\u662f nbviewer\uff1f nbviewer is a web application that lets you enter the URL of a Jupyter Notebook file, renders that notebook as a static HTML web page, and gives you a stable link to that page which you can share with others. nbviewer also supports browsing collections of notebooks (e.g., in a GitHub repository) and rendering notebooks in other formats (e.g., slides, scripts). nbviewer is an open source project under the larger Project Jupyter initiative along with other projects like Jupyter Notebook, JupyterLab, and JupyterHub. \u4ec0\u4e48\u662f nbviewer.jupyter.org\uff1f Project Jupyter runs a free, public instance of nbviewer at https://nbviewer.jupyter.org. You can use it to render Jupyter Notebooks or browse notebook collection on GitHub. In either case, the notebooks must have public web URLs. The homepage of nbviewer.jupyter.org includes some examples for you to try. nbviewer \u5982\u4f55\u5448\u73b0\u7b14\u8bb0\u672c\uff1f nbviewer is written in Python and JavaScript, uses nbconvert to render notebooks, and uses Tornado as its web server. You can install nbconvert locally and run jupyter nbconvert to get the same functionality (and more). See the nbconvert documentation for details. nbviewer \u53ef\u4ee5\u8fd0\u884c\u6211\u7684 Python\uff0cJulia\uff0cR\uff0cScala \u7b49\u7b14\u8bb0\u672c\u5417\uff1f nbviewer does not execute notebooks. It only renders the inputs and outputs saved in a notebook document as a web page. mybinder.org is a separate web service that lets you open notebooks notebooks in an executable environment, making your code immediately reproducible by anyone, anywhere. nbviewer shows an Execute on Binder icon in its navbar which \u4e3a\u4ec0\u4e48\u7b14\u8bb0\u672c\u4e0a\u6ca1\u6709\u51fa\u73b0\u201c\u6267\u884c\u9f20\u6807\u201d\u6309\u94ae\uff1f nbviewer only supports launching notebooks stored on GitHub or as Gists on Binder. Binder does support other providers directly on the mybinder.org site. \u4e3a\u4ec0\u4e48\u201c\u6309\u94ae\u4e0a\u7684\u6267\u884c\u201d\u6309\u94ae\u4f1a\u5bfc\u81f4 Binder \u5931\u8d25\uff1f Binder tries to build a Docker image containing the notebooks and requirements declared in a git repository. The build will fail if the repository has a Dockerfile, requirements.txt, environment.yaml, etc. with issues. We suggest letting the repository owner know about the problem or submitting a pull request to help fix it. \u5355\u51fb\u201c\u5728\u6d3b\u9875\u5939\u4e0a\u6267\u884c\u201d\u6309\u94ae\u540e\uff0c\u4e3a\u4ec0\u4e48\u7b14\u8bb0\u672c\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff1f Binder builds a Docker image containing the notebooks in a git repository. Those notebooks may have requirements to run correctly such as libraries and data files. Binder can install these prerequisites as part of its build process, if the git repository declares them in a supported manner. If a notebook does not run properly in its Binder environment, we suggest letting the repository owner know about the problem or submitting a pull request to help fix it. \u5d4c\u5165\u5728\u7b14\u8bb0\u672c\u4e2d\u7684 JavaScript \u662f\u5426\u9002\u7528\u4e8e nbviewer \u5448\u73b0\u7684\u9875\u9762\uff1f Yes. This fact allows plots from plot.ly, Bokeh, and Altair to remain interactive, for example. It also means arbitrary JavaScript maybe execute when you visit the page, as it would on any page you visit on the Internet. \u6211\u53ef\u4ee5\u5728 nbviewer \u4e0a\u52a0\u8f7d\u79c1\u4eba\u7b14\u8bb0\u672c\u5417\uff1f nbviewer.jupyter.org can only render notebooks that it can access on the public Internet. If you are working on a notebook on your local machine, you need to publish that notebook somewhere with a public URL (e.g., in a GitHub repository, as a gist) in order for nbviewer.jupyter.org to render it. Hosting your own nbviewer server opens additional avenues for rendering private notebooks. For example, an nbviewer server on your university network can render notebook files accessible via URLs on that network. Please see the README in the nbviewer repository on GitHub for instructions and options. \u4e3a\u4ec0\u4e48\u6211\u4ece nbviewer \u83b7\u5f97 404\uff1aNot Found \u9519\u8bef\uff1f The URL you are visiting most likely points to a notebook that was moved or deleted. If you clicked a link on a site that lead to the 404 error page, we suggest you contact the site auownerthor to report the broken link. If a notebook author gave you the URL, we recommend asking them for an updated link. If you notice one of the links on the nbviewer.jupyter.org, please report it as a bug in the nbviewer issue tracker. \u5f53\u6211\u5c1d\u8bd5\u67e5\u770b\u7b14\u8bb0\u672c\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 4xx \u9519\u8bef\uff1f nbviewer fetches notebooks from upstream providers (e.g., GitHub, GitHub gists, a public webserver) which host the the notebook files. You will see 4xx errors if the provider doesn't respond, the file nbviewer receives is invalid, the file is not publicly accessible, and so on. If you believe nbviewer is incorrectly showing a 4xx error for an accessible, valid notebook URL, please file a bug in the nbviewer issue tracker. \u5f53\u6211\u5c1d\u8bd5\u67e5\u770b\u7b14\u8bb0\u672c\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 5xx \u6216\u5feb\u901f\u9519\u8bef\uff1f A 5xx error or an error page from fastly may indicate that the public nbviewer.jupyter.org site is being redeployed or is down. If the problem persists for more than a few minutes, please open a bug in the nbviewer issue tracker on GitHub including the URL you are visiting and the error you receive. \u4e3a\u4ec0\u4e48 nbviewer \u663e\u793a\u6211\u7684\u7b14\u8bb0\u672c\u7684\u8fc7\u65f6\u7248\u672c\uff1f nbviewer caches rendered notebooks to cut down on rendering time for popular notebooks. The cache duration on nbviewer.jupyter.org is approximately 10 minutes. To invalidate the cache and force nbviewer to re-render a notebook page, append ?flush_cache=true to your URL. \u4f60\u5982\u4f55\u9009\u62e9 nbviewer.jupyter.org \u4e3b\u9875\u4e0a\u7684\u7b14\u8bb0\u672c\uff1f We originally selected notebooks that we found and liked. We are currently soliciting links to refresh the home page using a Google Form. You may also open an issue with your suggestion. \u5982\u4f55\u4ece nbviewer \u4e2d\u5220\u9664\u7b14\u8bb0\u672c\uff1f nbviewer does not store any notebooks, it only renders notebooks stored elsewhere on the web given their URLs. If you've found a notebook that you think should be removed from the web, you'll need to locate where it is hosted (e.g., on GitHub) in order to update or remove it \u6211\u53ef\u4ee5\u4f7f\u7528 nbviewer \u5c06\u7b14\u8bb0\u672c\u8f6c\u6362\u4e3a HTML \u4ee5\u5916\u7684\u683c\u5f0f\u5417\uff1f No. However, you can install nbconvert locally and run jupyter nbconvert to convert notebook files to a variety of format. See the nbconvert documentation for details. nbviewer.jupyter.org \u5728\u54ea\u91cc\u6258\u7ba1\uff1f Rackspace graciously hosts nbviewer.jupyter.org. Thanks to Rackspace, we are able to provider a public nbviewer instance as a free service. \u6211\u53ef\u4ee5\u901a\u8fc7 https \u8bbf\u95ee nbviewer.jupyter.org \u5417\uff1f Yes. Please do. \u6211\u53ef\u4ee5\u8fd0\u884c\u81ea\u5df1\u7684 nbviewer \u670d\u52a1\u5668\u5417\uff1f Yes, absolutely. Please see the README in the nbviewer repository on GitHub for instructions and options. \u5982\u4f55\u62a5\u544a nbviewer \u7684\u9519\u8bef\u6216\u5efa\u8bae\u529f\u80fd\uff1f Please select the appropriate issue template in the nbviewer issue tracker on GitHub. \u662f\u5426\u6709\u9002\u7528\u4e8e nbviewer \u7684\u6709\u7528\u5de5\u5177\uff1f Open in nbviewer - browser extensions and bookmarklets for opening the current URL in nbviewer gist extension - publish a notebook as a GitHub Gist and view it on nbviewer \u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u63d0\u51fa\u5176\u4ed6\u95ee\u9898\uff1f Please post your questions about using nbviewer in the jupyter/help issue tracker or in the Jupyter Google Group. If you would like to propose an enhancement to nbviewer or file a bug report, please open an issue in the jupyter/nbviewer project on GitHub.","title":"\u7ecf\u5e38\u88ab\u95ee\u53ca\u7684\u95ee\u9898"},{"location":"6.NBViewer/faq/#_1","text":"\u4ec0\u4e48\u662f nbviewer\uff1f nbviewer is a web application that lets you enter the URL of a Jupyter Notebook file, renders that notebook as a static HTML web page, and gives you a stable link to that page which you can share with others. nbviewer also supports browsing collections of notebooks (e.g., in a GitHub repository) and rendering notebooks in other formats (e.g., slides, scripts). nbviewer is an open source project under the larger Project Jupyter initiative along with other projects like Jupyter Notebook, JupyterLab, and JupyterHub. \u4ec0\u4e48\u662f nbviewer.jupyter.org\uff1f Project Jupyter runs a free, public instance of nbviewer at https://nbviewer.jupyter.org. You can use it to render Jupyter Notebooks or browse notebook collection on GitHub. In either case, the notebooks must have public web URLs. The homepage of nbviewer.jupyter.org includes some examples for you to try. nbviewer \u5982\u4f55\u5448\u73b0\u7b14\u8bb0\u672c\uff1f nbviewer is written in Python and JavaScript, uses nbconvert to render notebooks, and uses Tornado as its web server. You can install nbconvert locally and run jupyter nbconvert to get the same functionality (and more). See the nbconvert documentation for details. nbviewer \u53ef\u4ee5\u8fd0\u884c\u6211\u7684 Python\uff0cJulia\uff0cR\uff0cScala \u7b49\u7b14\u8bb0\u672c\u5417\uff1f nbviewer does not execute notebooks. It only renders the inputs and outputs saved in a notebook document as a web page. mybinder.org is a separate web service that lets you open notebooks notebooks in an executable environment, making your code immediately reproducible by anyone, anywhere. nbviewer shows an Execute on Binder icon in its navbar which \u4e3a\u4ec0\u4e48\u7b14\u8bb0\u672c\u4e0a\u6ca1\u6709\u51fa\u73b0\u201c\u6267\u884c\u9f20\u6807\u201d\u6309\u94ae\uff1f nbviewer only supports launching notebooks stored on GitHub or as Gists on Binder. Binder does support other providers directly on the mybinder.org site. \u4e3a\u4ec0\u4e48\u201c\u6309\u94ae\u4e0a\u7684\u6267\u884c\u201d\u6309\u94ae\u4f1a\u5bfc\u81f4 Binder \u5931\u8d25\uff1f Binder tries to build a Docker image containing the notebooks and requirements declared in a git repository. The build will fail if the repository has a Dockerfile, requirements.txt, environment.yaml, etc. with issues. We suggest letting the repository owner know about the problem or submitting a pull request to help fix it. \u5355\u51fb\u201c\u5728\u6d3b\u9875\u5939\u4e0a\u6267\u884c\u201d\u6309\u94ae\u540e\uff0c\u4e3a\u4ec0\u4e48\u7b14\u8bb0\u672c\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff1f Binder builds a Docker image containing the notebooks in a git repository. Those notebooks may have requirements to run correctly such as libraries and data files. Binder can install these prerequisites as part of its build process, if the git repository declares them in a supported manner. If a notebook does not run properly in its Binder environment, we suggest letting the repository owner know about the problem or submitting a pull request to help fix it. \u5d4c\u5165\u5728\u7b14\u8bb0\u672c\u4e2d\u7684 JavaScript \u662f\u5426\u9002\u7528\u4e8e nbviewer \u5448\u73b0\u7684\u9875\u9762\uff1f Yes. This fact allows plots from plot.ly, Bokeh, and Altair to remain interactive, for example. It also means arbitrary JavaScript maybe execute when you visit the page, as it would on any page you visit on the Internet. \u6211\u53ef\u4ee5\u5728 nbviewer \u4e0a\u52a0\u8f7d\u79c1\u4eba\u7b14\u8bb0\u672c\u5417\uff1f nbviewer.jupyter.org can only render notebooks that it can access on the public Internet. If you are working on a notebook on your local machine, you need to publish that notebook somewhere with a public URL (e.g., in a GitHub repository, as a gist) in order for nbviewer.jupyter.org to render it. Hosting your own nbviewer server opens additional avenues for rendering private notebooks. For example, an nbviewer server on your university network can render notebook files accessible via URLs on that network. Please see the README in the nbviewer repository on GitHub for instructions and options. \u4e3a\u4ec0\u4e48\u6211\u4ece nbviewer \u83b7\u5f97 404\uff1aNot Found \u9519\u8bef\uff1f The URL you are visiting most likely points to a notebook that was moved or deleted. If you clicked a link on a site that lead to the 404 error page, we suggest you contact the site auownerthor to report the broken link. If a notebook author gave you the URL, we recommend asking them for an updated link. If you notice one of the links on the nbviewer.jupyter.org, please report it as a bug in the nbviewer issue tracker. \u5f53\u6211\u5c1d\u8bd5\u67e5\u770b\u7b14\u8bb0\u672c\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 4xx \u9519\u8bef\uff1f nbviewer fetches notebooks from upstream providers (e.g., GitHub, GitHub gists, a public webserver) which host the the notebook files. You will see 4xx errors if the provider doesn't respond, the file nbviewer receives is invalid, the file is not publicly accessible, and so on. If you believe nbviewer is incorrectly showing a 4xx error for an accessible, valid notebook URL, please file a bug in the nbviewer issue tracker. \u5f53\u6211\u5c1d\u8bd5\u67e5\u770b\u7b14\u8bb0\u672c\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 5xx \u6216\u5feb\u901f\u9519\u8bef\uff1f A 5xx error or an error page from fastly may indicate that the public nbviewer.jupyter.org site is being redeployed or is down. If the problem persists for more than a few minutes, please open a bug in the nbviewer issue tracker on GitHub including the URL you are visiting and the error you receive. \u4e3a\u4ec0\u4e48 nbviewer \u663e\u793a\u6211\u7684\u7b14\u8bb0\u672c\u7684\u8fc7\u65f6\u7248\u672c\uff1f nbviewer caches rendered notebooks to cut down on rendering time for popular notebooks. The cache duration on nbviewer.jupyter.org is approximately 10 minutes. To invalidate the cache and force nbviewer to re-render a notebook page, append ?flush_cache=true to your URL. \u4f60\u5982\u4f55\u9009\u62e9 nbviewer.jupyter.org \u4e3b\u9875\u4e0a\u7684\u7b14\u8bb0\u672c\uff1f We originally selected notebooks that we found and liked. We are currently soliciting links to refresh the home page using a Google Form. You may also open an issue with your suggestion. \u5982\u4f55\u4ece nbviewer \u4e2d\u5220\u9664\u7b14\u8bb0\u672c\uff1f nbviewer does not store any notebooks, it only renders notebooks stored elsewhere on the web given their URLs. If you've found a notebook that you think should be removed from the web, you'll need to locate where it is hosted (e.g., on GitHub) in order to update or remove it \u6211\u53ef\u4ee5\u4f7f\u7528 nbviewer \u5c06\u7b14\u8bb0\u672c\u8f6c\u6362\u4e3a HTML \u4ee5\u5916\u7684\u683c\u5f0f\u5417\uff1f No. However, you can install nbconvert locally and run jupyter nbconvert to convert notebook files to a variety of format. See the nbconvert documentation for details. nbviewer.jupyter.org \u5728\u54ea\u91cc\u6258\u7ba1\uff1f Rackspace graciously hosts nbviewer.jupyter.org. Thanks to Rackspace, we are able to provider a public nbviewer instance as a free service. \u6211\u53ef\u4ee5\u901a\u8fc7 https \u8bbf\u95ee nbviewer.jupyter.org \u5417\uff1f Yes. Please do. \u6211\u53ef\u4ee5\u8fd0\u884c\u81ea\u5df1\u7684 nbviewer \u670d\u52a1\u5668\u5417\uff1f Yes, absolutely. Please see the README in the nbviewer repository on GitHub for instructions and options. \u5982\u4f55\u62a5\u544a nbviewer \u7684\u9519\u8bef\u6216\u5efa\u8bae\u529f\u80fd\uff1f Please select the appropriate issue template in the nbviewer issue tracker on GitHub. \u662f\u5426\u6709\u9002\u7528\u4e8e nbviewer \u7684\u6709\u7528\u5de5\u5177\uff1f Open in nbviewer - browser extensions and bookmarklets for opening the current URL in nbviewer gist extension - publish a notebook as a GitHub Gist and view it on nbviewer \u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u63d0\u51fa\u5176\u4ed6\u95ee\u9898\uff1f Please post your questions about using nbviewer in the jupyter/help issue tracker or in the Jupyter Google Group. If you would like to propose an enhancement to nbviewer or file a bug report, please open an issue in the jupyter/nbviewer project on GitHub.","title":"\u7ecf\u5e38\u88ab\u95ee\u53ca\u7684\u95ee\u9898"},{"location":"7.Widgets/","text":"\u4ea4\u4e92\u5f0f\u5c0f\u90e8\u4ef6 \u00b6 Jupyter \u5c0f\u90e8\u4ef6\u53ef\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u5b9e\u73b0\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316\u3002 Notebook Widgets \u4f7f\u7528\u4ea4\u4e92\u5f0f\u5c0f\u90e8\u4ef6\u65f6\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u53d8\u5f97\u6d3b\u8dc3\u8d77\u6765\u3002 \u7528\u6237\u53ef\u4ee5\u53ef\u89c6\u5316\u548c\u63a7\u5236\u6570\u636e\u4e2d\u7684\u66f4\u6539\u3002\u5b66\u4e60\u6210\u4e3a\u4e00\u79cd\u6c89\u6d78\u5f0f\uff0c\u6709\u8da3\u7684\u4f53\u9a8c\u3002 \u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u6539\u53d8\u6a21\u578b\u7684\u8f93\u5165\u5982\u4f55\u5f71\u54cd\u7ed3\u679c\u3002 ipyleaflet \u00b6 \u5730\u7406\u7a7a\u95f4\u5206\u6790 Binder GitHub A library for creating simple interactive maps with panning and zooming, ipyleaflet supports annotations such as polygons, markers, and more generally any geojson-encoded geographical data structure. Example from ipyleaflet import Map Map(center=[34.6252978589571, -77.34580993652344], zoom=10) + \u2212 Leaflet | Map data (c) OpenStreetMap contributors Installation With conda: conda install -c conda-forge ipyleaflet With pip: pip install ipyleaflet jupyter nbextension enable --py --sys-prefix ipyleaflet bqplot \u00b6 \u4e8c\u7ef4\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316 pythreejs \u00b6 \u4e09\u7ef4\u6570\u636e\u53ef\u89c6\u5316 ipyvolume \u00b6 \u4e09\u7ef4\u7ed8\u56fe nglview \u00b6 \u4e09\u7ef4\u4ea4\u4e92\u5f0f\u5206\u5b50\u53ef\u89c6\u5316 BeakerX \u00b6 \u8868\u683c\uff0c\u7ed8\u56fe\uff0c\u8868\u683c jupyter-gmaps \u00b6 Google \u5730\u56fe\u4e0a\u7684\u6570\u636e\u53ef\u89c6\u5316 cookiecutter \u00b6 \u6a21\u677f\u5c0f\u90e8\u4ef6\u9879\u76ee","title":"\u4ea4\u4e92\u5f0f\u5c0f\u90e8\u4ef6"},{"location":"7.Widgets/#_1","text":"Jupyter \u5c0f\u90e8\u4ef6\u53ef\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u5b9e\u73b0\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316\u3002 Notebook Widgets \u4f7f\u7528\u4ea4\u4e92\u5f0f\u5c0f\u90e8\u4ef6\u65f6\uff0c\u7b14\u8bb0\u672c\u7535\u8111\u53d8\u5f97\u6d3b\u8dc3\u8d77\u6765\u3002 \u7528\u6237\u53ef\u4ee5\u53ef\u89c6\u5316\u548c\u63a7\u5236\u6570\u636e\u4e2d\u7684\u66f4\u6539\u3002\u5b66\u4e60\u6210\u4e3a\u4e00\u79cd\u6c89\u6d78\u5f0f\uff0c\u6709\u8da3\u7684\u4f53\u9a8c\u3002 \u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u6539\u53d8\u6a21\u578b\u7684\u8f93\u5165\u5982\u4f55\u5f71\u54cd\u7ed3\u679c\u3002","title":"\u4ea4\u4e92\u5f0f\u5c0f\u90e8\u4ef6"},{"location":"7.Widgets/#ipyleaflet","text":"\u5730\u7406\u7a7a\u95f4\u5206\u6790 Binder GitHub A library for creating simple interactive maps with panning and zooming, ipyleaflet supports annotations such as polygons, markers, and more generally any geojson-encoded geographical data structure. Example from ipyleaflet import Map Map(center=[34.6252978589571, -77.34580993652344], zoom=10) + \u2212 Leaflet | Map data (c) OpenStreetMap contributors Installation With conda: conda install -c conda-forge ipyleaflet With pip: pip install ipyleaflet jupyter nbextension enable --py --sys-prefix ipyleaflet","title":"ipyleaflet"},{"location":"7.Widgets/#bqplot","text":"\u4e8c\u7ef4\u4ea4\u4e92\u5f0f\u6570\u636e\u53ef\u89c6\u5316","title":"bqplot"},{"location":"7.Widgets/#pythreejs","text":"\u4e09\u7ef4\u6570\u636e\u53ef\u89c6\u5316","title":"pythreejs"},{"location":"7.Widgets/#ipyvolume","text":"\u4e09\u7ef4\u7ed8\u56fe","title":"ipyvolume"},{"location":"7.Widgets/#nglview","text":"\u4e09\u7ef4\u4ea4\u4e92\u5f0f\u5206\u5b50\u53ef\u89c6\u5316","title":"nglview"},{"location":"7.Widgets/#beakerx","text":"\u8868\u683c\uff0c\u7ed8\u56fe\uff0c\u8868\u683c","title":"BeakerX"},{"location":"7.Widgets/#jupyter-gmaps","text":"Google \u5730\u56fe\u4e0a\u7684\u6570\u636e\u53ef\u89c6\u5316","title":"jupyter-gmaps"},{"location":"7.Widgets/#cookiecutter","text":"\u6a21\u677f\u5c0f\u90e8\u4ef6\u9879\u76ee","title":"cookiecutter"},{"location":"7.Widgets/BeakerX/","text":"","title":"BeakerX"},{"location":"7.Widgets/bqplot/","text":"","title":"Bqplot"},{"location":"7.Widgets/cookiecutter/","text":"","title":"Cookiecutter"},{"location":"7.Widgets/ipyleaflet/","text":"","title":"Ipyleaflet"},{"location":"7.Widgets/ipyvolume/","text":"","title":"Ipyvolume"},{"location":"7.Widgets/jupyter-gmaps/","text":"","title":"Jupyter gmaps"},{"location":"7.Widgets/nglview/","text":"","title":"Nglview"},{"location":"7.Widgets/pythreejs/","text":"","title":"Pythreejs"},{"location":"8.Kernels/","text":"Jupyter \u5185\u6838 \u00b6 Kernel Zero\u662f IPython \uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 ipykernel \u83b7\u53d6\uff0c\u5e76\u4e14\u4ecd\u7136\u662f jupyter \u7684\u4f9d\u8d56\u9879\u3002\u53ef\u4ee5\u5c06IPython\u5185\u6838\u89c6\u4e3a\u53c2\u8003\u5b9e\u73b0\uff0c\u56e0\u4e3aCPython\u9002\u7528\u4e8ePython\u3002 \u8fd9\u662f\u53ef\u7528\u5185\u6838\u7684\u5217\u8868\u3002\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199\u81ea\u5df1\u7684\u5185\u6838\uff0c\u8bf7\u968f\u610f\u5c06\u5176\u6dfb\u52a0\u5230\u8868\u4e2d\uff01 Name Jupyter/IPython Version Language(s) Version 3rd party dependencies Example Notebooks Notes \u5c3f\u5e03\u6728\u661f\u6838 APL (Dyalog) Dyalog >= 15.0 Notebooks Can also be run on TryAPL 's Learn tab Coarray-Fortran Jupyter 4.0 Fortran 2008/2015 GFortran >= 7.1, OpenCoarrays , MPICH >= 3.2 Demo , Binder demo Docker image Ansible Jupyter Kernel Jupyter 5.6.0.dev0 Ansible 2.x Hello World sparkmagic Jupyter >=4.0 Pyspark (Python 2 & 3), Spark (Scala), SparkR (R) Livy Notebooks , Docker Images This kernels are implemented via the magics machinery of the ipython kernel to use Spark via Livy sas_kernel Jupyter 4.0 python >= 3.3 SAS 9.4 or higher IPyKernel Jupyter 4.0 python 2.7, >= 3.3 pyzmq IJulia julia >= 0.3 IHaskell ghc >= 7.6 Demo IRuby ruby >= 2.1 IJavascript nodejs >= 0.10 jpCoffeescript coffeescript >= 1.7 jp-LiveScript livescript >= 1.5 Based on IJavascript and jpCoffeescript ICSharp Jupyter 4.0 C# 4.0+ scriptcs IRKernel IPython 3.0 R 3.2 rzmq SageMath Jupyter 4 Any many pari_jupyter Jupyter 4 PARI/GP >= 2.9 IFSharp IPython 2.0 F# Features lgo Jupyter >= 4, JupyterLab Go >= 1.8 ZeroMQ (4.x) Example Docker image gopherlab Jupyter 4.1, JupyterLab Go >= 1.6 ZeroMQ (4.x) examples Deprecated, use gophernotes Gophernotes Jupyter 4, JupyterLab, nteract Go >= 1.9 ZeroMQ 4.x.x examples docker image IGo Go >= 1.4 Unmaintained, use gophernotes IScala Scala almond (old name: Jupyter-scala) IPython>=3.0 Scala>=2.10 examples Docs IErlang IPython 2.3 Erlang rebar ITorch IPython >= 2.2 and <= 5.x Torch 7 (LuaJIT) IElixir Jupyter >= 4.0 Elixir >= 1.5 Erlang OTP >= 19.3, Rebar example , Boyle package manager examples , Boyle examples with usage of Matrex library IElixir Docker image , IElixir Notebook in Docker ierl Jupyter >= 4.0 Erlang >= 19, Elixir >= 1.4, LFE 1.2 Erlang, (optional) Elixir IAldor IPython >= 1 Aldor IOCaml IPython >= 1.1 OCaml >= 4.01 opam OCaml-Jupyter Jupyter >= 4.0 OCaml >= 4.02 opam Example Docker image IForth IPython >= 3 Forth peforth IPython 6/Jupyter 5 Forth Example python debugger in FORTH syntax IPerl Perl 5 Perl6 Jupyter >= 4 Perl 6.c zeromq 4 IPerl6 Perl 6 Jupyter-Perl6 Jupyter Perl 6.C Rakudo Perl 6 IPHP IPython >= 2 PHP >= 5.4 composer DEPRECATED, use Jupyter-PHP Jupyter-PHP Jupyter 4.0 PHP >= 7.0.0 composer, php-zmq IOctave Jupyter Octave Example MetaKernel IScilab Jupyter Scilab Example MetaKernel MATLAB Kernel Jupyter Matlab pymatbridge Example MetaKernel Bash IPython >= 3 bash Wrapper Pharo Smalltalk IPython >= 3 Mac Os X Paro 64 bits native kernel, zeromq PowerShell IPython >= 3 Windows Wrapper, Based on Bash Kernel CloJupyter Jupyter Clojure >= 1.7 CLJ-Jupyter Jupyter Clojure Abandoned as of 2017-02-12 jupyter-kernel-jsr223 Jupyter>=4.0 Clojure 1.8 clojure-jrs223 , Java>=7 Java based JSR223 compliant Hy Kernel Jupyter Hy Tutorial treats Hy as Python pre-processor Calysto Hy Jupyter Hy Tutorial based on MetaKernel (magics, shell, parallel, etc.) Redis Kernel IPython >= 3 redis Wrapper jove io.js jp-babel Jupyter Babel ICalico IPython >= 2 multiple Index IMathics Mathics IWolfram Wolfram Mathematica Wolfram Mathematica(R), Metakernel MetaKernel Lua Kernel Lua IPurescript Purescript IPyLua Lua Fork of Lua Kernel ILua Lua Calysto Scheme Scheme Reference Guide MetaKernel Calysto Processing Processing.js >= 2 MetaKernel idl_kernel IDL IDL seem to have a built-in kernel starting with version 8.5 Mochi Kernel Mochi Lua (used in Splash) Lua Apache Toree (formerly Spark Kernel) Jupyter Scala, Python, R Spark >= 1.5 Example Skulpt Python Kernel Skulpt Python Examples MetaKernel MetaKernel Bash bash MetaKernel MetaKernel Python python MetaKernel IVisual VPython Ball-in-Box IBrainfuck Brainfuck Demo Wrapper KDB+/Q Kernel (IKdbQ) IPython >= 3.1 Q qzmq, qcrypt KDB+/Q Kernel (KdbQ Kernel) Jupyter Q ICryptol Cryptol CVC4 cling Jupyter 4 C++ Example xeus-cling Jupyter >= 5.1 C++ Example Supports Jupyter widgets Xonsh Xonsh Example MetaKernel Prolog Prolog MetaKernel SWI-Prolog Jupyter >=4.0 SWI-Prolog https://hub.docker.com/r/jm1337/jupyter-prolog-notebook/ cl-jupyter Jupyter Common Lisp Quicklisp About common-lisp-jupyter Jupyter Common Lisp Quicklisp About Maxima-Jupyter Jupyter Maxima Quicklisp Calysto LC3 Assembly Language for the Little Computer 3 Yacas YACAS IJython Jython 2.7 ROOT Jupyter C++/python ROOT >= 6.05 Gnuplot Kernel Gnuplot Example MetaKernel Tcl Jupyter Tcl 8.5 Based on Bash Kernel J Jupyter J 805 Examples Jython Jupyter>=4.0 Jython>=2.7.0 Java>=7 Java based JSR223 compliant C Jupyter C gcc TaQL Jupyter TaQL python-casacore TaQL tutorial Coconut Jupyter Coconut SPARQL Jupyter 4 Python 2.7 or >=3.4 rdflib , SPARQLWrapper Examples Optional GraphViz dependency AIML chatbot Jupyter 4 Python 2.7 pyAIML Examples IArm Jupyter 4 ARMv6 THUMB Examples Based off of the ARM Cortex M0+ CPU SoS Jupyter 4 Python >=3.4 Support kernels for bash, python2/3, matlab/octabe, javascript, julia, R, Stata, SAS, and more Examples Workflow system, Multi-Kernel support jupyter-nodejs Jupyter, iPython 3.x NodeJS, Babel, Clojurescript Examples Pike IPython >= 3 Pike >= 7.8 Wrapper, Based on Bash Kernel ITypeScript Typescript >= 2.0 Node.js >= 0.10.0 imatlab ipykernel >= 4.1 MATLAB >= 2016b jupyter-kotlin Jupyter Kotlin 1.1-M04 EAP Java >= 8 jupyter_kernel_singular Jupyter Singular 4.1.0 Demo Optional PySingular for better performance, surf for images, details spylon-kernel ipykernel >=4.5 python >= 3.5, scala >= 2.11 Apache Spark >=2.0 Example MetaKernel mit-scheme-kernel Jupyter 4.0 MIT Scheme 9.2 elm-kernel Jupyter Examples SciJava Jupyter Kernel Jupyter 4.3.0 Java + 9 scripting languages Java Examples Isbt Jupyter 4.3.0 sbt >= 1.0.0 sbt example BeakerX Groovy, Java, Scala, Clojure, Kotlin, SQL example docker image MicroPython Jupyter ESP8266/ESP32 USB or Webrepl developer notebooks relies on the micro-controller's paste-mode IJava Jupyter Java 9 Java JDK >= 9 Binder online demo Based on the new JShell tool Guile Jupyter 5.2 Guile 2.0.12 guile-json , openssl circuitpython_kernel Jupyter CircuitPython USB Examples stata_kernel Jupyter >=5 Stata Stata >=14 Communicates natively with Stata iPyStata Jupyter Stata Stata Example Notebook Implemented using magics machinery of ipython. IRacket IPython >= 3 Racket >= 6.10 Racket, ZeroMQ Example jupyter-dot-kernel Jupyter >= 4.0 dot/graphviz graphviz version 2.40.1 Teradata SQL kernel and extensions JupyterLab >= 0.34 SQL ZeroMQ Example Notebooks HiveQL Kernel Jupyter >= 5 HiveQL pyhive Display HiveQL queries in HTML tables EvCxR Jupyter Kernel Jupyter 4, JupyterLab, nteract Rust >= 1.29.2 ZeroMQ 4.x.x Examples , Binder online demo StuPyd Kernel Jupyter >= 4 StuPyd Programming Language Python3, antlr4-python3-runtime >= 4.7.1 nbviewer demo coq_jupyter Jupyter 5 Coq coq Binder online demo Cadabra2 Jupyter 5 Cadabra2 Example notebook iMongo MongoDB \u8bb8\u591a\u5185\u6838\u53ef\u4ee5\u5728[PyPI]\u4e0a\u5b89\u88c5(https://pypi.python.org/pypi?:action=browse&c=586). \u77e5\u8bc6\u5e93 \u00b6 \u8fd9\u4e9b\u5185\u6838\u4e2d\u7684\u4e00\u4e9b\u53ef\u7528\u4e8eUbuntu 15.10(wily)/16.04(xenial)\u7684PPA\u3002\u6dfb\u52a0\u5b83: sudo add-apt-repository ppa:chronitis/jupyter sudo apt-get update sudo apt-get install <kernelname> \u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5185\u6838\u5305(\u53ca\u5176\u4f9d\u8d56\u9879): ihaskell ijulia ijavascript irkernel iruby gophernotes (xenial only) (\u5b58\u50a8\u5e93\u4e0d\u5305\u542bipython/jupyter - \u60a8\u4ecd\u7136\u9700\u8981\u4f7f\u7528 pip \u5b89\u88c5\u5b83) \u5176\u4ed6\u76f8\u5173\u9879\u76ee \u00b6 Jove - Java\u4e2d\u7684\u7b14\u8bb0\u672c\u754c\u9762;\u63d0\u4f9bSpark\u548cScala\u5185\u6838 \u9b54\u6cd5brython - \u5141\u8bb8\u60a8\u5728\u5176\u4ed6\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528Brython\u4ee3\u7801(\u5ba2\u6237\u7aef)\u7684\u795e\u5947\u6280\u5de7 pixiedust_node - PixieDust\u6269\u5c55\uff0c\u4f7fJupyter Notebook\u7528\u6237\u80fd\u591f\u8c03\u7528Node.js\u547d\u4ee4\u3002 \u521b\u5efa\u65b0\u7684Jupyter\u5185\u6838 \u00b6 \u4e3aJupyter\u5236\u4f5c\u5185\u6838 in the documentation. \u7b80\u5355\u7684\u793a\u4f8b\u5185\u6838 IHaskell\u521b\u5efa\u8005\u535a\u5ba2\u5c97\u4f4d \u6839\u636e\u6d88\u606f\u89c4\u8303\u6d4b\u8bd5\u5185\u6838(\u6b63\u5728\u8fdb\u884c\u4e2d) \u6839\u636e\u89c4\u8303\u6d4b\u8bd5\u5185\u6838\u7684\u5de5\u5177(\u6b63\u5728\u8fdb\u884c\u4e2d)","title":"Jupyter \u5185\u6838"},{"location":"8.Kernels/#jupyter","text":"Kernel Zero\u662f IPython \uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 ipykernel \u83b7\u53d6\uff0c\u5e76\u4e14\u4ecd\u7136\u662f jupyter \u7684\u4f9d\u8d56\u9879\u3002\u53ef\u4ee5\u5c06IPython\u5185\u6838\u89c6\u4e3a\u53c2\u8003\u5b9e\u73b0\uff0c\u56e0\u4e3aCPython\u9002\u7528\u4e8ePython\u3002 \u8fd9\u662f\u53ef\u7528\u5185\u6838\u7684\u5217\u8868\u3002\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199\u81ea\u5df1\u7684\u5185\u6838\uff0c\u8bf7\u968f\u610f\u5c06\u5176\u6dfb\u52a0\u5230\u8868\u4e2d\uff01 Name Jupyter/IPython Version Language(s) Version 3rd party dependencies Example Notebooks Notes \u5c3f\u5e03\u6728\u661f\u6838 APL (Dyalog) Dyalog >= 15.0 Notebooks Can also be run on TryAPL 's Learn tab Coarray-Fortran Jupyter 4.0 Fortran 2008/2015 GFortran >= 7.1, OpenCoarrays , MPICH >= 3.2 Demo , Binder demo Docker image Ansible Jupyter Kernel Jupyter 5.6.0.dev0 Ansible 2.x Hello World sparkmagic Jupyter >=4.0 Pyspark (Python 2 & 3), Spark (Scala), SparkR (R) Livy Notebooks , Docker Images This kernels are implemented via the magics machinery of the ipython kernel to use Spark via Livy sas_kernel Jupyter 4.0 python >= 3.3 SAS 9.4 or higher IPyKernel Jupyter 4.0 python 2.7, >= 3.3 pyzmq IJulia julia >= 0.3 IHaskell ghc >= 7.6 Demo IRuby ruby >= 2.1 IJavascript nodejs >= 0.10 jpCoffeescript coffeescript >= 1.7 jp-LiveScript livescript >= 1.5 Based on IJavascript and jpCoffeescript ICSharp Jupyter 4.0 C# 4.0+ scriptcs IRKernel IPython 3.0 R 3.2 rzmq SageMath Jupyter 4 Any many pari_jupyter Jupyter 4 PARI/GP >= 2.9 IFSharp IPython 2.0 F# Features lgo Jupyter >= 4, JupyterLab Go >= 1.8 ZeroMQ (4.x) Example Docker image gopherlab Jupyter 4.1, JupyterLab Go >= 1.6 ZeroMQ (4.x) examples Deprecated, use gophernotes Gophernotes Jupyter 4, JupyterLab, nteract Go >= 1.9 ZeroMQ 4.x.x examples docker image IGo Go >= 1.4 Unmaintained, use gophernotes IScala Scala almond (old name: Jupyter-scala) IPython>=3.0 Scala>=2.10 examples Docs IErlang IPython 2.3 Erlang rebar ITorch IPython >= 2.2 and <= 5.x Torch 7 (LuaJIT) IElixir Jupyter >= 4.0 Elixir >= 1.5 Erlang OTP >= 19.3, Rebar example , Boyle package manager examples , Boyle examples with usage of Matrex library IElixir Docker image , IElixir Notebook in Docker ierl Jupyter >= 4.0 Erlang >= 19, Elixir >= 1.4, LFE 1.2 Erlang, (optional) Elixir IAldor IPython >= 1 Aldor IOCaml IPython >= 1.1 OCaml >= 4.01 opam OCaml-Jupyter Jupyter >= 4.0 OCaml >= 4.02 opam Example Docker image IForth IPython >= 3 Forth peforth IPython 6/Jupyter 5 Forth Example python debugger in FORTH syntax IPerl Perl 5 Perl6 Jupyter >= 4 Perl 6.c zeromq 4 IPerl6 Perl 6 Jupyter-Perl6 Jupyter Perl 6.C Rakudo Perl 6 IPHP IPython >= 2 PHP >= 5.4 composer DEPRECATED, use Jupyter-PHP Jupyter-PHP Jupyter 4.0 PHP >= 7.0.0 composer, php-zmq IOctave Jupyter Octave Example MetaKernel IScilab Jupyter Scilab Example MetaKernel MATLAB Kernel Jupyter Matlab pymatbridge Example MetaKernel Bash IPython >= 3 bash Wrapper Pharo Smalltalk IPython >= 3 Mac Os X Paro 64 bits native kernel, zeromq PowerShell IPython >= 3 Windows Wrapper, Based on Bash Kernel CloJupyter Jupyter Clojure >= 1.7 CLJ-Jupyter Jupyter Clojure Abandoned as of 2017-02-12 jupyter-kernel-jsr223 Jupyter>=4.0 Clojure 1.8 clojure-jrs223 , Java>=7 Java based JSR223 compliant Hy Kernel Jupyter Hy Tutorial treats Hy as Python pre-processor Calysto Hy Jupyter Hy Tutorial based on MetaKernel (magics, shell, parallel, etc.) Redis Kernel IPython >= 3 redis Wrapper jove io.js jp-babel Jupyter Babel ICalico IPython >= 2 multiple Index IMathics Mathics IWolfram Wolfram Mathematica Wolfram Mathematica(R), Metakernel MetaKernel Lua Kernel Lua IPurescript Purescript IPyLua Lua Fork of Lua Kernel ILua Lua Calysto Scheme Scheme Reference Guide MetaKernel Calysto Processing Processing.js >= 2 MetaKernel idl_kernel IDL IDL seem to have a built-in kernel starting with version 8.5 Mochi Kernel Mochi Lua (used in Splash) Lua Apache Toree (formerly Spark Kernel) Jupyter Scala, Python, R Spark >= 1.5 Example Skulpt Python Kernel Skulpt Python Examples MetaKernel MetaKernel Bash bash MetaKernel MetaKernel Python python MetaKernel IVisual VPython Ball-in-Box IBrainfuck Brainfuck Demo Wrapper KDB+/Q Kernel (IKdbQ) IPython >= 3.1 Q qzmq, qcrypt KDB+/Q Kernel (KdbQ Kernel) Jupyter Q ICryptol Cryptol CVC4 cling Jupyter 4 C++ Example xeus-cling Jupyter >= 5.1 C++ Example Supports Jupyter widgets Xonsh Xonsh Example MetaKernel Prolog Prolog MetaKernel SWI-Prolog Jupyter >=4.0 SWI-Prolog https://hub.docker.com/r/jm1337/jupyter-prolog-notebook/ cl-jupyter Jupyter Common Lisp Quicklisp About common-lisp-jupyter Jupyter Common Lisp Quicklisp About Maxima-Jupyter Jupyter Maxima Quicklisp Calysto LC3 Assembly Language for the Little Computer 3 Yacas YACAS IJython Jython 2.7 ROOT Jupyter C++/python ROOT >= 6.05 Gnuplot Kernel Gnuplot Example MetaKernel Tcl Jupyter Tcl 8.5 Based on Bash Kernel J Jupyter J 805 Examples Jython Jupyter>=4.0 Jython>=2.7.0 Java>=7 Java based JSR223 compliant C Jupyter C gcc TaQL Jupyter TaQL python-casacore TaQL tutorial Coconut Jupyter Coconut SPARQL Jupyter 4 Python 2.7 or >=3.4 rdflib , SPARQLWrapper Examples Optional GraphViz dependency AIML chatbot Jupyter 4 Python 2.7 pyAIML Examples IArm Jupyter 4 ARMv6 THUMB Examples Based off of the ARM Cortex M0+ CPU SoS Jupyter 4 Python >=3.4 Support kernels for bash, python2/3, matlab/octabe, javascript, julia, R, Stata, SAS, and more Examples Workflow system, Multi-Kernel support jupyter-nodejs Jupyter, iPython 3.x NodeJS, Babel, Clojurescript Examples Pike IPython >= 3 Pike >= 7.8 Wrapper, Based on Bash Kernel ITypeScript Typescript >= 2.0 Node.js >= 0.10.0 imatlab ipykernel >= 4.1 MATLAB >= 2016b jupyter-kotlin Jupyter Kotlin 1.1-M04 EAP Java >= 8 jupyter_kernel_singular Jupyter Singular 4.1.0 Demo Optional PySingular for better performance, surf for images, details spylon-kernel ipykernel >=4.5 python >= 3.5, scala >= 2.11 Apache Spark >=2.0 Example MetaKernel mit-scheme-kernel Jupyter 4.0 MIT Scheme 9.2 elm-kernel Jupyter Examples SciJava Jupyter Kernel Jupyter 4.3.0 Java + 9 scripting languages Java Examples Isbt Jupyter 4.3.0 sbt >= 1.0.0 sbt example BeakerX Groovy, Java, Scala, Clojure, Kotlin, SQL example docker image MicroPython Jupyter ESP8266/ESP32 USB or Webrepl developer notebooks relies on the micro-controller's paste-mode IJava Jupyter Java 9 Java JDK >= 9 Binder online demo Based on the new JShell tool Guile Jupyter 5.2 Guile 2.0.12 guile-json , openssl circuitpython_kernel Jupyter CircuitPython USB Examples stata_kernel Jupyter >=5 Stata Stata >=14 Communicates natively with Stata iPyStata Jupyter Stata Stata Example Notebook Implemented using magics machinery of ipython. IRacket IPython >= 3 Racket >= 6.10 Racket, ZeroMQ Example jupyter-dot-kernel Jupyter >= 4.0 dot/graphviz graphviz version 2.40.1 Teradata SQL kernel and extensions JupyterLab >= 0.34 SQL ZeroMQ Example Notebooks HiveQL Kernel Jupyter >= 5 HiveQL pyhive Display HiveQL queries in HTML tables EvCxR Jupyter Kernel Jupyter 4, JupyterLab, nteract Rust >= 1.29.2 ZeroMQ 4.x.x Examples , Binder online demo StuPyd Kernel Jupyter >= 4 StuPyd Programming Language Python3, antlr4-python3-runtime >= 4.7.1 nbviewer demo coq_jupyter Jupyter 5 Coq coq Binder online demo Cadabra2 Jupyter 5 Cadabra2 Example notebook iMongo MongoDB \u8bb8\u591a\u5185\u6838\u53ef\u4ee5\u5728[PyPI]\u4e0a\u5b89\u88c5(https://pypi.python.org/pypi?:action=browse&c=586).","title":"Jupyter \u5185\u6838"},{"location":"8.Kernels/#_1","text":"\u8fd9\u4e9b\u5185\u6838\u4e2d\u7684\u4e00\u4e9b\u53ef\u7528\u4e8eUbuntu 15.10(wily)/16.04(xenial)\u7684PPA\u3002\u6dfb\u52a0\u5b83: sudo add-apt-repository ppa:chronitis/jupyter sudo apt-get update sudo apt-get install <kernelname> \u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5185\u6838\u5305(\u53ca\u5176\u4f9d\u8d56\u9879): ihaskell ijulia ijavascript irkernel iruby gophernotes (xenial only) (\u5b58\u50a8\u5e93\u4e0d\u5305\u542bipython/jupyter - \u60a8\u4ecd\u7136\u9700\u8981\u4f7f\u7528 pip \u5b89\u88c5\u5b83)","title":"\u77e5\u8bc6\u5e93"},{"location":"8.Kernels/#_2","text":"Jove - Java\u4e2d\u7684\u7b14\u8bb0\u672c\u754c\u9762;\u63d0\u4f9bSpark\u548cScala\u5185\u6838 \u9b54\u6cd5brython - \u5141\u8bb8\u60a8\u5728\u5176\u4ed6\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528Brython\u4ee3\u7801(\u5ba2\u6237\u7aef)\u7684\u795e\u5947\u6280\u5de7 pixiedust_node - PixieDust\u6269\u5c55\uff0c\u4f7fJupyter Notebook\u7528\u6237\u80fd\u591f\u8c03\u7528Node.js\u547d\u4ee4\u3002","title":"\u5176\u4ed6\u76f8\u5173\u9879\u76ee"},{"location":"8.Kernels/#jupyter_1","text":"\u4e3aJupyter\u5236\u4f5c\u5185\u6838 in the documentation. \u7b80\u5355\u7684\u793a\u4f8b\u5185\u6838 IHaskell\u521b\u5efa\u8005\u535a\u5ba2\u5c97\u4f4d \u6839\u636e\u6d88\u606f\u89c4\u8303\u6d4b\u8bd5\u5185\u6838(\u6b63\u5728\u8fdb\u884c\u4e2d) \u6839\u636e\u89c4\u8303\u6d4b\u8bd5\u5185\u6838\u7684\u5de5\u5177(\u6b63\u5728\u8fdb\u884c\u4e2d)","title":"\u521b\u5efa\u65b0\u7684Jupyter\u5185\u6838"},{"location":"8.Kernels/Jupyter-NodeJS/","text":"Jupyter NodeJS \u00b6 \u8fd9\u662f Jupyter \u7684\u6838\u5fc3 \u5728\u708e\u70ed\u7684\u65f6\u5019\u5f97\u5230\u5b83\uff01\u6216\u67e5\u770b \u793a\u4f8b\u7b14\u8bb0\u672c \u9884\u5148\u8981\u6c42 \u00b6 IPython 3.x node ZeroMQ pkg-config \u5b89\u88c5 \u00b6 git clone https://github.com/notablemind/jupyter-nodejs.git cd jupyter-nodejs mkdir -p ~/.ipython/kernels/nodejs/ npm install && node install.js npm run build npm run build-ext jupyter console --kernel nodejs And viola! Also, in the iPython notebook: \u652f\u6301\u7684\u529f\u80fd \u00b6 tab-completion (both for variables and paths ) error reporting magics! The available extensions can be configured via package/config.js \u5b89\u88c5 \u00b6 node install.js [install-dir] will install the kernel.json file that ipython looks for. The default is for linux machines, ~/.ipython/kernels/nodejs/ . You will have to specify an install dir for Mac and Windows (see the docs for info about what that should be) BabelJS Magic for es6+ goodness \u00b6 %load_ext babel and then %% babel class Awesome { constructor () { console . log ( 'yeah!' ) } } Hovever: import ... syntax doesn't work because of live bindings foo, so just use require() normally and all will be well. \u901a\u8fc7 himera \u670d\u52a1\u5668\u8fdb\u884c Clojurescript \u7f16\u8bd1 \u00b6 %load_ext clojurescript http://himera-emh.herokuapp.com and then %%clojurescript ( clojurey goodness )","title":"Jupyter NodeJS"},{"location":"8.Kernels/Jupyter-NodeJS/#jupyter-nodejs","text":"\u8fd9\u662f Jupyter \u7684\u6838\u5fc3 \u5728\u708e\u70ed\u7684\u65f6\u5019\u5f97\u5230\u5b83\uff01\u6216\u67e5\u770b \u793a\u4f8b\u7b14\u8bb0\u672c","title":"Jupyter NodeJS"},{"location":"8.Kernels/Jupyter-NodeJS/#_1","text":"IPython 3.x node ZeroMQ pkg-config","title":"\u9884\u5148\u8981\u6c42"},{"location":"8.Kernels/Jupyter-NodeJS/#_2","text":"git clone https://github.com/notablemind/jupyter-nodejs.git cd jupyter-nodejs mkdir -p ~/.ipython/kernels/nodejs/ npm install && node install.js npm run build npm run build-ext jupyter console --kernel nodejs And viola! Also, in the iPython notebook:","title":"\u5b89\u88c5"},{"location":"8.Kernels/Jupyter-NodeJS/#_3","text":"tab-completion (both for variables and paths ) error reporting magics! The available extensions can be configured via package/config.js","title":"\u652f\u6301\u7684\u529f\u80fd"},{"location":"8.Kernels/Jupyter-NodeJS/#_4","text":"node install.js [install-dir] will install the kernel.json file that ipython looks for. The default is for linux machines, ~/.ipython/kernels/nodejs/ . You will have to specify an install dir for Mac and Windows (see the docs for info about what that should be)","title":"\u5b89\u88c5"},{"location":"8.Kernels/Jupyter-NodeJS/#babeljs-magic-for-es6-goodness","text":"%load_ext babel and then %% babel class Awesome { constructor () { console . log ( 'yeah!' ) } } Hovever: import ... syntax doesn't work because of live bindings foo, so just use require() normally and all will be well.","title":"BabelJS Magic for es6+ goodness"},{"location":"8.Kernels/Jupyter-NodeJS/#himera-clojurescript","text":"%load_ext clojurescript http://himera-emh.herokuapp.com and then %%clojurescript ( clojurey goodness )","title":"\u901a\u8fc7himera\u670d\u52a1\u5668\u8fdb\u884c Clojurescript \u7f16\u8bd1"},{"location":"8.Kernels/ijavascript/","text":"IJavascript \u00b6 IJavascript \u662f Jupyter \u7b14\u8bb0\u672c \u7684 Javascript \u5185\u6838. Jupyter \u7b14\u8bb0\u672c\u5c06\u5bcc\u6587\u672c\u6587\u6863\uff08\u5305\u62ec\u65b9\u7a0b\u5f0f\uff0c\u56fe\u5f62\u548c\u89c6\u9891\uff09\u7684\u521b\u5efa\u4e0e\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u76f8\u7ed3\u5408\u3002 \u4ee3\u7801\u7684\u6267\u884c\u662f\u901a\u8fc7\u5b9e\u73b0 Jupyter \u6d88\u606f\u4f20\u9012\u534f\u8bae \u7684\u5185\u6838\u6765\u6267\u884c\u7684. The IJavascript kernel executes Javascript code inside a Node.js session. And thus, it behaves as the Node.js REPL does, providing access to the Node.js standard library and to any installed npm modules. There are kernels available for Python , Julia , Ruby , Haskell and many other languages . \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 IJavascript \u5185\u6838\u7684\u793a\u4f8b\u7b14\u8bb0\u672c: \u901a\u544a \u00b6 Starting with IJavascript v5.0.11, it is possible to customise the output of an object based on its type. See the documentation on custom output for details. The use of $$mimer$$ and $$defaultMimer$$ to customise output is now deprecated. To avoid clutter in the global context, the use of $$async$$ , $$done$$ , $$mime$$ , $$html$$ , $$svg$$ , $$png$$ and $$jpeg$$ has also been deprecated and replaced with the global object $$ . \u4e3b\u8981\u7279\u70b9 \u00b6 Run Javascript code inside a Node.js session Hello, World! Asynchronous output Custom output for HTML , SVG , PNG , ... Autocompletion : press TAB to complete keywords and object properties Object inspection : press Shift-TAB to inspect an object and show its content or, if available, its documentation \u5b89\u88c5 \u00b6 IJavascript is distributed as an npm package and thus it requires: Node.js npm Depending on your use, other Jupyter tools will be necessary (e.g. Jupyter notebook). Note that IJavascript has been kept backwards-compatibility with IPython v1, so that it's possible to use the IPython notebook distributed in Ubuntu 14.04 LTS and Ubuntu 16.04 LTS. For other platforms not listed below, or if you find any problems with the instructions above, please, refer to the installation notes . Ubuntu \u00b6 To install IJavascript in Ubuntu 16.04 LTS, run: sudo apt-get install nodejs-legacy npm ipython ipython-notebook sudo npm install -g ijavascript ijsinstall Windows (\u5b98\u65b9 Python \u53d1\u884c\u7248) \u00b6 In the command line: pip3 install --upgrade pip pip3 install jupyter npm install -g ijavascript ijsinstall # Or run: %appdata%\\npm\\ijsinstall Then you can run jupyter notebook in your terminal to load Jupyter Notebook. When you create a new Jupyter Notebook, you should see the Javascript (Node) kernel available. Windows (anaconda \u5206\u5e03) \u00b6 Open the Anaconda prompt and run: conda install nodejs npm install -g ijavascript ijsinstall Then you can run jupyter notebook in your terminal to load Jupyter Notebook. When you create a new Jupyter Notebook, you should see the Javascript (Node) kernel available. macOS \u00b6 In macOS, Homebrew and pip can be used to install IJavascript and its prerequisites: ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" brew install pkg-config node zeromq sudo easy_install pip pip install --upgrade pyzmq jupyter npm install -g ijavascript ijsinstall \u7528\u6cd5 \u00b6 IJavascript provides 5 executables: ijsinstall , ijsnotebook , ijsconsole , ijskernel and ijs . Their purpose and basic use is described in the sections below. Please, refer to the usage notes for further details. ijsinstall : \u5185\u6838\u89c4\u8303\u5b89\u88c5\u7a0b\u5e8f \u00b6 'ijsinstall` registers the IJavascript kernel with Jupyter, so that other tools (e.g. the Jupyter notebook) can invoke it. The following command flags are recognised: --debug enable debug messages --help show this help --hide-undefined do not show undefined results --install=[local|global] install kernel for current user or globally --protocol=version set messaging protocol version, e.g. 5.0 --show-undefined show undefined results --spec-path=[none|full] set whether kernel spec uses full paths --startup-script=path run script on kernel startup (path can be a file or a folder) --version show kernel version --versions show kernel and library versions --working-dir=path set kernel working directory (default = current working directory) ijsnotebook : \u7b14\u8bb0\u672c \u00b6 \u8fd0\u884c ijsinstall \u540e\uff0cJupyter \u7b14\u8bb0\u672c\u7528\u6237\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u8c03\u7528 Jupyter \u7b14\u8bb0\u672c\u3002 \u63d0\u4f9b ijsnotebook \u662f\u4e3a\u4e86\u65b9\u4fbf\u7b2c 3 \u7248\u4e4b\u524d\u7684 IPython \u7b14\u8bb0\u672c\u7528\u6237\u3002 ijsnotebook \u662f ipython notebook \u7684\u5305\u88c5\u5668\u3002 \u5b83\u6269\u5c55\u4e86 ipython notebook \u63a5\u53d7\u7684\u547d\u4ee4\u6807\u5fd7\uff0c\u5982\u4e0b\u6240\u793a: --help show IJavascript and notebook help --ijs-debug enable debug messages --ijs-help show this help --ijs-hide-undefined do not show undefined results --ijs-install=[local|global] install kernel for current user or globally --ijs-protocol=version set protocol version, e.g. 5.0 --ijs-show-undefined show undefined results --ijs-spec-path=[none|full] set whether kernel spec uses full paths --ijs-startup-script=path run script on startup (path can be a file or a folder) --ijs-working-dir=path set kernel working directory (default = current working directory) --version show kernel version --versions show kernel and library versions ijsconsole : \u63a7\u5236\u53f0 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u63d0\u4f9b ijsconsole \u4f5c\u4e3a ipython console \u7684\u5305\u88c5\u3002 \u53ef\u8bc6\u522b\u4ee5\u4e0b\u547d\u4ee4\u6807\u5fd7: --help show IJavascript and notebook help --ijs-debug enable debug messages --ijs-help show this help --ijs-hide-undefined do not show undefined results --ijs-install=[local|global] install kernel for current user or globally --ijs-protocol=version set protocol version, e.g. 5.0 --ijs-show-undefined show undefined results --ijs-spec-path=[none|full] set whether kernel spec uses full paths --ijs-startup-script=path run script on startup (path can be a file or a folder) --ijs-working-dir=path set kernel working directory (default = current working directory) --version show kernel version --versions show kernel and library versions ijskernel : \u5185\u6838 \u00b6 ijskernel \u662f\u7531 Jupyter \u5de5\u5177\uff08\u4f8b\u5982\u7b14\u8bb0\u672c\uff09\u8c03\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5b83\u51fa\u73b0\u5728 ijsinstall \u4e3a IJavascript \u521b\u5efa\u7684\u5185\u6838\u89c4\u8303\u4e2d\u3002 \u9664\u975e\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u5185\u6838\u89c4\u8303\uff0c\u5426\u5219\u4e0d\u9700\u8981\u6b64\u547d\u4ee4\u3002 Usage : ijskernel [ options ] connection_file Options : -- debug enable debug messages -- hide - undefined do not show undefined results -- protocol = Major [. minor [. patch ]] set protocol version , e . g . 5.0 -- session - working - dir = path set session working directory -- show - undefined show undefined results -- startup - script = path run script on startup ( path can be a file or a folder ) ijs : \u5f03\u7528\u7684 CLI \u00b6 ijs is provided for backwards-compatibility. It will be removed in the next major-version update. Please, use ijsinstall or ijsnotebook instead. \u6350\u6b3e \u00b6 First of all, thank you for taking the time to contribute. Please, read CONTRIBUTING and use the issue tracker for any contributions: support requests, bug reports, enhancement requests, pull requests, submission of tutorials... TODO \u00b6 See the issue tracker and the TODO list in the packages jp-kernel and NEL for additional items.","title":"IJavascript"},{"location":"8.Kernels/ijavascript/#ijavascript","text":"IJavascript \u662f Jupyter \u7b14\u8bb0\u672c \u7684 Javascript \u5185\u6838. Jupyter \u7b14\u8bb0\u672c\u5c06\u5bcc\u6587\u672c\u6587\u6863\uff08\u5305\u62ec\u65b9\u7a0b\u5f0f\uff0c\u56fe\u5f62\u548c\u89c6\u9891\uff09\u7684\u521b\u5efa\u4e0e\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u76f8\u7ed3\u5408\u3002 \u4ee3\u7801\u7684\u6267\u884c\u662f\u901a\u8fc7\u5b9e\u73b0 Jupyter \u6d88\u606f\u4f20\u9012\u534f\u8bae \u7684\u5185\u6838\u6765\u6267\u884c\u7684. The IJavascript kernel executes Javascript code inside a Node.js session. And thus, it behaves as the Node.js REPL does, providing access to the Node.js standard library and to any installed npm modules. There are kernels available for Python , Julia , Ruby , Haskell and many other languages . \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 IJavascript \u5185\u6838\u7684\u793a\u4f8b\u7b14\u8bb0\u672c:","title":"IJavascript"},{"location":"8.Kernels/ijavascript/#_1","text":"Starting with IJavascript v5.0.11, it is possible to customise the output of an object based on its type. See the documentation on custom output for details. The use of $$mimer$$ and $$defaultMimer$$ to customise output is now deprecated. To avoid clutter in the global context, the use of $$async$$ , $$done$$ , $$mime$$ , $$html$$ , $$svg$$ , $$png$$ and $$jpeg$$ has also been deprecated and replaced with the global object $$ .","title":"\u901a\u544a"},{"location":"8.Kernels/ijavascript/#_2","text":"Run Javascript code inside a Node.js session Hello, World! Asynchronous output Custom output for HTML , SVG , PNG , ... Autocompletion : press TAB to complete keywords and object properties Object inspection : press Shift-TAB to inspect an object and show its content or, if available, its documentation","title":"\u4e3b\u8981\u7279\u70b9"},{"location":"8.Kernels/ijavascript/#_3","text":"IJavascript is distributed as an npm package and thus it requires: Node.js npm Depending on your use, other Jupyter tools will be necessary (e.g. Jupyter notebook). Note that IJavascript has been kept backwards-compatibility with IPython v1, so that it's possible to use the IPython notebook distributed in Ubuntu 14.04 LTS and Ubuntu 16.04 LTS. For other platforms not listed below, or if you find any problems with the instructions above, please, refer to the installation notes .","title":"\u5b89\u88c5"},{"location":"8.Kernels/ijavascript/#ubuntu","text":"To install IJavascript in Ubuntu 16.04 LTS, run: sudo apt-get install nodejs-legacy npm ipython ipython-notebook sudo npm install -g ijavascript ijsinstall","title":"Ubuntu"},{"location":"8.Kernels/ijavascript/#windows-python","text":"In the command line: pip3 install --upgrade pip pip3 install jupyter npm install -g ijavascript ijsinstall # Or run: %appdata%\\npm\\ijsinstall Then you can run jupyter notebook in your terminal to load Jupyter Notebook. When you create a new Jupyter Notebook, you should see the Javascript (Node) kernel available.","title":"Windows (\u5b98\u65b9 Python \u53d1\u884c\u7248)"},{"location":"8.Kernels/ijavascript/#windows-anaconda","text":"Open the Anaconda prompt and run: conda install nodejs npm install -g ijavascript ijsinstall Then you can run jupyter notebook in your terminal to load Jupyter Notebook. When you create a new Jupyter Notebook, you should see the Javascript (Node) kernel available.","title":"Windows (anaconda \u5206\u5e03)"},{"location":"8.Kernels/ijavascript/#macos","text":"In macOS, Homebrew and pip can be used to install IJavascript and its prerequisites: ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" brew install pkg-config node zeromq sudo easy_install pip pip install --upgrade pyzmq jupyter npm install -g ijavascript ijsinstall","title":"macOS"},{"location":"8.Kernels/ijavascript/#_4","text":"IJavascript provides 5 executables: ijsinstall , ijsnotebook , ijsconsole , ijskernel and ijs . Their purpose and basic use is described in the sections below. Please, refer to the usage notes for further details.","title":"\u7528\u6cd5"},{"location":"8.Kernels/ijavascript/#ijsinstall","text":"'ijsinstall` registers the IJavascript kernel with Jupyter, so that other tools (e.g. the Jupyter notebook) can invoke it. The following command flags are recognised: --debug enable debug messages --help show this help --hide-undefined do not show undefined results --install=[local|global] install kernel for current user or globally --protocol=version set messaging protocol version, e.g. 5.0 --show-undefined show undefined results --spec-path=[none|full] set whether kernel spec uses full paths --startup-script=path run script on kernel startup (path can be a file or a folder) --version show kernel version --versions show kernel and library versions --working-dir=path set kernel working directory (default = current working directory)","title":"ijsinstall: \u5185\u6838\u89c4\u8303\u5b89\u88c5\u7a0b\u5e8f"},{"location":"8.Kernels/ijavascript/#ijsnotebook","text":"\u8fd0\u884c ijsinstall \u540e\uff0cJupyter \u7b14\u8bb0\u672c\u7528\u6237\u53ef\u4ee5\u50cf\u5f80\u5e38\u4e00\u6837\u8c03\u7528 Jupyter \u7b14\u8bb0\u672c\u3002 \u63d0\u4f9b ijsnotebook \u662f\u4e3a\u4e86\u65b9\u4fbf\u7b2c 3 \u7248\u4e4b\u524d\u7684 IPython \u7b14\u8bb0\u672c\u7528\u6237\u3002 ijsnotebook \u662f ipython notebook \u7684\u5305\u88c5\u5668\u3002 \u5b83\u6269\u5c55\u4e86 ipython notebook \u63a5\u53d7\u7684\u547d\u4ee4\u6807\u5fd7\uff0c\u5982\u4e0b\u6240\u793a: --help show IJavascript and notebook help --ijs-debug enable debug messages --ijs-help show this help --ijs-hide-undefined do not show undefined results --ijs-install=[local|global] install kernel for current user or globally --ijs-protocol=version set protocol version, e.g. 5.0 --ijs-show-undefined show undefined results --ijs-spec-path=[none|full] set whether kernel spec uses full paths --ijs-startup-script=path run script on startup (path can be a file or a folder) --ijs-working-dir=path set kernel working directory (default = current working directory) --version show kernel version --versions show kernel and library versions","title":"ijsnotebook: \u7b14\u8bb0\u672c"},{"location":"8.Kernels/ijavascript/#ijsconsole","text":"\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\u63d0\u4f9b ijsconsole \u4f5c\u4e3a ipython console \u7684\u5305\u88c5\u3002 \u53ef\u8bc6\u522b\u4ee5\u4e0b\u547d\u4ee4\u6807\u5fd7: --help show IJavascript and notebook help --ijs-debug enable debug messages --ijs-help show this help --ijs-hide-undefined do not show undefined results --ijs-install=[local|global] install kernel for current user or globally --ijs-protocol=version set protocol version, e.g. 5.0 --ijs-show-undefined show undefined results --ijs-spec-path=[none|full] set whether kernel spec uses full paths --ijs-startup-script=path run script on startup (path can be a file or a folder) --ijs-working-dir=path set kernel working directory (default = current working directory) --version show kernel version --versions show kernel and library versions","title":"ijsconsole: \u63a7\u5236\u53f0"},{"location":"8.Kernels/ijavascript/#ijskernel","text":"ijskernel \u662f\u7531 Jupyter \u5de5\u5177\uff08\u4f8b\u5982\u7b14\u8bb0\u672c\uff09\u8c03\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5b83\u51fa\u73b0\u5728 ijsinstall \u4e3a IJavascript \u521b\u5efa\u7684\u5185\u6838\u89c4\u8303\u4e2d\u3002 \u9664\u975e\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u5185\u6838\u89c4\u8303\uff0c\u5426\u5219\u4e0d\u9700\u8981\u6b64\u547d\u4ee4\u3002 Usage : ijskernel [ options ] connection_file Options : -- debug enable debug messages -- hide - undefined do not show undefined results -- protocol = Major [. minor [. patch ]] set protocol version , e . g . 5.0 -- session - working - dir = path set session working directory -- show - undefined show undefined results -- startup - script = path run script on startup ( path can be a file or a folder )","title":"ijskernel: \u5185\u6838"},{"location":"8.Kernels/ijavascript/#ijs-cli","text":"ijs is provided for backwards-compatibility. It will be removed in the next major-version update. Please, use ijsinstall or ijsnotebook instead.","title":"ijs: \u5f03\u7528\u7684 CLI"},{"location":"8.Kernels/ijavascript/#_5","text":"First of all, thank you for taking the time to contribute. Please, read CONTRIBUTING and use the issue tracker for any contributions: support requests, bug reports, enhancement requests, pull requests, submission of tutorials...","title":"\u6350\u6b3e"},{"location":"8.Kernels/ijavascript/#todo","text":"See the issue tracker and the TODO list in the packages jp-kernel and NEL for additional items.","title":"TODO"},{"location":"8.Kernels/itypescript/","text":"ITypescript \u00b6 ITypescript is an npm package that implements a TypeScript kernel for the Jupyter notebook , as a modification of IJavascript kernel . Jupyter \u7b14\u8bb0\u672c\u5c06\u5bcc\u6587\u672c\u6587\u6863\uff08\u5305\u62ec\u65b9\u7a0b\u5f0f\uff0c\u56fe\u5f62\u548c\u89c6\u9891\uff09\u7684\u521b\u5efa\u4e0e\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u76f8\u7ed3\u5408\u3002 \u4ee3\u7801\u7684\u6267\u884c\u662f\u901a\u8fc7\u5b9e\u73b0 IPython/Jupyter \u6d88\u606f\u4f20\u9012\u534f\u8bae \u7684\u5185\u6838\u6765\u6267\u884c\u7684. There are kernels available for Python , Julia , Ruby , Haskell and many other languages . Again, We have to emphasize these code is originally come from IJavascript kernel . We converted the code into typescript, and modified tiny fraction of it. \u4e3b\u8981\u7279\u70b9 \u00b6 Run TypeScript code within a node.js session Following examples are translation of IJavascript 's examples, from javascript to typescript. Hello, World! Graphical output for HTML , SVG , PNG , ... Asynchronous output Autocompletion : press TAB to complete keywords and object properties Object inspection : press Shift-TAB to inspect an object and show its content or, if available, its documentation \u5b89\u88c5 \u00b6 \u5148\u51b3\u6761\u4ef6 \u00b6 \u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Typescript\uff0c\u5219\u5e94\u9996\u5148\u5b89\u88c5 node.js \u3002 \u6309\u7167 Node.js \u4e0b\u8f7d\u9875\u9762 \u6216 Node.js \u5b89\u88c5\u9875\u9762 \u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c. \u6b64\u5916\uff0c\u4f60\u5fc5\u987b\u5b89\u88c5 jupyter .\u6309\u7167 \u5b89\u88c5 Jupyter \u7b14\u8bb0\u672c \u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c. \u5355\u673a \u00b6 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u952e\u5165\u4ee5\u4e0b shell \u547d\u4ee4\uff08Linux/Unix/Mac\uff09\u5b89\u88c5 ITypescript: sudo -H npm install -g itypescript \u5bf9\u4e8e Windows\uff0c\u627e\u5230 node.js prompt \uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff0c\u7136\u540e\u8f93\u5165: npm install -g itypescript Jupyter \u5185\u6838 \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5168\u5c40\u5b89\u88c5 itypescript \u5185\u6838: sudo -H its --install = global \u6216\u8005\u60a8\u53ef\u4ee5\u5728\u672c\u5730\u5b89\u88c5\u5b83: its --install = local \u5982\u9700\u8fdb\u4e00\u6b65\u4f7f\u7528\uff0c\u8bf7\u67e5\u770b usage.md \u6350\u6b3e \u00b6 First of all, thank you for taking the time to contribute. Please, read CONTRIBUTING and use the issue tracker for any contributions: support requests, bug reports, enhancement requests, pull requests, submission of tutorials...","title":"ITypescript"},{"location":"8.Kernels/itypescript/#itypescript","text":"ITypescript is an npm package that implements a TypeScript kernel for the Jupyter notebook , as a modification of IJavascript kernel . Jupyter \u7b14\u8bb0\u672c\u5c06\u5bcc\u6587\u672c\u6587\u6863\uff08\u5305\u62ec\u65b9\u7a0b\u5f0f\uff0c\u56fe\u5f62\u548c\u89c6\u9891\uff09\u7684\u521b\u5efa\u4e0e\u8bb8\u591a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4ee3\u7801\u6267\u884c\u76f8\u7ed3\u5408\u3002 \u4ee3\u7801\u7684\u6267\u884c\u662f\u901a\u8fc7\u5b9e\u73b0 IPython/Jupyter \u6d88\u606f\u4f20\u9012\u534f\u8bae \u7684\u5185\u6838\u6765\u6267\u884c\u7684. There are kernels available for Python , Julia , Ruby , Haskell and many other languages . Again, We have to emphasize these code is originally come from IJavascript kernel . We converted the code into typescript, and modified tiny fraction of it.","title":"ITypescript"},{"location":"8.Kernels/itypescript/#_1","text":"Run TypeScript code within a node.js session Following examples are translation of IJavascript 's examples, from javascript to typescript. Hello, World! Graphical output for HTML , SVG , PNG , ... Asynchronous output Autocompletion : press TAB to complete keywords and object properties Object inspection : press Shift-TAB to inspect an object and show its content or, if available, its documentation","title":"\u4e3b\u8981\u7279\u70b9"},{"location":"8.Kernels/itypescript/#_2","text":"","title":"\u5b89\u88c5"},{"location":"8.Kernels/itypescript/#_3","text":"\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f Typescript\uff0c\u5219\u5e94\u9996\u5148\u5b89\u88c5 node.js \u3002 \u6309\u7167 Node.js \u4e0b\u8f7d\u9875\u9762 \u6216 Node.js \u5b89\u88c5\u9875\u9762 \u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c. \u6b64\u5916\uff0c\u4f60\u5fc5\u987b\u5b89\u88c5 jupyter .\u6309\u7167 \u5b89\u88c5 Jupyter \u7b14\u8bb0\u672c \u7684\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c.","title":"\u5148\u51b3\u6761\u4ef6"},{"location":"8.Kernels/itypescript/#_4","text":"\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u952e\u5165\u4ee5\u4e0b shell \u547d\u4ee4\uff08Linux/Unix/Mac\uff09\u5b89\u88c5 ITypescript: sudo -H npm install -g itypescript \u5bf9\u4e8e Windows\uff0c\u627e\u5230 node.js prompt \uff0c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff0c\u7136\u540e\u8f93\u5165: npm install -g itypescript","title":"\u5355\u673a"},{"location":"8.Kernels/itypescript/#jupyter","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5168\u5c40\u5b89\u88c5 itypescript \u5185\u6838: sudo -H its --install = global \u6216\u8005\u60a8\u53ef\u4ee5\u5728\u672c\u5730\u5b89\u88c5\u5b83: its --install = local \u5982\u9700\u8fdb\u4e00\u6b65\u4f7f\u7528\uff0c\u8bf7\u67e5\u770b usage.md","title":"Jupyter \u5185\u6838"},{"location":"8.Kernels/itypescript/#_5","text":"First of all, thank you for taking the time to contribute. Please, read CONTRIBUTING and use the issue tracker for any contributions: support requests, bug reports, enhancement requests, pull requests, submission of tutorials...","title":"\u6350\u6b3e"},{"location":"9.jupyterlab/","text":"JupyterLab \u00b6 JupyterLab \u57fa\u4e8e Web \u7684\u4ea4\u4e92\u5f0f\u548c\u53ef\u91cd\u73b0\u8ba1\u7b97\u7684\u53ef\u6269\u5c55\u73af\u5883 Jupyter \u7b14\u8bb0\u672c\u548c\u67b6\u6784\u3002 \u76ee\u524d\u5df2\u4e3a\u7528\u6237\u51c6\u5907 \u3002 JupyterLab \u662f Project Jupyter \u7684\u4e0b\u4e00\u4ee3\u7528\u6237\u754c\u9762\uff0c\u5728\u7075\u6d3b\u800c\u5f3a\u5927\u7684\u7528\u6237\u754c\u9762\u4e2d\u63d0\u4f9b\u7ecf\u5178 Jupyter \u7b14\u8bb0\u672c\uff08\u7b14\u8bb0\u672c\uff0c\u7ec8\u7aef\uff0c\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6587\u4ef6\u6d4f\u89c8\u5668\uff0c\u4e30\u5bcc\u8f93\u51fa\u7b49\uff09\u7684\u6240\u6709\u719f\u6089\u6784\u5efa\u6a21\u5757\u3002 JupyterLab \u6700\u7ec8\u5c06\u53d6\u4ee3\u7ecf\u5178\u7684 Jupyter \u7b14\u8bb0\u672c\u3002 JupyterLab can be extended using npm packages that use our public APIs. To find JupyterLab extensions, search for the npm keyword jupyterlab-extension or the GitHub topic jupyterlab-extension . To learn more about extensions, see the user documentation . \u5f53\u524d\u7684 JupyterLab \u7248\u672c\u9002\u7528\u4e8e\u4e00\u822c\u7528\u9014\uff0c\u6269\u5c55 API \u5c06\u7ee7\u7eed\u4f7f\u7528\u4e3a JupyterLab \u6269\u5c55\u5f00\u53d1\u4eba\u5458\u8fdb\u5316\u3002 \u9605\u8bfb ReadTheDocs \u4e0a\u7684\u6700\u65b0\u7248\u672c\u6587\u6863. \u5165\u95e8 \u00b6 \u5b89\u88c5 \u00b6 install JupyterLab using conda , pip , or pipenv . Conda is recommended if you have no installation preference. Project installation instructions from the git sources are available in the contributor documentation . conda \u00b6 Conda is an open source package management system and environment management system that runs on Windows, macOS, and Linux. Conda packages and distributes software for any language, and by default uses the Anaconda repository managed by Anaconda Inc. To install conda, please see the conda installation instructions . Install the JupyterLab conda package with: conda install -c conda-forge jupyterlab pip \u00b6 pip is a package management system for installing and updating Python packages, and comes with any Python installation. On Ubuntu and Fedora Linux, use the system package manager to install the python3-pip package. _The Hitchhiker's Guide to Python_provides guidance on how to install Python ; Another option is to install Python directly from python.org . We suggest you upgrade pip before using it to install other programs. JupyterLab requires Python 3.5 or higher. When using Windows with Python version 3.5 or higher, use the Python Launcher for Windows to use pip with Python version 3: py -3 -m pip install jupyterlab If the system has a python3 command (standard on Unix-like systems), install with the comand: python3 -m pip install jupyterlab Using the python command directly is another option, but this will use the current version of Python (which may be Python version 2 or version 3 if both are installed): python -m pip install jupyterlab Some systems have a pip3 command that has the same effect as python3 -m pip and/or a pip command that behaves the same as python -m pip . Adding --user after pip install will install the files to a local user install directory (typically ~/.local/ or %APPDATA%\\Python on Windows) instead of the system-wide directory. This can be helpful, especially if writing to the system-wide directory is not permitted. However, the user-level bin directory must be added to the PATH environment variable in order to launch jupyter lab . pipenv \u00b6 Pipenv provides users and developers of applications with an easy method to setup a working environment, however Python must be installed first. See the pipenv installation documentation to use Pipenv if it is not installed. pipenv can be installed as: pipenv install jupyterlab pipenv shell or from a git checkout: pipenv install git+git://github.com/jupyterlab/jupyterlab.git#egg = jupyterlab pipenv shell When using pipenv , in order to launch jupyter lab , activate the project's virtualenv. For example, in the directory where pipenv 's Pipfile and Pipfile.lock live (i.e., where the above commands were run): pipenv shell jupyter lab \u4f7f\u7528\u4ee5\u524d\u7248\u672c\u7684 Jupyter Notebook \u8fdb\u884c\u5b89\u88c5 \u00b6 When using a version of Jupyter Notebook earlier than 5.3, the following command must be run after installation to enable the JupyterLab server extension: jupyter serverextension enable --py jupyterlab --sys-prefix \u8fd0\u884c \u00b6 Start up JupyterLab using: jupyter lab JupyterLab will open automatically in the browser. See the documentation for additional details. \u5148\u51b3\u6761\u4ef6\u548c\u652f\u6301\u7684\u6d4f\u89c8\u5668 \u00b6 Jupyter notebook version 4.3 or later is required. To check the notebook version, run the command: jupyter notebook --version The latest versions of the following browsers are currently known to work : Firefox Chrome Safari See our documentation for additional details. \u53d1\u5c55 \u00b6 \u7279\u7ea6 \u00b6 To contribute to the project, please read the contributor documentation . JupyterLab follows the Jupyter Community Guides . \u6269\u5c55 JupyterLab \u00b6 To start developing an extension, see the developer documentation and the API docs . \u6267\u7167 \u00b6 JupyterLab uses a shared copyright model that enables all contributors to maintain the copyright on their contributions. All code is licensed under the terms of the revised BSD license . \u7403\u961f \u00b6 JupyterLab is part of Project Jupyter and is developed by an open community. The maintenance team is assisted by a much larger group of contributors to JupyterLab and Project Jupyter as a whole. JupyterLab's current maintainers are listed in alphabetical order, with affiliation, and main areas of contribution: Chris Colbert, Project Jupyter (co-creator, application/low-level architecture, technical leadership, vision, PhosphorJS) Afshin Darian, Two Sigma (co-creator, application/high-level architecture, prolific contributions throughout the code base). Jessica Forde, Project Jupyter (demo, documentation) Tim George, Cal Poly (UI/UX design, strategy, management, user needs analysis) Brian Granger, Cal Poly (co-creator, strategy, vision, management, UI/UX design, architecture). Jason Grout, Bloomberg (co-creator, vision, general development). Fernando Perez, UC Berkeley (co-creator, vision). Ian Rose, UC Berkeley (Real-time collaboration, document architecture). Saul Shanabrook, Quansight (general development, extensions) Steven Silvester, JPMorgan Chase (co-creator, release management, packaging, prolific contributions throughout the code base). Maintainer emeritus: Cameron Oelsen, Cal Poly (UI/UX design). This list is provided to give the reader context on who we are and how our team functions. To be listed, please submit a pull request with your information. \u83b7\u5f97\u5e2e\u52a9 \u00b6 We encourage you to ask questions on the Discourse forum . A question answered there can become a useful resource for others. Please use the GitHub issues page to provide feedback or submit a bug report. \u6bcf\u5468\u5f00\u53d1\u4f1a\u8bae \u00b6 We have videoconference meetings every week where we discuss what we have been working on and get feedback from one another. Anyone is welcome to attend, if they would like to discuss a topic or just to listen in. When: Wednesdays 9AM PT Where: calpoly/jupyter Zoom What: Meeting notes on Dropbox Paper","title":"JupyterLab"},{"location":"9.jupyterlab/#jupyterlab","text":"JupyterLab \u57fa\u4e8e Web \u7684\u4ea4\u4e92\u5f0f\u548c\u53ef\u91cd\u73b0\u8ba1\u7b97\u7684\u53ef\u6269\u5c55\u73af\u5883 Jupyter \u7b14\u8bb0\u672c\u548c\u67b6\u6784\u3002 \u76ee\u524d\u5df2\u4e3a\u7528\u6237\u51c6\u5907 \u3002 JupyterLab \u662f Project Jupyter \u7684\u4e0b\u4e00\u4ee3\u7528\u6237\u754c\u9762\uff0c\u5728\u7075\u6d3b\u800c\u5f3a\u5927\u7684\u7528\u6237\u754c\u9762\u4e2d\u63d0\u4f9b\u7ecf\u5178 Jupyter \u7b14\u8bb0\u672c\uff08\u7b14\u8bb0\u672c\uff0c\u7ec8\u7aef\uff0c\u6587\u672c\u7f16\u8f91\u5668\uff0c\u6587\u4ef6\u6d4f\u89c8\u5668\uff0c\u4e30\u5bcc\u8f93\u51fa\u7b49\uff09\u7684\u6240\u6709\u719f\u6089\u6784\u5efa\u6a21\u5757\u3002 JupyterLab \u6700\u7ec8\u5c06\u53d6\u4ee3\u7ecf\u5178\u7684 Jupyter \u7b14\u8bb0\u672c\u3002 JupyterLab can be extended using npm packages that use our public APIs. To find JupyterLab extensions, search for the npm keyword jupyterlab-extension or the GitHub topic jupyterlab-extension . To learn more about extensions, see the user documentation . \u5f53\u524d\u7684 JupyterLab \u7248\u672c\u9002\u7528\u4e8e\u4e00\u822c\u7528\u9014\uff0c\u6269\u5c55 API \u5c06\u7ee7\u7eed\u4f7f\u7528\u4e3a JupyterLab \u6269\u5c55\u5f00\u53d1\u4eba\u5458\u8fdb\u5316\u3002 \u9605\u8bfb ReadTheDocs \u4e0a\u7684\u6700\u65b0\u7248\u672c\u6587\u6863.","title":"JupyterLab"},{"location":"9.jupyterlab/#_1","text":"","title":"\u5165\u95e8"},{"location":"9.jupyterlab/#_2","text":"install JupyterLab using conda , pip , or pipenv . Conda is recommended if you have no installation preference. Project installation instructions from the git sources are available in the contributor documentation .","title":"\u5b89\u88c5"},{"location":"9.jupyterlab/#conda","text":"Conda is an open source package management system and environment management system that runs on Windows, macOS, and Linux. Conda packages and distributes software for any language, and by default uses the Anaconda repository managed by Anaconda Inc. To install conda, please see the conda installation instructions . Install the JupyterLab conda package with: conda install -c conda-forge jupyterlab","title":"conda"},{"location":"9.jupyterlab/#pip","text":"pip is a package management system for installing and updating Python packages, and comes with any Python installation. On Ubuntu and Fedora Linux, use the system package manager to install the python3-pip package. _The Hitchhiker's Guide to Python_provides guidance on how to install Python ; Another option is to install Python directly from python.org . We suggest you upgrade pip before using it to install other programs. JupyterLab requires Python 3.5 or higher. When using Windows with Python version 3.5 or higher, use the Python Launcher for Windows to use pip with Python version 3: py -3 -m pip install jupyterlab If the system has a python3 command (standard on Unix-like systems), install with the comand: python3 -m pip install jupyterlab Using the python command directly is another option, but this will use the current version of Python (which may be Python version 2 or version 3 if both are installed): python -m pip install jupyterlab Some systems have a pip3 command that has the same effect as python3 -m pip and/or a pip command that behaves the same as python -m pip . Adding --user after pip install will install the files to a local user install directory (typically ~/.local/ or %APPDATA%\\Python on Windows) instead of the system-wide directory. This can be helpful, especially if writing to the system-wide directory is not permitted. However, the user-level bin directory must be added to the PATH environment variable in order to launch jupyter lab .","title":"pip"},{"location":"9.jupyterlab/#pipenv","text":"Pipenv provides users and developers of applications with an easy method to setup a working environment, however Python must be installed first. See the pipenv installation documentation to use Pipenv if it is not installed. pipenv can be installed as: pipenv install jupyterlab pipenv shell or from a git checkout: pipenv install git+git://github.com/jupyterlab/jupyterlab.git#egg = jupyterlab pipenv shell When using pipenv , in order to launch jupyter lab , activate the project's virtualenv. For example, in the directory where pipenv 's Pipfile and Pipfile.lock live (i.e., where the above commands were run): pipenv shell jupyter lab","title":"pipenv"},{"location":"9.jupyterlab/#jupyter-notebook","text":"When using a version of Jupyter Notebook earlier than 5.3, the following command must be run after installation to enable the JupyterLab server extension: jupyter serverextension enable --py jupyterlab --sys-prefix","title":"\u4f7f\u7528\u4ee5\u524d\u7248\u672c\u7684 Jupyter Notebook \u8fdb\u884c\u5b89\u88c5"},{"location":"9.jupyterlab/#_3","text":"Start up JupyterLab using: jupyter lab JupyterLab will open automatically in the browser. See the documentation for additional details.","title":"\u8fd0\u884c"},{"location":"9.jupyterlab/#_4","text":"Jupyter notebook version 4.3 or later is required. To check the notebook version, run the command: jupyter notebook --version The latest versions of the following browsers are currently known to work : Firefox Chrome Safari See our documentation for additional details.","title":"\u5148\u51b3\u6761\u4ef6\u548c\u652f\u6301\u7684\u6d4f\u89c8\u5668"},{"location":"9.jupyterlab/#_5","text":"","title":"\u53d1\u5c55"},{"location":"9.jupyterlab/#_6","text":"To contribute to the project, please read the contributor documentation . JupyterLab follows the Jupyter Community Guides .","title":"\u7279\u7ea6"},{"location":"9.jupyterlab/#jupyterlab_1","text":"To start developing an extension, see the developer documentation and the API docs .","title":"\u6269\u5c55 JupyterLab"},{"location":"9.jupyterlab/#_7","text":"JupyterLab uses a shared copyright model that enables all contributors to maintain the copyright on their contributions. All code is licensed under the terms of the revised BSD license .","title":"\u6267\u7167"},{"location":"9.jupyterlab/#_8","text":"JupyterLab is part of Project Jupyter and is developed by an open community. The maintenance team is assisted by a much larger group of contributors to JupyterLab and Project Jupyter as a whole. JupyterLab's current maintainers are listed in alphabetical order, with affiliation, and main areas of contribution: Chris Colbert, Project Jupyter (co-creator, application/low-level architecture, technical leadership, vision, PhosphorJS) Afshin Darian, Two Sigma (co-creator, application/high-level architecture, prolific contributions throughout the code base). Jessica Forde, Project Jupyter (demo, documentation) Tim George, Cal Poly (UI/UX design, strategy, management, user needs analysis) Brian Granger, Cal Poly (co-creator, strategy, vision, management, UI/UX design, architecture). Jason Grout, Bloomberg (co-creator, vision, general development). Fernando Perez, UC Berkeley (co-creator, vision). Ian Rose, UC Berkeley (Real-time collaboration, document architecture). Saul Shanabrook, Quansight (general development, extensions) Steven Silvester, JPMorgan Chase (co-creator, release management, packaging, prolific contributions throughout the code base). Maintainer emeritus: Cameron Oelsen, Cal Poly (UI/UX design). This list is provided to give the reader context on who we are and how our team functions. To be listed, please submit a pull request with your information.","title":"\u7403\u961f"},{"location":"9.jupyterlab/#_9","text":"We encourage you to ask questions on the Discourse forum . A question answered there can become a useful resource for others. Please use the GitHub issues page to provide feedback or submit a bug report.","title":"\u83b7\u5f97\u5e2e\u52a9"},{"location":"9.jupyterlab/#_10","text":"We have videoconference meetings every week where we discuss what we have been working on and get feedback from one another. Anyone is welcome to attend, if they would like to discuss a topic or just to listen in. When: Wednesdays 9AM PT Where: calpoly/jupyter Zoom What: Meeting notes on Dropbox Paper","title":"\u6bcf\u5468\u5f00\u53d1\u4f1a\u8bae"},{"location":"91.Visual-Studio/","text":"\u5728 Visual Studio \u4ee3\u7801\u4e2d\u4f7f\u7528 Jupyter \u7b14\u8bb0\u672c \u00b6 Jupyter\uff08\u4ee5\u524d\u79f0\u4e3a IPython\uff09\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u4e00\u4e2a\u79f0\u4e3a\u7b14\u8bb0\u672c\u7684\u753b\u5e03\u4e0a\u8f7b\u677e\u7ec4\u5408 Markdown \u6587\u672c\u548c\u53ef\u6267\u884c Python \u6e90\u4ee3\u7801\u3002 \u8981\u4f7f\u7528 Jupyter \u7b14\u8bb0\u672c\uff0c\u5fc5\u987b\u5728 VS Code \u6216\u5176\u4ed6\u5b89\u88c5\u4e86 Jupyter \u8f6f\u4ef6\u5305\u7684 Python \u73af\u5883\u4e2d\u6fc0\u6d3b Anaconda \u73af\u5883\u3002 \u8981\u9009\u62e9\u73af\u5883\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684 Python\uff1aSelect Interpreter \u547d\u4ee4\uff08 \u21e7\u2318P \uff09\u3002 \u6fc0\u6d3b\u9002\u5f53\u7684\u73af\u5883\u540e\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u548c\u8fd0\u884c\u7c7b\u4f3c Jupyter \u7684\u4ee3\u7801\u5355\u5143\uff0c\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u4ee5\u8fd0\u884c\u4ee3\u7801\u5355\u5143\uff0c\u76f4\u63a5\u6253\u5f00 Jupyter \u7b14\u8bb0\u672c\uff0c\u5e76\u5c06 Python \u6587\u4ef6\u5bfc\u51fa\u4e3a Jupyter \u7b14\u8bb0\u672c\u3002 Jupyter \u4ee3\u7801\u5355\u5143\u683c \u00b6 \u60a8\u53ef\u4ee5\u4f7f\u7528 \uff03%% \u6ce8\u91ca\u5728 Python \u4ee3\u7801\u4e2d\u5b9a\u4e49\u7c7b\u4f3c Jupyter \u7684\u4ee3\u7801\u5355\u5143: #%% msg = \"Hello World\" print ( msg ) \u5f53 Python \u6269\u5c55\u68c0\u6d4b\u5230\u4ee3\u7801\u5355\u5143\u65f6\uff0c\u5b83\u4f1a\u5728\u6ce8\u91ca\u4e0a\u65b9\u6dfb\u52a0\u4e00\u4e2a Run Cell \u6216 Run All Cells CodeLens: Jupyter \u5728 VS Code \u7f16\u8f91\u5668\u4e2d\u4e3a\u4ee3\u7801\u5355\u5143\u88c5\u9970 \u9009\u62e9\u4efb\u4e00\u547d\u4ee4\u90fd\u4f1a\u542f\u52a8 Jupyter\uff08\u5982\u679c\u9700\u8981\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u5206\u949f\uff09\uff0c\u7136\u540e\u5728 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u8fd0\u884c\u5355\u5143\u683c\u3002 \u5728 Python Interactive \u7a97\u53e3\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u5355\u5143 \u00b6 \u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 Python \u8fd0\u884c\u4ee3\u7801\u5355\u5143\uff1a\u5728 Python \u7ec8\u7aef\u4e2d\u8fd0\u884c\u9009\u62e9/\u884c\u547d\u4ee4\uff08Shift + Enter\uff09\u3002 \u4f7f\u7528\u6b64\u547d\u4ee4\u540e\uff0cPython \u6269\u5c55\u4f1a\u81ea\u52a8\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u683c\u3002 \u5982\u679c\u60a8\u4f4d\u4e8e\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u5355\u5143\u683c\u4e2d\uff0c\u5219\u6269\u5c55\u4f1a\u81ea\u52a8\u4e3a\u65b0\u5355\u5143\u683c\u63d2\u5165\u53e6\u4e00\u4e2a\uff03%%\u5206\u9694\u7b26\uff0c\u6a21\u4eff Jupyter \u7b14\u8bb0\u672c\u7684\u884c\u4e3a\u3002 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3 \u00b6 \u4e0a\u4e00\u8282\u4e2d\u63d0\u5230\u7684 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u53ef\u4ee5\u7528\u4f5c\u5177\u6709\u4efb\u610f\u4ee3\u7801\u7684\u72ec\u7acb\u63a7\u5236\u53f0\uff08\u5e26\u6216\u4e0d\u5e26\u4ee3\u7801\u5355\u5143\uff09\u3002 \u8981\u5c06\u7a97\u53e3\u7528\u4f5c\u63a7\u5236\u53f0\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684 Python\uff1aShow Python Interactive \u7a97\u53e3\u547d\u4ee4\u5c06\u5176\u6253\u5f00\u3002 \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165\u4ee3\u7801\uff0c\u4f7f\u7528 Enter \u8f6c\u5230\u65b0\u884c\uff0c\u6309 Shift + Enter \u8fd0\u884c\u4ee3\u7801\u3002 \u8981\u5c06\u7a97\u53e3\u4e0e\u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684\u201c\u5728 Python \u4ea4\u4e92\u4e2d\u8fd0\u884c\u5f53\u524d\u6587\u4ef6\u201d\u7a97\u53e3\u547d\u4ee4\u3002 \u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668 \u00b6 \u60a8\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u5c06 Jupyter \u7b14\u8bb0\u672c\u4e2d\u7684\u5bc6\u96c6\u8ba1\u7b97\u5378\u8f7d\u5230\u5176\u4ed6\u8ba1\u7b97\u673a\u3002 \u8fde\u63a5\u540e\uff0c\u4ee3\u7801\u5355\u5143\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u800c\u4e0d\u662f\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u3002 \u8981\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\uff1a: \u8fd0\u884c Python\uff1a\u4ece\u547d\u4ee4\u9009\u9879\u677f\uff08\u21e7\u2318P\uff09\u6307\u5b9a Jupyter \u670d\u52a1\u5668 URI \u547d\u4ee4\u3002 \u51fa\u73b0\u63d0\u793a\u65f6\uff0c\u63d0\u4f9b\u670d\u52a1\u5668\u7684 URI\uff08\u4e3b\u673a\u540d\uff09\u4ee5\u53ca\u5305\u542b\u5728\uff1ftoken = URL \u53c2\u6570\u4e2d\u7684\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u3002 (\u5982\u679c\u5728\u542f\u7528\u4e86\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u7684 VS Code \u7ec8\u7aef\u4e2d\u542f\u52a8\u670d\u52a1\u5668\uff0c\u5219\u5e26\u6709\u4ee4\u724c\u7684 URL \u901a\u5e38\u4f1a\u663e\u793a\u5728\u60a8\u53ef\u4ee5\u590d\u5236\u5b83\u7684\u7ec8\u7aef\u8f93\u51fa\u4e2d\u3002) \u63d0\u793a\u63d0\u4f9b Jupyter \u670d\u52a1\u5668 URI Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u901a\u8fc7\u663e\u793a URI\uff08\u5728\u4e0b\u9762\u7684\u56fe\u50cf\u4e2d\u6a21\u7cca\uff09\u6765\u6307\u793a\u4ee3\u7801\u7684\u8fd0\u884c\u4f4d\u7f6e: Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u663e\u793a\u4ee3\u7801\u5728\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u4e0a\u8fd0\u884c \u6253\u5f00 Jupyter \u7b14\u8bb0\u672c \u00b6 \u5f53\u60a8\u6fc0\u6d3b\u5b89\u88c5\u4e86 Jupyter \u7684\u73af\u5883\u65f6\uff0c\u53ef\u4ee5\u5c06 VS \u4ee3\u7801\u4e2d\u7684 Jupyter \u7b14\u8bb0\u672c\u6587\u4ef6\uff08.ipynb\uff09\u5bfc\u5165\u4e3a Python \u4ee3\u7801\u3002 \u5bfc\u5165\u6587\u4ef6\u540e\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd0\u884c\u4efb\u4f55\u5176\u4ed6 Python \u6587\u4ef6\u4e00\u6837\u8fd0\u884c\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 VS Code \u8c03\u8bd5\u5668\u3002 \u5728 VS Code \u4e2d\u6253\u5f00\u548c\u8c03\u8bd5\u7b14\u8bb0\u672c\u662f\u67e5\u627e\u548c\u89e3\u51b3\u4ee3\u7801\u9519\u8bef\u7684\u4fbf\u6377\u65b9\u5f0f\uff0c\u8fd9\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u5f88\u96be\u76f4\u63a5\u8fdb\u884c\u3002 \u5f53\u60a8\u6253\u5f00\u7b14\u8bb0\u672c\u6587\u4ef6\u65f6\uff0cPython \u6269\u5c55\u4f1a\u63d0\u793a\u60a8\u5c06\u7b14\u8bb0\u672c\u5bfc\u5165\u4e3a Python \u4ee3\u7801\u6587\u4ef6\uff1a \u63d0\u793a\u5bfc\u5165 Jupyter \u7b14\u8bb0\u672c\u6587\u4ef6 \u9009\u62e9 Import\uff0c\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u7136\u540e VS Code \u5728\u65e0\u6807\u9898\u6587\u4ef6\u4e2d\u6253\u5f00\u8f6c\u6362\u540e\u7684\u7b14\u8bb0\u672c\u3002 \u7b14\u8bb0\u672c\u7684\u5355\u5143\u683c\u5728 Python \u6587\u4ef6\u4e2d\u7528\uff03%%\u6ce8\u91ca\u5206\u9694; Markdown \u5355\u5143\u683c\u5b8c\u5168\u8f6c\u6362\u4e3a\u4ee5\uff03%% [markdown]\u5f00\u5934\u7684\u6ce8\u91ca\uff0c\u5e76\u5728\u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u5448\u73b0\u4e3a HTML \u4ee5\u53ca\u4ee3\u7801\u548c\u8f93\u51fa\uff08\u5982\u56fe\u5f62\uff09: Jupyter \u7b14\u8bb0\u672c\u5728 VS Code \u548c Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u8fd0\u884c \u5982\u679c\u5728\u4e0d\u5bfc\u5165\u7684\u60c5\u51b5\u4e0b\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u5c06\u663e\u793a\u4e3a\u7eaf\u6587\u672c\u3002 \u7b2c\u4e00\u6b21\u5728\u7b14\u8bb0\u672c\u6587\u4ef6\u4e2d\u8fd0\u884c\u4ee3\u7801\u65f6\uff0cPython\u6269\u5c55\u4f1a\u542f\u52a8Jupyter\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u542f\u52a8\uff0c\u5e76\u4e14Python Interactive\u7a97\u53e3\u53ef\u80fd\u4f1a\u663e\u793a\u4ee3\u7801\u7684\u7ed3\u679c\u3002 \u8c03\u8bd5 Jupyter \u7b14\u8bb0\u672c \u00b6 Visual Studio \u4ee3\u7801\u8c03\u8bd5\u5668\u4f7f\u60a8\u53ef\u4ee5\u5355\u6b65\u6267\u884c\u4ee3\u7801\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u68c0\u67e5\u72b6\u6001\u548c\u5206\u6790\u95ee\u9898\u3002 \u4f7f\u7528\u8c03\u8bd5\u5668\u662f\u67e5\u627e\u548c\u66f4\u6b63\u7b14\u8bb0\u672c\u4ee3\u7801\u4e2d\u7684\u95ee\u9898\u7684\u6709\u7528\u65b9\u6cd5\u3002 \u5728 VS Code \u4e2d\uff0c\u6fc0\u6d3b\u5b89\u88c5\u4e86 Jupyter \u7684 Python \u73af\u5883\uff0c\u5982\u672c\u6587\u5f00\u5934\u6240\u8ff0\u3002 \u5c06\u7b14\u8bb0\u672c\u7684.ipynb \u6587\u4ef6\u5bfc\u5165 VS \u4ee3\u7801\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u8ff0\u3002 (\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u57fa\u4e8e\u4e91\u7684 Jupyter \u73af\u5883\uff08\u5982 Azure \u7b14\u8bb0\u672c\uff09\uff0c\u8bf7\u5148\u4e0b\u8f7d\u8be5\u6587\u4ef6\u3002) \u6309\u7167\u8bf4\u660e\u914d\u7f6e\u548c\u8fd0\u884c\u8c03\u8bd5\u5668\uff0c\u5982\u914d\u7f6e\u5e76\u8fd0\u884c\u8c03\u8bd5\u5668\uff0c\u5f53\u7136\u4f7f\u7528\u5bfc\u5165\u7684.ipynb \u6587\u4ef6\uff0c\u5e76\u5728\u7b14\u8bb0\u672c\u4ee3\u7801\u4e2d\u7684\u9002\u5f53\u4f4d\u7f6e\u8bbe\u7f6e\u65ad\u70b9\u3002 \u8981\u719f\u6089 VS \u4ee3\u7801\u7684\u5e38\u89c4\u8c03\u8bd5\u529f\u80fd\uff0c\u4f8b\u5982\u68c0\u67e5\u53d8\u91cf\uff0c\u8bbe\u7f6e\u65ad\u70b9\u548c\u5176\u4ed6\u6d3b\u52a8\uff0c\u8bf7\u67e5\u770b VS \u4ee3\u7801\u8c03\u8bd5\u3002 \u5f53\u60a8\u53d1\u73b0\u95ee\u9898\u65f6\uff0c\u8bf7\u505c\u6b62\u8c03\u8bd5\u5668\uff0c\u66f4\u6b63\u4ee3\u7801\uff0c\u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u518d\u6b21\u8fd0\u884c\u8c03\u8bd5\u5668\u3002 \u5982\u679c\u60a8\u5bf9\u6240\u6709\u4ee3\u7801\u90fd\u6b63\u786e\u611f\u5230\u6ee1\u610f\u3002 \u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u4ee5\u4e0b\u90e8\u5206\u4e2d\u7684\u8bf4\u660e\u5bfc\u51fa\u7b14\u8bb0\u672c\u3002 \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u7b14\u8bb0\u672c\u4e0a\u8f7d\u5230\u666e\u901a\u7684 Jupyter \u73af\u5883\u4e2d\u3002 \u5bfc\u51fa Jupyter \u7b14\u8bb0\u672c \u00b6 \u9664\u4e86\u6253\u5f00 Jupyter \u7b14\u8bb0\u672c\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\uff08\u21e7\u2318P\uff09\u4e2d\u7684\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5c06\u5185\u5bb9\u4ece VS Code \u5bfc\u51fa\u5230 Jupyter \u7b14\u8bb0\u672c\uff08\u6269\u5c55\u540d\u4e3a.ipynb\uff09\u3002 Python\uff1a\u5c06\u5f53\u524d Python \u6587\u4ef6\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u4f7f\u7528\uff03%%\u548c\uff03%% [markdown]\u5206\u9694\u7b26\u4ece\u5f53\u524d\u6587\u4ef6\u7684\u5185\u5bb9\u521b\u5efa Jupyter \u7b14\u8bb0\u672c\uff0c\u4ee5\u6307\u5b9a\u5176\u5404\u81ea\u7684\u5355\u5143\u683c\u7c7b\u578b\u3002 Python\uff1a\u5c06\u5f53\u524d Python \u6587\u4ef6\u548c\u8f93\u51fa\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u6839\u636e\u5f53\u524d\u6587\u4ef6\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a Jupyter \u7b14\u8bb0\u672c\uff0c\u5e76\u5305\u542b\u4ee3\u7801\u5355\u5143\u683c\u7684\u8f93\u51fa\u3002 Python\uff1a\u5c06 Python Interactive \u7a97\u53e3\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u4ece Python \u4ea4\u4e92\u7a97\u53e3\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a Jupyter \u7b14\u8bb0\u672c\u3002 \u5bfc\u51fa\u5185\u5bb9\u540e\uff0cVS Code \u4f1a\u663e\u793a\u4e00\u4e2a\u63d0\u793a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u63d0\u793a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u7b14\u8bb0\u672c\u3002","title":"\u5728 Visual Studio \u4ee3\u7801\u4e2d\u4f7f\u7528 Jupyter \u7b14\u8bb0\u672c"},{"location":"91.Visual-Studio/#visual-studio-jupyter","text":"Jupyter\uff08\u4ee5\u524d\u79f0\u4e3a IPython\uff09\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u5b83\u5141\u8bb8\u60a8\u5728\u4e00\u4e2a\u79f0\u4e3a\u7b14\u8bb0\u672c\u7684\u753b\u5e03\u4e0a\u8f7b\u677e\u7ec4\u5408 Markdown \u6587\u672c\u548c\u53ef\u6267\u884c Python \u6e90\u4ee3\u7801\u3002 \u8981\u4f7f\u7528 Jupyter \u7b14\u8bb0\u672c\uff0c\u5fc5\u987b\u5728 VS Code \u6216\u5176\u4ed6\u5b89\u88c5\u4e86 Jupyter \u8f6f\u4ef6\u5305\u7684 Python \u73af\u5883\u4e2d\u6fc0\u6d3b Anaconda \u73af\u5883\u3002 \u8981\u9009\u62e9\u73af\u5883\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684 Python\uff1aSelect Interpreter \u547d\u4ee4\uff08 \u21e7\u2318P \uff09\u3002 \u6fc0\u6d3b\u9002\u5f53\u7684\u73af\u5883\u540e\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u548c\u8fd0\u884c\u7c7b\u4f3c Jupyter \u7684\u4ee3\u7801\u5355\u5143\uff0c\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u4ee5\u8fd0\u884c\u4ee3\u7801\u5355\u5143\uff0c\u76f4\u63a5\u6253\u5f00 Jupyter \u7b14\u8bb0\u672c\uff0c\u5e76\u5c06 Python \u6587\u4ef6\u5bfc\u51fa\u4e3a Jupyter \u7b14\u8bb0\u672c\u3002","title":"\u5728 Visual Studio \u4ee3\u7801\u4e2d\u4f7f\u7528 Jupyter \u7b14\u8bb0\u672c"},{"location":"91.Visual-Studio/#jupyter","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 \uff03%% \u6ce8\u91ca\u5728 Python \u4ee3\u7801\u4e2d\u5b9a\u4e49\u7c7b\u4f3c Jupyter \u7684\u4ee3\u7801\u5355\u5143: #%% msg = \"Hello World\" print ( msg ) \u5f53 Python \u6269\u5c55\u68c0\u6d4b\u5230\u4ee3\u7801\u5355\u5143\u65f6\uff0c\u5b83\u4f1a\u5728\u6ce8\u91ca\u4e0a\u65b9\u6dfb\u52a0\u4e00\u4e2a Run Cell \u6216 Run All Cells CodeLens: Jupyter \u5728 VS Code \u7f16\u8f91\u5668\u4e2d\u4e3a\u4ee3\u7801\u5355\u5143\u88c5\u9970 \u9009\u62e9\u4efb\u4e00\u547d\u4ee4\u90fd\u4f1a\u542f\u52a8 Jupyter\uff08\u5982\u679c\u9700\u8981\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u5206\u949f\uff09\uff0c\u7136\u540e\u5728 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u8fd0\u884c\u5355\u5143\u683c\u3002","title":"Jupyter \u4ee3\u7801\u5355\u5143\u683c"},{"location":"91.Visual-Studio/#python-interactive","text":"\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 Python \u8fd0\u884c\u4ee3\u7801\u5355\u5143\uff1a\u5728 Python \u7ec8\u7aef\u4e2d\u8fd0\u884c\u9009\u62e9/\u884c\u547d\u4ee4\uff08Shift + Enter\uff09\u3002 \u4f7f\u7528\u6b64\u547d\u4ee4\u540e\uff0cPython \u6269\u5c55\u4f1a\u81ea\u52a8\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u683c\u3002 \u5982\u679c\u60a8\u4f4d\u4e8e\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u5355\u5143\u683c\u4e2d\uff0c\u5219\u6269\u5c55\u4f1a\u81ea\u52a8\u4e3a\u65b0\u5355\u5143\u683c\u63d2\u5165\u53e6\u4e00\u4e2a\uff03%%\u5206\u9694\u7b26\uff0c\u6a21\u4eff Jupyter \u7b14\u8bb0\u672c\u7684\u884c\u4e3a\u3002","title":"\u5728 Python Interactive \u7a97\u53e3\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u5355\u5143"},{"location":"91.Visual-Studio/#python","text":"\u4e0a\u4e00\u8282\u4e2d\u63d0\u5230\u7684 Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u53ef\u4ee5\u7528\u4f5c\u5177\u6709\u4efb\u610f\u4ee3\u7801\u7684\u72ec\u7acb\u63a7\u5236\u53f0\uff08\u5e26\u6216\u4e0d\u5e26\u4ee3\u7801\u5355\u5143\uff09\u3002 \u8981\u5c06\u7a97\u53e3\u7528\u4f5c\u63a7\u5236\u53f0\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684 Python\uff1aShow Python Interactive \u7a97\u53e3\u547d\u4ee4\u5c06\u5176\u6253\u5f00\u3002 \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165\u4ee3\u7801\uff0c\u4f7f\u7528 Enter \u8f6c\u5230\u65b0\u884c\uff0c\u6309 Shift + Enter \u8fd0\u884c\u4ee3\u7801\u3002 \u8981\u5c06\u7a97\u53e3\u4e0e\u6587\u4ef6\u4e00\u8d77\u4f7f\u7528\uff0c\u8bf7\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\u4e2d\u7684\u201c\u5728 Python \u4ea4\u4e92\u4e2d\u8fd0\u884c\u5f53\u524d\u6587\u4ef6\u201d\u7a97\u53e3\u547d\u4ee4\u3002","title":"Python \u4ea4\u4e92\u5f0f\u7a97\u53e3"},{"location":"91.Visual-Studio/#jupyter_1","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u5c06 Jupyter \u7b14\u8bb0\u672c\u4e2d\u7684\u5bc6\u96c6\u8ba1\u7b97\u5378\u8f7d\u5230\u5176\u4ed6\u8ba1\u7b97\u673a\u3002 \u8fde\u63a5\u540e\uff0c\u4ee3\u7801\u5355\u5143\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u800c\u4e0d\u662f\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u3002 \u8981\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\uff1a: \u8fd0\u884c Python\uff1a\u4ece\u547d\u4ee4\u9009\u9879\u677f\uff08\u21e7\u2318P\uff09\u6307\u5b9a Jupyter \u670d\u52a1\u5668 URI \u547d\u4ee4\u3002 \u51fa\u73b0\u63d0\u793a\u65f6\uff0c\u63d0\u4f9b\u670d\u52a1\u5668\u7684 URI\uff08\u4e3b\u673a\u540d\uff09\u4ee5\u53ca\u5305\u542b\u5728\uff1ftoken = URL \u53c2\u6570\u4e2d\u7684\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u3002 (\u5982\u679c\u5728\u542f\u7528\u4e86\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u7684 VS Code \u7ec8\u7aef\u4e2d\u542f\u52a8\u670d\u52a1\u5668\uff0c\u5219\u5e26\u6709\u4ee4\u724c\u7684 URL \u901a\u5e38\u4f1a\u663e\u793a\u5728\u60a8\u53ef\u4ee5\u590d\u5236\u5b83\u7684\u7ec8\u7aef\u8f93\u51fa\u4e2d\u3002) \u63d0\u793a\u63d0\u4f9b Jupyter \u670d\u52a1\u5668 URI Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u901a\u8fc7\u663e\u793a URI\uff08\u5728\u4e0b\u9762\u7684\u56fe\u50cf\u4e2d\u6a21\u7cca\uff09\u6765\u6307\u793a\u4ee3\u7801\u7684\u8fd0\u884c\u4f4d\u7f6e: Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u663e\u793a\u4ee3\u7801\u5728\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668\u4e0a\u8fd0\u884c","title":"\u8fde\u63a5\u5230\u8fdc\u7a0b Jupyter \u670d\u52a1\u5668"},{"location":"91.Visual-Studio/#jupyter_2","text":"\u5f53\u60a8\u6fc0\u6d3b\u5b89\u88c5\u4e86 Jupyter \u7684\u73af\u5883\u65f6\uff0c\u53ef\u4ee5\u5c06 VS \u4ee3\u7801\u4e2d\u7684 Jupyter \u7b14\u8bb0\u672c\u6587\u4ef6\uff08.ipynb\uff09\u5bfc\u5165\u4e3a Python \u4ee3\u7801\u3002 \u5bfc\u5165\u6587\u4ef6\u540e\uff0c\u60a8\u53ef\u4ee5\u50cf\u8fd0\u884c\u4efb\u4f55\u5176\u4ed6 Python \u6587\u4ef6\u4e00\u6837\u8fd0\u884c\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 VS Code \u8c03\u8bd5\u5668\u3002 \u5728 VS Code \u4e2d\u6253\u5f00\u548c\u8c03\u8bd5\u7b14\u8bb0\u672c\u662f\u67e5\u627e\u548c\u89e3\u51b3\u4ee3\u7801\u9519\u8bef\u7684\u4fbf\u6377\u65b9\u5f0f\uff0c\u8fd9\u5728 Jupyter \u7b14\u8bb0\u672c\u4e2d\u5f88\u96be\u76f4\u63a5\u8fdb\u884c\u3002 \u5f53\u60a8\u6253\u5f00\u7b14\u8bb0\u672c\u6587\u4ef6\u65f6\uff0cPython \u6269\u5c55\u4f1a\u63d0\u793a\u60a8\u5c06\u7b14\u8bb0\u672c\u5bfc\u5165\u4e3a Python \u4ee3\u7801\u6587\u4ef6\uff1a \u63d0\u793a\u5bfc\u5165 Jupyter \u7b14\u8bb0\u672c\u6587\u4ef6 \u9009\u62e9 Import\uff0c\u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u7136\u540e VS Code \u5728\u65e0\u6807\u9898\u6587\u4ef6\u4e2d\u6253\u5f00\u8f6c\u6362\u540e\u7684\u7b14\u8bb0\u672c\u3002 \u7b14\u8bb0\u672c\u7684\u5355\u5143\u683c\u5728 Python \u6587\u4ef6\u4e2d\u7528\uff03%%\u6ce8\u91ca\u5206\u9694; Markdown \u5355\u5143\u683c\u5b8c\u5168\u8f6c\u6362\u4e3a\u4ee5\uff03%% [markdown]\u5f00\u5934\u7684\u6ce8\u91ca\uff0c\u5e76\u5728\u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u5448\u73b0\u4e3a HTML \u4ee5\u53ca\u4ee3\u7801\u548c\u8f93\u51fa\uff08\u5982\u56fe\u5f62\uff09: Jupyter \u7b14\u8bb0\u672c\u5728 VS Code \u548c Python \u4ea4\u4e92\u5f0f\u7a97\u53e3\u4e2d\u8fd0\u884c \u5982\u679c\u5728\u4e0d\u5bfc\u5165\u7684\u60c5\u51b5\u4e0b\u6253\u5f00\u6587\u4ef6\uff0c\u5b83\u5c06\u663e\u793a\u4e3a\u7eaf\u6587\u672c\u3002 \u7b2c\u4e00\u6b21\u5728\u7b14\u8bb0\u672c\u6587\u4ef6\u4e2d\u8fd0\u884c\u4ee3\u7801\u65f6\uff0cPython\u6269\u5c55\u4f1a\u542f\u52a8Jupyter\u670d\u52a1\u5668\u3002 \u670d\u52a1\u5668\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u624d\u80fd\u542f\u52a8\uff0c\u5e76\u4e14Python Interactive\u7a97\u53e3\u53ef\u80fd\u4f1a\u663e\u793a\u4ee3\u7801\u7684\u7ed3\u679c\u3002","title":"\u6253\u5f00 Jupyter \u7b14\u8bb0\u672c"},{"location":"91.Visual-Studio/#jupyter_3","text":"Visual Studio \u4ee3\u7801\u8c03\u8bd5\u5668\u4f7f\u60a8\u53ef\u4ee5\u5355\u6b65\u6267\u884c\u4ee3\u7801\uff0c\u8bbe\u7f6e\u65ad\u70b9\uff0c\u68c0\u67e5\u72b6\u6001\u548c\u5206\u6790\u95ee\u9898\u3002 \u4f7f\u7528\u8c03\u8bd5\u5668\u662f\u67e5\u627e\u548c\u66f4\u6b63\u7b14\u8bb0\u672c\u4ee3\u7801\u4e2d\u7684\u95ee\u9898\u7684\u6709\u7528\u65b9\u6cd5\u3002 \u5728 VS Code \u4e2d\uff0c\u6fc0\u6d3b\u5b89\u88c5\u4e86 Jupyter \u7684 Python \u73af\u5883\uff0c\u5982\u672c\u6587\u5f00\u5934\u6240\u8ff0\u3002 \u5c06\u7b14\u8bb0\u672c\u7684.ipynb \u6587\u4ef6\u5bfc\u5165 VS \u4ee3\u7801\uff0c\u5982\u4e0a\u4e00\u8282\u6240\u8ff0\u3002 (\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u57fa\u4e8e\u4e91\u7684 Jupyter \u73af\u5883\uff08\u5982 Azure \u7b14\u8bb0\u672c\uff09\uff0c\u8bf7\u5148\u4e0b\u8f7d\u8be5\u6587\u4ef6\u3002) \u6309\u7167\u8bf4\u660e\u914d\u7f6e\u548c\u8fd0\u884c\u8c03\u8bd5\u5668\uff0c\u5982\u914d\u7f6e\u5e76\u8fd0\u884c\u8c03\u8bd5\u5668\uff0c\u5f53\u7136\u4f7f\u7528\u5bfc\u5165\u7684.ipynb \u6587\u4ef6\uff0c\u5e76\u5728\u7b14\u8bb0\u672c\u4ee3\u7801\u4e2d\u7684\u9002\u5f53\u4f4d\u7f6e\u8bbe\u7f6e\u65ad\u70b9\u3002 \u8981\u719f\u6089 VS \u4ee3\u7801\u7684\u5e38\u89c4\u8c03\u8bd5\u529f\u80fd\uff0c\u4f8b\u5982\u68c0\u67e5\u53d8\u91cf\uff0c\u8bbe\u7f6e\u65ad\u70b9\u548c\u5176\u4ed6\u6d3b\u52a8\uff0c\u8bf7\u67e5\u770b VS \u4ee3\u7801\u8c03\u8bd5\u3002 \u5f53\u60a8\u53d1\u73b0\u95ee\u9898\u65f6\uff0c\u8bf7\u505c\u6b62\u8c03\u8bd5\u5668\uff0c\u66f4\u6b63\u4ee3\u7801\uff0c\u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u518d\u6b21\u8fd0\u884c\u8c03\u8bd5\u5668\u3002 \u5982\u679c\u60a8\u5bf9\u6240\u6709\u4ee3\u7801\u90fd\u6b63\u786e\u611f\u5230\u6ee1\u610f\u3002 \u4fdd\u5b58\u6587\u4ef6\uff0c\u7136\u540e\u6309\u7167\u4ee5\u4e0b\u90e8\u5206\u4e2d\u7684\u8bf4\u660e\u5bfc\u51fa\u7b14\u8bb0\u672c\u3002 \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u7b14\u8bb0\u672c\u4e0a\u8f7d\u5230\u666e\u901a\u7684 Jupyter \u73af\u5883\u4e2d\u3002","title":"\u8c03\u8bd5 Jupyter \u7b14\u8bb0\u672c"},{"location":"91.Visual-Studio/#jupyter_4","text":"\u9664\u4e86\u6253\u5f00 Jupyter \u7b14\u8bb0\u672c\u4e4b\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u9009\u9879\u677f\uff08\u21e7\u2318P\uff09\u4e2d\u7684\u4ee5\u4e0b\u547d\u4ee4\u4e4b\u4e00\u5c06\u5185\u5bb9\u4ece VS Code \u5bfc\u51fa\u5230 Jupyter \u7b14\u8bb0\u672c\uff08\u6269\u5c55\u540d\u4e3a.ipynb\uff09\u3002 Python\uff1a\u5c06\u5f53\u524d Python \u6587\u4ef6\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u4f7f\u7528\uff03%%\u548c\uff03%% [markdown]\u5206\u9694\u7b26\u4ece\u5f53\u524d\u6587\u4ef6\u7684\u5185\u5bb9\u521b\u5efa Jupyter \u7b14\u8bb0\u672c\uff0c\u4ee5\u6307\u5b9a\u5176\u5404\u81ea\u7684\u5355\u5143\u683c\u7c7b\u578b\u3002 Python\uff1a\u5c06\u5f53\u524d Python \u6587\u4ef6\u548c\u8f93\u51fa\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u6839\u636e\u5f53\u524d\u6587\u4ef6\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a Jupyter \u7b14\u8bb0\u672c\uff0c\u5e76\u5305\u542b\u4ee3\u7801\u5355\u5143\u683c\u7684\u8f93\u51fa\u3002 Python\uff1a\u5c06 Python Interactive \u7a97\u53e3\u5bfc\u51fa\u4e3a Jupyter Notebook\uff1a\u4ece Python \u4ea4\u4e92\u7a97\u53e3\u7684\u5185\u5bb9\u521b\u5efa\u4e00\u4e2a Jupyter \u7b14\u8bb0\u672c\u3002 \u5bfc\u51fa\u5185\u5bb9\u540e\uff0cVS Code \u4f1a\u663e\u793a\u4e00\u4e2a\u63d0\u793a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8be5\u63d0\u793a\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u7b14\u8bb0\u672c\u3002","title":"\u5bfc\u51fa Jupyter \u7b14\u8bb0\u672c"}]}